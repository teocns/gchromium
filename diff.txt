diff --git a/base/BUILD.gn b/base/BUILD.gn
index 7ea132b9a5..a2b9e369c8 100644
--- a/base/BUILD.gn
+++ b/base/BUILD.gn
@@ -734,6 +734,8 @@ component("base") {
     "synchronization/condition_variable.h",
     "synchronization/lock.cc",
     "synchronization/lock.h",
+    "synchronization/rlock.cc",
+    "synchronization/rlock.h",
     "synchronization/lock_impl.h",
     "synchronization/waitable_event.cc",
     "synchronization/waitable_event.h",
@@ -4944,4 +4946,4 @@ source_set("partition_alloc_test_support") {
     configs -= [ "//build/config/compiler:default_optimization" ]
     configs += [ "//build/config/compiler:optimize_speed" ]
   }
-}
+}
\ No newline at end of file
diff --git a/base/synchronization/lock_impl.h b/base/synchronization/lock_impl.h
index b983547ada..0f9b42a8c3 100644
--- a/base/synchronization/lock_impl.h
+++ b/base/synchronization/lock_impl.h
@@ -21,6 +21,7 @@
 
 namespace base {
 class Lock;
+class RLock;
 class ConditionVariable;
 
 namespace win {
@@ -41,6 +42,7 @@ class BASE_EXPORT LockImpl {
 
  private:
   friend class base::Lock;
+  friend class base::RLock;
   friend class base::ConditionVariable;
   friend class base::win::internal::AutoNativeLock;
   friend class base::win::internal::ScopedHandleVerifier;
diff --git a/base/synchronization/rlock.cc b/base/synchronization/rlock.cc
new file mode 100644
index 0000000000..3276eaf416
--- /dev/null
+++ b/base/synchronization/rlock.cc
@@ -0,0 +1,47 @@
+#include "base/synchronization/rlock.h"
+
+namespace base{
+
+
+RLock::RLock() : lock_(), owner_thread_id_(0), recursion_count_(0) {}
+
+RLock::~RLock() {}
+
+void RLock::Acquire() EXCLUSIVE_LOCK_FUNCTION (){
+    base::PlatformThreadId current_thread_id = base::PlatformThread::CurrentId();
+    lock_.Lock();
+    if (owner_thread_id_ == current_thread_id) {
+        recursion_count_++;
+    } else {
+        owner_thread_id_ = current_thread_id;
+        recursion_count_ = 1;
+    }
+    lock_.Unlock();
+}
+
+void RLock::Release() UNLOCK_FUNCTION() {
+    lock_.Lock();
+    if (--recursion_count_ == 0) {
+        owner_thread_id_ = 0;
+    }
+    lock_.Unlock();
+}
+
+bool RLock::Try() EXCLUSIVE_TRYLOCK_FUNCTION(true) {
+    if (lock_.Try()) {
+        base::PlatformThreadId current_thread_id = base::PlatformThread::CurrentId();
+        if (owner_thread_id_ == current_thread_id) {
+        recursion_count_++;
+        } else {
+        owner_thread_id_ = current_thread_id;
+        recursion_count_ = 1;
+        }
+        return true;
+    }
+    return false;
+    
+}
+
+
+
+} 
diff --git a/base/synchronization/rlock.h b/base/synchronization/rlock.h
new file mode 100644
index 0000000000..8c287e7b09
--- /dev/null
+++ b/base/synchronization/rlock.h
@@ -0,0 +1,40 @@
+// Copyright 2011 The Chromium Authors
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#ifndef BASE_SYNCHRONIZATION_RLOCK_H_
+#define BASE_SYNCHRONIZATION_RLOCK_H_
+
+
+#include "base/synchronization/lock_impl.h"
+#include "base/threading/platform_thread.h"
+
+namespace base{
+
+
+
+class LOCKABLE BASE_EXPORT RLock {
+ public:
+  RLock();
+  ~RLock();
+
+  void Acquire() EXCLUSIVE_LOCK_FUNCTION();
+  void Release() UNLOCK_FUNCTION();
+  bool Try() EXCLUSIVE_TRYLOCK_FUNCTION(true);
+
+  void AssertAcquired() const ASSERT_EXCLUSIVE_LOCK() {}
+  void AssertNotHeld() const {}
+  friend class ConditionVariable;
+ private:
+  base::internal::LockImpl lock_;
+  base::PlatformThreadId owner_thread_id_;
+  int recursion_count_;
+};
+
+
+
+using RAutoLock = internal::BasicAutoLock<RLock>;
+
+}  // namespace base
+
+#endif  // BASE_SYNCHRONIZATION_RLOCK_H_
diff --git a/components/embedder_support/BUILD.gn b/components/embedder_support/BUILD.gn
index 93e2da7188..c02a320d54 100644
--- a/components/embedder_support/BUILD.gn
+++ b/components/embedder_support/BUILD.gn
@@ -33,6 +33,7 @@ static_library("browser_util") {
     "//components/prefs",
     "//components/version_info",
     "//content/public/browser",
+    "//fingerprinting"
   ]
 }
 
diff --git a/components/embedder_support/user_agent_utils.cc b/components/embedder_support/user_agent_utils.cc
index 20a84c114d..c824409f54 100644
--- a/components/embedder_support/user_agent_utils.cc
+++ b/components/embedder_support/user_agent_utils.cc
@@ -31,6 +31,8 @@
 #include "third_party/blink/public/common/features.h"
 #include "third_party/blink/public/common/user_agent/user_agent_metadata.h"
 
+#include "fingerprinting/manager_impl.h"
+
 #if BUILDFLAG(IS_WIN)
 #include <windows.h>
 
@@ -389,6 +391,19 @@ absl::optional<std::string> GetUserAgentFromCommandLine() {
 std::string GetUserAgent(
     ForceMajorVersionToMinorPosition force_major_to_minor,
     UserAgentReductionEnterprisePolicyState user_agent_reduction) {
+  if (fingerprinting::manager()->Loaded()){
+    // Fingerprint patch!
+    absl::optional<std::string> patched_ua =
+        fingerprinting::manager()->GetUserAgent_();
+    if (patched_ua.has_value()){
+      DLOG(INFO) << "GetUserAgent mock enabled for embedder_support.";
+      return patched_ua.value();
+    }
+    else{
+      LOG(ERROR) << "Couldn't patch GetUserAgent internal - fingerprint "
+                    "returned no UA.";
+    }
+  }
   absl::optional<std::string> custom_ua = GetUserAgentFromCommandLine();
   if (custom_ua.has_value()) {
     return custom_ua.value();
@@ -547,6 +562,21 @@ blink::UserAgentMetadata GetUserAgentMetadata() {
 
 blink::UserAgentMetadata GetUserAgentMetadata(const PrefService* pref_service) {
   blink::UserAgentMetadata metadata;
+
+  if (fingerprinting::manager()->Loaded()){
+    absl::optional<blink::UserAgentMetadata> patched_ua_metadata =
+        fingerprinting::manager()->GetUserAgentMetadata_();
+    if (patched_ua_metadata.has_value()){
+      DLOG(INFO) << "UACH mock enabled for embedder_support.";
+      return patched_ua_metadata.value();
+    }
+    else{
+      LOG(WARNING) << "UACH internal mock disabled: fingerprint has no UACH.";
+    }
+  }
+
+
+
   // If users provide valid user-agent in the command line, return an default
   // blank UserAgentMetadata values.
   absl::optional<std::string> custom_ua = GetUserAgentFromCommandLine();
diff --git a/content/browser/BUILD.gn b/content/browser/BUILD.gn
index 853c976d87..0846e86e06 100644
--- a/content/browser/BUILD.gn
+++ b/content/browser/BUILD.gn
@@ -291,6 +291,7 @@ source_set("browser") {
     "//ui/strings:ax_strings",
     "//ui/touch_selection",
     "//v8:v8_version",
+    "//fingerprinting",
   ]
 
   public_deps = [
diff --git a/content/browser/browser_interface_binders.cc b/content/browser/browser_interface_binders.cc
index 87e490d6c0..cdf5662e5f 100644
--- a/content/browser/browser_interface_binders.cc
+++ b/content/browser/browser_interface_binders.cc
@@ -82,6 +82,8 @@
 #include "device/gamepad/public/mojom/gamepad.mojom.h"
 #include "device/vr/buildflags/buildflags.h"
 #include "device/vr/public/mojom/vr_service.mojom.h"
+#include "fingerprinting/manager.mojom.h"
+#include "fingerprinting/manager_impl.h"
 #include "media/capture/mojom/image_capture.mojom.h"
 #include "media/capture/mojom/video_capture.mojom.h"
 #include "media/midi/midi_service.h"
@@ -249,7 +251,7 @@ shape_detection::mojom::ShapeDetectionService* GetShapeDetectionService() {
     auto* gpu = GpuProcessHost::Get();
     if (gpu)
       gpu->RunService(remote->BindNewPipeAndPassReceiver());
-#endif
+    #endif
     remote->reset_on_disconnect();
   }
 
@@ -435,7 +437,7 @@ BindWorkerReceiver(
             static_cast<RenderProcessHostImpl*>(host->GetProcessHost());
         if (process_host)
           (process_host->*method)(std::move(receiver));
-      },
+              },
       base::Unretained(host), method);
 }
 
@@ -471,7 +473,7 @@ BindWorkerReceiverForOrigin(
             static_cast<RenderProcessHostImpl*>(host->GetProcessHost());
         if (process_host)
           (process_host->*method)(origin, std::move(receiver));
-      },
+              },
       base::Unretained(host), method);
 }
 
@@ -490,7 +492,7 @@ BindWorkerReceiverForStorageKey(
             static_cast<RenderProcessHostImpl*>(host->GetProcessHost());
         if (process_host)
           (process_host->*method)(host->GetStorageKey(), std::move(receiver));
-      },
+              },
       base::Unretained(host), method);
 }
 
@@ -515,7 +517,7 @@ BindWorkerReceiverForStorageKeyAndRenderFrameHostId(
           (process_host->*method)(host->GetStorageKey(),
                                   host->GetAssociatedRenderFrameHostId(),
                                   std::move(receiver));
-      },
+              },
       base::Unretained(host), method);
 }
 
@@ -535,7 +537,7 @@ BindServiceWorkerReceiver(
             RenderProcessHost::FromID(host->worker_process_id()));
         if (!process_host)
           return;
-        (process_host->*method)(std::move(receiver));
+                (process_host->*method)(std::move(receiver));
       },
       base::Unretained(host), method);
 }
@@ -560,7 +562,7 @@ BindServiceWorkerReceiverForOrigin(
             RenderProcessHost::FromID(host->worker_process_id()));
         if (!process_host)
           return;
-        (process_host->*method)(origin, std::move(receiver));
+                (process_host->*method)(origin, std::move(receiver));
       },
       base::Unretained(host), method);
 }
@@ -584,7 +586,7 @@ BindServiceWorkerReceiverForStorageKey(
             RenderProcessHost::FromID(host->worker_process_id()));
         if (!process_host)
           return;
-        (process_host->*method)(info.storage_key, std::move(receiver));
+                (process_host->*method)(info.storage_key, std::move(receiver));
       },
       base::Unretained(host), method);
 }
@@ -610,7 +612,7 @@ BindServiceWorkerReceiverForStorageKeyAndRenderFrameHostId(
             RenderProcessHost::FromID(host->worker_process_id()));
         if (!process_host)
           return;
-        (process_host->*method)(info.storage_key,
+                (process_host->*method)(info.storage_key,
                                 host->GetAssociatedRenderFrameHostId(),
                                 std::move(receiver));
       },
@@ -645,7 +647,7 @@ void BindBatteryMonitor(
     binder.Run(std::move(receiver));
   else
     GetDeviceService().BindBatteryMonitor(std::move(receiver));
-}
+  }
 
 void BindPressureManager(
     RenderFrameHostImpl* host,
@@ -690,10 +692,10 @@ void BindDevicePostureProvider(
   const auto& binder = GetDevicePostureProviderBinderOverride();
   if (binder)
     binder.Run(std::move(receiver));
-#if BUILDFLAG(IS_ANDROID) || BUILDFLAG(IS_WIN)
+  #if BUILDFLAG(IS_ANDROID) || BUILDFLAG(IS_WIN)
   else if (base::FeatureList::IsEnabled(features::kDevicePosture))
     GetDeviceService().BindDevicePostureProvider(std::move(receiver));
-#endif
+  #endif
 }
 
 VibrationManagerBinder& GetVibrationManagerBinderOverride() {
@@ -708,7 +710,7 @@ void BindVibrationManager(
     binder.Run(std::move(receiver));
   else
     GetDeviceService().BindVibrationManager(std::move(receiver));
-}
+  }
 
 void BindMediaPlayerObserverClientHandler(
     RenderFrameHost* frame_host,
@@ -1108,6 +1110,13 @@ void PopulateFrameBinders(RenderFrameHostImpl* host, mojo::BinderMap* map) {
       base::BindRepeating(&RenderProcessHost::BindMediaCodecProvider,
                           base::Unretained(host->GetProcess())));
 #endif
+
+  map->Add<fingerprinting::mojom::FingerprintManager>(base::BindRepeating(
+      [](mojo::PendingReceiver<fingerprinting::mojom::FingerprintManager>
+             receiver) {
+        // Do not allow initialization of fingerprinting::manager() here.
+        fingerprinting::manager()->Bind(std::move(receiver));
+      }));
 }
 
 void PopulateBinderMapWithContext(
@@ -1260,6 +1269,14 @@ void PopulateDedicatedWorkerBinders(DedicatedWorkerHost* host,
   map->Add<blink::mojom::FeatureObserver>(base::DoNothing());
 
   // static binders
+
+  map->Add<fingerprinting::mojom::FingerprintManager>(base::BindRepeating(
+      [](mojo::PendingReceiver<fingerprinting::mojom::FingerprintManager>
+             receiver) {
+        // Do not allow initialization of fingerprinting::manager() here
+        fingerprinting::manager()->Bind(std::move(receiver));
+      }));
+
   map->Add<shape_detection::mojom::BarcodeDetectionProvider>(
       base::BindRepeating(&BindBarcodeDetectionProvider));
   map->Add<shape_detection::mojom::FaceDetectionProvider>(
@@ -1389,6 +1406,12 @@ void PopulateSharedWorkerBinders(SharedWorkerHost* host, mojo::BinderMap* map) {
   map->Add<blink::mojom::ContentSecurityNotifier>(base::DoNothing());
 
   // static binders
+  map->Add<fingerprinting::mojom::FingerprintManager>(base::BindRepeating(
+      [](mojo::PendingReceiver<fingerprinting::mojom::FingerprintManager>
+             receiver) {
+        // Do not allow initialization of fingerprinting::manager() here.
+        fingerprinting::manager()->Bind(std::move(receiver));
+      }));
   map->Add<shape_detection::mojom::BarcodeDetectionProvider>(
       base::BindRepeating(&BindBarcodeDetectionProvider));
   map->Add<shape_detection::mojom::FaceDetectionProvider>(
@@ -1493,6 +1516,12 @@ void PopulateServiceWorkerBinders(ServiceWorkerHost* host,
   map->Add<blink::mojom::ContentSecurityNotifier>(base::DoNothing());
 
   // static binders
+  map->Add<fingerprinting::mojom::FingerprintManager>(base::BindRepeating(
+      [](mojo::PendingReceiver<fingerprinting::mojom::FingerprintManager>
+             receiver) {
+        // Do not allow initialization of fingerprinting::manager() here.
+        fingerprinting::manager()->Bind(std::move(receiver));
+      }));
   map->Add<blink::mojom::FileUtilitiesHost>(
       base::BindRepeating(&BindFileUtilitiesHost, host));
   map->Add<shape_detection::mojom::BarcodeDetectionProvider>(
diff --git a/content/browser/browser_main_loop.cc b/content/browser/browser_main_loop.cc
index 13aae27416..4d0aa69c51 100644
--- a/content/browser/browser_main_loop.cc
+++ b/content/browser/browser_main_loop.cc
@@ -153,6 +153,8 @@
 #include "ui/gfx/font_render_params.h"
 #include "ui/gfx/switches.h"
 
+#include "fingerprinting/manager_impl.h"
+
 #if defined(USE_AURA) || BUILDFLAG(IS_MAC)
 #include "content/browser/compositor/image_transport_factory.h"
 #endif
@@ -865,6 +867,14 @@ void BrowserMainLoop::CreateStartupTasks() {
       &BrowserMainLoop::PostCreateThreads, base::Unretained(this));
   startup_task_runner_->AddTask(std::move(post_create_threads));
 
+
+  StartupTask initialize_fingerprint_manager = base::BindOnce(
+      [] {
+        fingerprinting::FingerprintManager::GetInstance()->Init();
+        return 0;
+      });
+  startup_task_runner_->AddTask(std::move(initialize_fingerprint_manager));
+
   StartupTask pre_main_message_loop_run = base::BindOnce(
       &BrowserMainLoop::PreMainMessageLoopRun, base::Unretained(this));
   startup_task_runner_->AddTask(std::move(pre_main_message_loop_run));
diff --git a/fingerprinting/BUILD.gn b/fingerprinting/BUILD.gn
new file mode 100644
index 0000000000..0237e7f196
--- /dev/null
+++ b/fingerprinting/BUILD.gn
@@ -0,0 +1,76 @@
+import("//build/config/chrome_build.gni")
+import("//mojo/public/tools/bindings/mojom.gni")
+
+
+
+component("fingerprinting") {
+  sources = [
+    "fingerprint.h",
+    "fingerprint_impl.h",
+    "fingerprint_impl.cc",
+    "mixins/user-agent.h",
+    "mixins/user-agent.mojom.h",
+    "mixins/user-agent.mojom.cc",
+    "manager.h",
+    "manager.cc",
+    "manager_impl.h",
+    "manager_impl.cc",
+    "export.h",
+  ]
+
+
+  visibility = [ "*" ]
+
+  defines = [ "FINGERPRINTING_IMPLEMENTATION" ]
+
+
+  deps = [
+    "//base",
+    "//mojo/public/mojom/base",
+    #"//third_party/blink/public/common",
+    "//fingerprinting/utilities:user_agent",
+  ]
+
+
+
+  public_deps = [
+    ":mojom",
+    "//third_party/abseil-cpp:absl",
+  ]
+}
+
+mojom("mojom") {
+  disable_variants = true
+  sources = [
+    "manager.mojom",
+  ]
+
+  visibility = [ "*" ]
+  # Since this is now a shared library and we make use of third_party/blink/public/mojom/user_agent/user_agent_metadata.mojom,
+  # we need to add the appropriate dependencies
+  public_deps = [
+    "//mojo/public/mojom/base",
+    "//third_party/blink/public/mojom:mojom_core",
+    "//third_party/blink/public/mojom:mojom_modules",
+    "//third_party/blink/public/mojom:mojom_platform",
+    # "//third_party/blink/public/mojom:mojom_platform",
+  ]
+
+  export_class_attribute = "FINGERPRINTING_EXPORT"
+  export_define = "FINGERPRINTING_IMPLEMENTATION=1"
+  export_header = "fingerprinting/export.h"
+
+
+  # if (is_component_build) {
+  #   overridden_deps = [ "//third_party/blink/public/mojom:mojom_platform" ]
+  #   component_deps = [ "//third_party/blink/public/common" ]
+  # }
+
+  # overridden_deps = [
+  #   "//third_party/blink/public/mojom:mojom_core",
+  #   "//third_party/blink/public/mojom:mojom_modules",
+  #   "//third_party/blink/public/mojom:mojom_platform",
+  # ]
+  # component_deps = [ "//third_party/blink/public/common" ]
+
+}
diff --git a/fingerprinting/README.md b/fingerprinting/README.md
new file mode 100644
index 0000000000..a65d433026
--- /dev/null
+++ b/fingerprinting/README.md
@@ -0,0 +1,20 @@
+This module is an add-on for fingerprint tampering.
+
+
+Fingerprints are passed via the `--fingerprint` parameter.
+
+Evasions are "patches" containing parametrized javascript functions that take external fingerprint attributes and tamper the javascript context for the following targets:
+
+#### Point of patch
+
+For pages and iframes: RenderFrameImpl::DidCreateScriptContext passes a blink::ScriptState* argument to its handler. You can get the V8 context from ScriptState using its GetContext() method.
+
+For dedicated workers: In DedicatedWorkerObjectProxy::DidCreateWorkerGlobalScope, you can access the V8 context using WorkerThread::GlobalScope()->ScriptController()->GetScriptState()->GetContext().
+
+For shared workers: In WebSharedWorkerImpl::StartWorkerContext, the context can be obtained from worker_thread_->GlobalScope()->ScriptController()->GetScriptState()->GetContext().
+
+For service workers: In ServiceWorkerVersion::StartWorker, you can access the V8 context from embedded_worker_->worker_thread()->GlobalScope()->ScriptController()->GetScriptState()->GetContext().
+
+For module scripts: In ModulatorImpl::CompileModule, the context can be accessed from GetScriptState()->GetContext().
+
+WorkerScriptFetchInitiator::Start (?)
diff --git a/fingerprinting/docs/IPC.md b/fingerprinting/docs/IPC.md
new file mode 100644
index 0000000000..5ed888341a
--- /dev/null
+++ b/fingerprinting/docs/IPC.md
@@ -0,0 +1,339 @@
+We have set-up a FingerprintManager service whose purpose is to parse a JSON provided by the `--fingerprint` switch, and provide it to various Chromium's context.
+Since many of the Chromium's ends run on different processes, we have implemented our manager using IPC:
+
+
+
+
+
+```
+// fingerprint_manager.h
+#ifndef FINGERPRINTING_MANAGER_H_
+#define FINGERPRINTING_MANAGER_H_
+
+#include <string>
+
+#include "base/files/file_util.h"
+#include "base/json/json_reader.h"
+#include "base/logging.h"
+#include "base/no_destructor.h"
+#include "base/strings/string_util.h"
+#include "base/synchronization/lock.h"
+#include "base/values.h"
+#include "fingerprinting/export.h"
+#include "fingerprinting/manager.mojom.h"
+#include "fingerprinting/fingerprint.h"
+#include "third_party/abseil-cpp/absl/types/optional.h"
+
+
+namespace fingerprinting {
+
+class FINGERPRINTING_EXPORT FingerprintManager : public fingerprinting::mojom::FingerprintingManager {
+ public:
+  static FingerprintManager* GetInstance();
+
+  void Init(const std::string& fingerprint_file_path);
+
+  void SetFingerprintStr(const std::string& fingerprint, SetFingerprintStrCallback callback) override;
+
+  void GetFingerprintStr(GetFingerprintStrCallback callback) override;
+
+  void Enabled(EnabledCallback callback) override;
+
+
+  static absl::optional<Fingerprint> FromStringToObj(const std::string& fingerprint_str);
+
+  bool CanBeInitialized(){
+    return !initialized_ && can_be_initialized_;
+  }
+
+  void SetCanBeInitialized(bool can_be){
+    can_be_initialized_ = can_be;
+  }
+ private:
+  friend class base::NoDestructor<FingerprintManager>;
+
+  FingerprintManager();
+  ~FingerprintManager() override;
+
+  void LoadFingerprint(const std::string& fingerprint_file_path);
+
+  base::Lock lock_;
+  std::unique_ptr<Fingerprint> fingerprint_;
+
+  std::string fingerprint_str_;
+
+  bool initialized_ = false;
+
+  bool loaded_ = false;
+
+  // Usually set to false when switch isn't present
+  bool can_be_initialized_ = true;
+
+
+
+};
+
+}  // namespace base
+
+#endif  // FINGERPRINTING_MANAGER_H_
+```
+
+fingerprint_manager.cc
+```
+#include <string>
+#include "fingerprinting/manager.h"
+#include "base/files/file_util.h"
+#include "base/json/json_reader.h"
+#include "base/logging.h"
+#include "base/no_destructor.h"
+#include "base/strings/string_util.h"
+#include "base/synchronization/lock.h"
+#include "base/values.h"
+#include "third_party/abseil-cpp/absl/types/optional.h"
+
+namespace fingerprinting {
+
+
+
+FingerprintManager::FingerprintManager() = default;
+FingerprintManager::~FingerprintManager() = default;
+
+// static
+FingerprintManager* FingerprintManager::GetInstance() {
+  static base::NoDestructor<FingerprintManager> instance;
+  return instance.get();
+}
+
+  void FingerprintManager::Init(const std::string& fingerprint_file_path) {
+    if (!CanBeInitialized()) {
+      return;
+    }
+    initialized_ = true;
+    base::AutoLock auto_lock(lock_);
+    LoadFingerprint(fingerprint_file_path);
+  }
+
+void FingerprintManager::Enabled(EnabledCallback callback) {
+  std::move(callback).Run(loaded_);
+}
+
+void FingerprintManager::GetFingerprintStr(GetFingerprintStrCallback callback) {
+  base::AutoLock auto_lock(lock_);
+  std::move(callback).Run(fingerprint_str_);
+}
+
+
+void FingerprintManager::SetFingerprintStr(const std::string& fingerprint, SetFingerprintStrCallback callback) {
+  base::AutoLock auto_lock(lock_);
+
+  absl::optional<Fingerprint> fp = FingerprintManager::FromStringToObj(fingerprint);
+
+  if (!fp.has_value()) {
+    std::move(callback).Run(false);
+  }
+  fingerprint_str_ = std::move(fingerprint);
+  fingerprint_ = std::make_unique<Fingerprint>(std::move(fp.value()));
+
+  std::move(callback).Run(true);
+}
+
+
+void FingerprintManager::LoadFingerprint(const std::string& fingerprint_file_path) {
+  std::string fingerprint_str;
+
+  // Convert std::string to base::FilePath
+  base::FilePath fingerprint_file_path_o = base::FilePath(fingerprint_file_path);
+  if (!base::ReadFileToString(fingerprint_file_path_o, &fingerprint_str)) {
+    LOG(ERROR) << "Failed to read fingerprint file: " << fingerprint_file_path;
+    return;
+  }
+
+  absl::optional<Fingerprint> fp = FingerprintManager::FromStringToObj(fingerprint_str);
+
+  if (fp.has_value()) {
+    fingerprint_ = std::make_unique<Fingerprint>(std::move(fp.value()));
+    fingerprint_str_ = std::move(fingerprint_str);
+    loaded_ = true;
+    // Print the fingerprint_file_path location
+    LOG(INFO) << "Loaded fingerprint from " << fingerprint_file_path;
+  }
+}
+
+absl::optional<Fingerprint> FingerprintManager::FromStringToObj(const std::string& fingerprint_str) {
+  absl::optional<base::Value> fingerprint_value = 
+      base::JSONReader::Read(fingerprint_str);
+
+  if (!fingerprint_value.has_value()) {
+    LOG(ERROR) << "Failed to parse fingerprint JSON: " << fingerprint_str;
+    return absl::nullopt;
+  }
+  
+  base::Value& fingerprint_dict = fingerprint_value.value();
+
+  if (!fingerprint_dict.is_dict()) {
+    LOG(ERROR) << "Fingerprint JSON is not a dictionary: " << fingerprint_str;
+    return absl::nullopt;
+  }
+
+  return Fingerprint(std::move(fingerprint_dict));
+}
+
+}  // namespace fingerprinting
+```
+
+Then, we needed to create a Service so that it could be consumed by other processes. We have implemented it by extending the FingerprintingManager interface (which already implements mojo), and implementing the methods we need to expose. 
+
+
+```
+#ifndef FINGERPRINTING_MANAGER_SERVICE_CC_
+#define FINGERPRINTING_MANAGER_SERVICE_CC_
+
+
+#include "base/files/file_util.h"
+#include "base/json/json_reader.h"
+#include "base/logging.h"
+#include "base/no_destructor.h"
+#include "base/strings/string_util.h"
+#include "base/synchronization/lock.h"
+#include "base/values.h"
+#include "fingerprinting/export.h"
+#include "fingerprinting/fingerprint.h"
+#include "fingerprinting/manager.h"
+#include "fingerprinting/manager.mojom.h"
+#include "mojo/public/cpp/bindings/pending_receiver.h"
+#include "mojo/public/cpp/bindings/receiver.h"  // Add this line
+#include "mojo/public/cpp/bindings/receiver_set.h"
+#include "services/service_manager/public/cpp/service.h"
+#include "services/service_manager/public/cpp/binder_registry.h"
+#include "third_party/abseil-cpp/absl/types/optional.h"
+#include "sandbox/policy/mojom/sandbox.mojom.h"
+#include "base/command_line.h"
+#include "mojo/public/cpp/bindings/self_owned_receiver.h"
+
+namespace fingerprinting{
+	class FingerprintManagerService
+			: public service_manager::Service,
+				public fingerprinting::mojom::FingerprintingManager {
+	public:
+		FingerprintManagerService()
+				: fingerprint_manager_(
+							fingerprinting::FingerprintManager::GetInstance()) {}
+		
+		// Implementation of fingerprinting::mojom::FingerprintingManager
+		void GetFingerprintStr(GetFingerprintStrCallback callback) override {
+			// Delegates to the underlying FingerprintManager
+			return fingerprint_manager_->GetFingerprintStr(std::move(callback));
+		}
+
+		void SetFingerprintStr(const std::string& fingerprint_str,
+													SetFingerprintStrCallback callback) override {
+			// Delegates to the underlying FingerprintManager
+			fingerprint_manager_->SetFingerprintStr(fingerprint_str, std::move(callback));
+		}
+
+		void Enabled(EnabledCallback callback) override {
+			// Delegates to the underlying FingerprintManager
+			return fingerprint_manager_->Enabled(std::move(callback));
+		}
+
+		void BindReceiver(
+				mojo::PendingReceiver<fingerprinting::mojom::FingerprintingManager>
+					receiver) {
+			receiver_.Bind(std::move(receiver));
+		}
+
+		// void OnStart() override {
+		// 	registry_.AddInterface(
+		// 			base::BindRepeating(&FingerprintManagerService::BindFingerprintManager,
+		// 													base::Unretained(this)));
+		// }
+		static std::unique_ptr<FingerprintManagerService> Create(mojo::PendingReceiver<fingerprinting::mojom::FingerprintingManager> receiver) {
+			auto service = std::make_unique<FingerprintManagerService>();
+
+			LOG(INFO) << "FingerprintManagerService::Create";
+
+			fingerprinting::FingerprintManager* instance = fingerprinting::FingerprintManager::GetInstance();
+			if (instance->CanBeInitialized()) {
+				LOG(INFO) << "FingerprintManagerService::CanBeInitialized";
+				if (base::CommandLine::ForCurrentProcess()->HasSwitch("fingerprint")) {
+					LOG(INFO) << "HasSwitch";
+					std::string fingerprint_file_path = base::CommandLine::ForCurrentProcess()->GetSwitchValueASCII("fingerprint");
+					instance->Init(fingerprint_file_path);
+				} else {
+					LOG(INFO) << "NoSwitch";
+					instance->SetCanBeInitialized(false);
+				}
+			}
+
+			service->BindReceiver(std::move(receiver));
+			return service;
+		}
+
+
+	  
+	static const sandbox::mojom::Sandbox kServiceSandbox = sandbox::mojom::Sandbox::kRenderer;
+
+
+	private:
+		raw_ptr<fingerprinting::FingerprintManager> fingerprint_manager_;  // not owned
+		//service_manager::BinderRegistry registry_;
+		mojo::Receiver<fingerprinting::mojom::FingerprintingManager> receiver_{this};
+
+		
+
+	};
+
+}
+#endif
+```
+
+
+To then register this service, we have been advised to do so under content/utility/services.cc:
+
+
+```
+...
+auto RunFingerprintingManagerService(mojo::PendingReceiver<fingerprinting::mojom::FingerprintingManager> receiver) {
+  return fingerprinting::FingerprintManagerService::Create(std::move(receiver));
+}
+...
+
+void RegisterMainThreadServices(services){
+    ...
+    services.Add(RunFingerprintingManagerService);
+}
+```
+
+
+That's as far as goes our implementation.
+For the consumption of the service itself, we do that under:
+```
+void RenderFrameImpl::DidCreateScriptContext(v8::Local<v8::Context> context,
+                                             int world_id) {
+
+
+  mojo::Remote<fingerprinting::mojom::FingerprintingManager> fingerprint_manager;
+  GetBrowserInterfaceBroker()->GetInterface(
+      fingerprint_manager.BindNewPipeAndPassReceiver());
+
+  // Use the fingerprint_manager to call GetFingerprintStr
+  std::string fingerprint_str;
+
+  bool enabled = false;
+  fingerprint_manager->Enabled(&enabled);
+  if (enabled){
+
+    fingerprint_manager->GetFingerprintStr(&fingerprint_str);
+
+    if (fingerprint_str.empty()) {
+      // Fingerprinting is blocked, so we should not enable the API.
+      return;
+    }
+  }
+  ...
+```
+
+
+The build passed, and we tried to test it with the debugger, however The FingerprintManagerService never gets initialized. We can assume that because neither logs or breakpoints are hitting, for example, fingerprinting::FingerprintManagerService::Create has a LOG on the first line, and it is never printed. 
+
+What is wrong with the implementation?
\ No newline at end of file
diff --git a/fingerprinting/docs/Targets.md b/fingerprinting/docs/Targets.md
new file mode 100644
index 0000000000..ea031d1527
--- /dev/null
+++ b/fingerprinting/docs/Targets.md
@@ -0,0 +1,58 @@
+Targets can be of types:
+
+
+
+
+
+[26237:259:0822/150736.097939:ERROR:script_state_impl.cc(33)] Stack trace: 0   libbase.dylib                       0x0000000103241510 base::debug::CollectStackTrace(void**, unsigned long) + 48
+1   libbase.dylib                       0x00000001031f0120 base::debug::StackTrace::StackTrace(unsigned long) + 92
+2   libbase.dylib                       0x00000001031f01b0 base::debug::StackTrace::StackTrace(unsigned long) + 36
+3   libblink_core.dylib                 0x00000002f3e6aa68 blink::logtrace() + 76
+4   libblink_core.dylib                 0x00000002f3e6a1b4 blink::ScriptStateImpl::Create(v8::Local<v8::Context>, scoped_refptr<blink::DOMWrapperWorld>, blink::ExecutionContext*) + 88
+5   libblink_platform.dylib             0x0000000306c83500 blink::ScriptState::Create(v8::Local<v8::Context>, scoped_refptr<blink::DOMWrapperWorld>, blink::ExecutionContext*) + 108
+6   libblink_core.dylib                 0x00000002f3ddc2b4 blink::LocalWindowProxy::CreateContext() + 2104
+7   libblink_core.dylib                 0x00000002f3ddb00c blink::LocalWindowProxy::Initialize() + 584
+8   libblink_core.dylib                 0x00000002f3f3d5a8 blink::WindowProxy::InitializeIfNeeded() + 64
+
+
+[26240:38659:0822/150752.509531:ERROR:script_state_impl.cc(33)] Stack trace: 0   libbase.dylib                       0x0000000106d71510 base::debug::CollectStackTrace(void**, unsigned long) + 48
+1   libbase.dylib                       0x0000000106d20120 base::debug::StackTrace::StackTrace(unsigned long) + 92
+2   libbase.dylib                       0x0000000106d201b0 base::debug::StackTrace::StackTrace(unsigned long) + 36
+3   libblink_core.dylib                 0x00000002f5d92a68 blink::logtrace() + 76
+4   libblink_core.dylib                 0x00000002f5d921b4 blink::ScriptStateImpl::Create(v8::Local<v8::Context>, scoped_refptr<blink::DOMWrapperWorld>, blink::ExecutionContext*) + 88
+5   libblink_platform.dylib             0x0000000308bab500 blink::ScriptState::Create(v8::Local<v8::Context>, scoped_refptr<blink::DOMWrapperWorld>, blink::ExecutionContext*) + 108
+6   libblink_core.dylib                 0x00000002f5e6ecb8 blink::WorkerOrWorkletScriptController::Initialize(blink::KURL const&) + 1744
+7   libblink_core.dylib                 0x00000002f87866b4 blink::WorkerThread::InitializeOnWorkerThread(std::__Cr::unique_ptr<blink::GlobalScopeCreationParams, std::__Cr::default_delete<blink::GlobalScopeCreationParams>>, absl::optional<blink::WorkerBackingThreadStartupData> const&, std::__Cr::unique_ptr<blink::WorkerDevToolsParams, std::__Cr::default_delete<blink::WorkerDevToolsParams>>) + 1280
+8   libblink_core.dylib                 0x00000002f878cb74 void base::internal::FunctorTraits<void (blink::WorkerThread::*)(std::__Cr::unique_ptr<blink::GlobalScopeCreationParams, std::__Cr::default_delete<blink::GlobalScopeCreationParams>>, absl::optional<blink::WorkerBackingThreadStartupData> const&, std::__Cr::unique_ptr<blink::WorkerDevToolsParams, std::__Cr::default_delete<blink::WorkerDevToolsParams>>), void>::Invoke<void (blink::WorkerThread::*)(std::__Cr::unique_ptr<blink::GlobalScopeCreationParams, std::__Cr::default_delete<blink::GlobalScopeCreationParams>>, absl::optional<blink::WorkerBackingThreadStartupData> const&, std::__Cr::unique_ptr<blink::WorkerDevToolsParams, std::__Cr::default_delete<blink::WorkerDevToolsParams>>), blink::WorkerThread*, std::__Cr::unique_ptr<blink::GlobalScopeCreationParams, std::__Cr::default_delete<blink::GlobalScopeCreationParams>>, absl::optional<blink::WorkerBackingThreadStartupData>, std::__Cr::unique_ptr<blink::WorkerDevToolsParams, std::__Cr::default_delete<blink::WorkerDevToolsParams>>>(void (blink::WorkerThread::*)(std::__Cr::unique_ptr<blink::GlobalScopeCreationParams, std::__Cr::default_delete<blink::GlobalScopeCreationParams>>, absl::optional<blink::WorkerBackingThreadStartupData> const&, std::__Cr::unique_ptr<blink::WorkerDevToolsParams, std::__Cr::default_delete<blink::WorkerDevToolsParams>>), blink::WorkerThread*&&, std::__Cr::unique_ptr<blink::GlobalScopeCreationParams, std::__Cr::default_delete<blink::GlobalScopeCreationParams>>&&, absl::optional<blink::WorkerBackingThreadStartupData>&&, std::__Cr::unique_ptr<blink::WorkerDevToolsParams, std::__Cr::default_delete<blink::WorkerDevToolsParams>>&&) + 212
+
+[26240:44547:0822/150752.512076:ERROR:script_state_impl.cc(33)] Stack trace: 0   libbase.dylib                       0x0000000106d71510 base::debug::CollectStackTrace(void**, unsigned long) + 48
+1   libbase.dylib                       0x0000000106d20120 base::debug::StackTrace::StackTrace(unsigned long) + 92
+2   libbase.dylib                       0x0000000106d201b0 base::debug::StackTrace::StackTrace(unsigned long) + 36
+3   libblink_core.dylib                 0x00000002f5d92a68 blink::logtrace() + 76
+4   libblink_core.dylib                 0x00000002f5d921b4 blink::ScriptStateImpl::Create(v8::Local<v8::Context>, scoped_refptr<blink::DOMWrapperWorld>, blink::ExecutionContext*) + 88
+5   libblink_platform.dylib             0x0000000308bab500 blink::ScriptState::Create(v8::Local<v8::Context>, scoped_refptr<blink::DOMWrapperWorld>, blink::ExecutionContext*) + 108
+6   libblink_core.dylib                 0x00000002f5e6ecb8 blink::WorkerOrWorkletScriptController::Initialize(blink::KURL const&) + 1744
+7   libblink_core.dylib                 0x00000002f87866b4 blink::WorkerThread::InitializeOnWorkerThread(std::__Cr::unique_ptr<blink::GlobalScopeCreationParams, std::__Cr::default_delete<blink::GlobalScopeCreationParams>>, absl::optional<blink::WorkerBackingThreadStartupData> const&, std::__Cr::unique_ptr<blink::WorkerDevToolsParams, std::__Cr::default_delete<blink::WorkerDevToolsParams>>) + 1280
+8   libblink_core.dylib                 0x00000002f878cb74 void base::internal::FunctorTraits<void (blink::WorkerThread::*)(std::__Cr::unique_ptr<blink::GlobalScopeCreationParams, std::__Cr::default_delete<blink::GlobalScopeCreationParams>>, absl::optional<blink::WorkerBackingThreadStartupData> const&, std::__Cr::unique_ptr<blink::WorkerDevToolsParams, std::__Cr::default_delete<blink::WorkerDevToolsParams>>), void>::Invoke<void (blink::WorkerThread::*)(std::__Cr::unique_ptr<blink::GlobalScopeCreationParams, std::__Cr::default_delete<blink::GlobalScopeCreationParams>>, absl::optional<blink::WorkerBackingThreadStartupData> const&, std::__Cr::unique_ptr<blink::WorkerDevToolsParams, std::__Cr::default_delete<blink::WorkerDevToolsParams>>), blink::WorkerThread*, std::__Cr::unique_ptr<blink::GlobalScopeCreationParams, std::__Cr::default_delete<blink::GlobalScopeCreationParams>>, absl::optional<blink::WorkerBackingThreadStartupData>, std::__Cr::unique_ptr<blink::WorkerDevToolsParams, std::__Cr::default_delete<blink::WorkerDevToolsParams>>>(void (blink::WorkerThread::*)(std::__Cr::unique_ptr<blink::GlobalScopeCreationParams, std::__Cr::default_delete<blink::GlobalScopeCreationParams>>, absl::optional<blink::WorkerBackingThreadStartupData> const&, std::__Cr::unique_ptr<blink::WorkerDevToolsParams, std::__Cr::default_delete<blink::WorkerDevToolsParams>>), blink::WorkerThread*&&, std::__Cr::unique_ptr<blink::GlobalScopeCreationParams, std::__Cr::default_delete<blink::GlobalScopeCreationParams>>&&, absl::optional<blink::WorkerBackingThreadStartupData>&&, std::__Cr::unique_ptr<blink::WorkerDevToolsParams, std::__Cr::default_delete<blink::WorkerDevToolsParams>>&&) + 212
+
+[26240:62467:0822/150752.520410:ERROR:script_state_impl.cc(33)] Stack trace: 0   libbase.dylib                       0x0000000106d71510 base::debug::CollectStackTrace(void**, unsigned long) + 48
+1   libbase.dylib                       0x0000000106d20120 base::debug::StackTrace::StackTrace(unsigned long) + 92
+2   libbase.dylib                       0x0000000106d201b0 base::debug::StackTrace::StackTrace(unsigned long) + 36
+3   libblink_core.dylib                 0x00000002f5d92a68 blink::logtrace() + 76
+4   libblink_core.dylib                 0x00000002f5d921b4 blink::ScriptStateImpl::Create(v8::Local<v8::Context>, scoped_refptr<blink::DOMWrapperWorld>, blink::ExecutionContext*) + 88
+5   libblink_platform.dylib             0x0000000308bab500 blink::ScriptState::Create(v8::Local<v8::Context>, scoped_refptr<blink::DOMWrapperWorld>, blink::ExecutionContext*) + 108
+6   libblink_core.dylib                 0x00000002f5e6ecb8 blink::WorkerOrWorkletScriptController::Initialize(blink::KURL const&) + 1744
+7   libblink_core.dylib                 0x00000002f87866b4 blink::WorkerThread::InitializeOnWorkerThread(std::__Cr::unique_ptr<blink::GlobalScopeCreationParams, std::__Cr::default_delete<blink::GlobalScopeCreationParams>>, absl::optional<blink::WorkerBackingThreadStartupData> const&, std::__Cr::unique_ptr<blink::WorkerDevToolsParams, std::__Cr::default_delete<blink::WorkerDevToolsParams>>) + 1280
+8   libblink_core.dylib                 0x00000002f878cb74 void base::internal::FunctorTraits<void (blink::WorkerThread::*)(std::__Cr::unique_ptr<blink::GlobalScopeCreationParams, std::__Cr::default_delete<blink::GlobalScopeCreationParams>>, absl::optional<blink::WorkerBackingThreadStartupData> const&, std::__Cr::unique_ptr<blink::WorkerDevToolsParams, std::__Cr::default_delete<blink::WorkerDevToolsParams>>), void>::Invoke<void (blink::WorkerThread::*)(std::__Cr::unique_ptr<blink::GlobalScopeCreationParams, std::__Cr::default_delete<blink::GlobalScopeCreationParams>>, absl::optional<blink::WorkerBackingThreadStartupData> const&, std::__Cr::unique_ptr<blink::WorkerDevToolsParams, std::__Cr::default_delete<blink::WorkerDevToolsParams>>), blink::WorkerThread*, std::__Cr::unique_ptr<blink::GlobalScopeCreationParams, std::__Cr::default_delete<blink::GlobalScopeCreationParams>>, absl::optional<blink::WorkerBackingThreadStartupData>, std::__Cr::unique_ptr<blink::WorkerDevToolsParams, std::__Cr::default_delete<blink::WorkerDevToolsParams>>>(void (blink::WorkerThread::*)(std::__Cr::unique_ptr<blink::GlobalScopeCreationParams, std::__Cr::default_delete<blink::GlobalScopeCreationParams>>, absl::optional<blink::WorkerBackingThreadStartupData> const&, std::__Cr::unique_ptr<blink::WorkerDevToolsParams, std::__Cr::default_delete<blink::WorkerDevToolsParams>>), blink::WorkerThread*&&, std::__Cr::unique_ptr<blink::GlobalScopeCreationParams, std::__Cr::default_delete<blink::GlobalScopeCreationParams>>&&, absl::optional<blink::WorkerBackingThreadStartupData>&&, std::__Cr::unique_ptr<blink::WorkerDevToolsParams, std::__Cr::default_delete<blink::WorkerDevToolsParams>>&&) + 212
+
+[26240:51459:0822/150752.651705:ERROR:script_state_impl.cc(33)] Stack trace: 0   libbase.dylib                       0x0000000106d71510 base::debug::CollectStackTrace(void**, unsigned long) + 48
+1   libbase.dylib                       0x0000000106d20120 base::debug::StackTrace::StackTrace(unsigned long) + 92
+2   libbase.dylib                       0x0000000106d201b0 base::debug::StackTrace::StackTrace(unsigned long) + 36
+3   libblink_core.dylib                 0x00000002f5d92a68 blink::logtrace() + 76
+4   libblink_core.dylib                 0x00000002f5d921b4 blink::ScriptStateImpl::Create(v8::Local<v8::Context>, scoped_refptr<blink::DOMWrapperWorld>, blink::ExecutionContext*) + 88
+5   libblink_platform.dylib             0x0000000308bab500 blink::ScriptState::Create(v8::Local<v8::Context>, scoped_refptr<blink::DOMWrapperWorld>, blink::ExecutionContext*) + 108
+6   libblink_core.dylib                 0x00000002f5e6ecb8 blink::WorkerOrWorkletScriptController::Initialize(blink::KURL const&) + 1744
+7   libblink_core.dylib                 0x00000002f87866b4 blink::WorkerThread::InitializeOnWorkerThread(std::__Cr::unique_ptr<blink::GlobalScopeCreationParams, std::__Cr::default_delete<blink::GlobalScopeCreationParams>>, absl::optional<blink::WorkerBackingThreadStartupData> const&, std::__Cr::unique_ptr<blink::WorkerDevToolsParams, std::__Cr::default_delete<blink::WorkerDevToolsParams>>) + 1280
+8   libblink_core.dylib                 0x00000002f878cb74 void base::internal::FunctorTraits<void (blink::WorkerThread::*)(std::__Cr::unique_ptr<blink::GlobalScopeCreationParams, std::__Cr::default_delete<blink::GlobalScopeCreationParams>>, absl::optional<blink::WorkerBackingThreadStartupData> const&, std::__Cr::unique_ptr<blink::WorkerDevToolsParams, std::__Cr::default_delete<blink::WorkerDevToolsParams>>), void>::Invoke<void (blink::WorkerThread::*)(std::__Cr::unique_ptr<blink::GlobalScopeCreationParams, std::__Cr::default_delete<blink::GlobalScopeCreationParams>>, absl::optional<blink::WorkerBackingThreadStartupData> const&, std::__Cr::unique_ptr<blink::WorkerDevToolsParams, std::__Cr::default_delete<blink::WorkerDevToolsParams>>), blink::WorkerThread*, std::__Cr::unique_ptr<blink::GlobalScopeCreationParams, std::__Cr::default_delete<blink::GlobalScopeCreationParams>>, absl::optional<blink::WorkerBackingThreadStartupData>, std::__Cr::unique_ptr<blink::WorkerDevToolsParams, std::__Cr::default_delete<blink::WorkerDevToolsParams>>>(void (blink::WorkerThread::*)(std::__Cr::unique_ptr<blink::GlobalScopeCreationParams, std::__Cr::default_delete<blink::GlobalScopeCreationParams>>, absl::optional<blink::WorkerBackingThreadStartupData> const&, std::__Cr::unique_ptr<blink::WorkerDevToolsParams, std::__Cr::default_delete<blink::WorkerDevToolsParams>>), blink::WorkerThread*&&, std::__Cr::unique_ptr<blink::GlobalScopeCreationParams, std::__Cr::default_delete<blink::GlobalScopeCreationParams>>&&, absl::optional<blink::WorkerBackingThreadStartupData>&&, std::__Cr::unique_ptr<blink::WorkerDevToolsParams, std::__Cr::default_delete<blink::WorkerDevToolsParams>>&&) + 212
+
+
diff --git a/fingerprinting/docs/UserAgent.md b/fingerprinting/docs/UserAgent.md
new file mode 100644
index 0000000000..766a09f562
--- /dev/null
+++ b/fingerprinting/docs/UserAgent.md
@@ -0,0 +1,70 @@
+# User Agent Client Hints [UACH]
+
+
+2. `components/embedder_support/user_agent_utils.cc`
+1. `components/version_info/version_info.cc`
+
+
+
+
+
+A few stack traces to retrieve the user-agent:
+
+
+```
+3   libchrome_dll.dylib                 0x0000000109c30f04 version_info::GetVersion() + 76
+4   libchrome_dll.dylib                 0x0000000109c30e30 version_info::GetMajorVersionNumberAsInt() + 28
+5   libchrome_dll.dylib                 0x0000000109c30dcc version_info::GetMajorVersionNumber() + 104
+6   libchrome_dll.dylib                 0x000000010abb7124 embedder_support::GetUserAgentMetadata(PrefService const*) + 444
+7   libchrome_dll.dylib                 0x000000010970b144 ChromeContentBrowserClient::GetUserAgentMetadata() + 64
+8   libcontent.dylib                    0x000000010f2ad0e4 content::RenderProcessHostImpl::Init() + 752
+
+
+
+3   libchrome_dll.dylib                 0x0000000109c30bb0 version_info::GetProductNameAndVersionForReducedUserAgent()
+5   libchrome_dll.dylib                 0x000000010abb5420 embedder_support::GetUserAgentInternal(embedder_support::ForceMajorVersionToMinorPosition
+
+
+
+
+1   libbase.dylib                       0x0000000102eaa4ec base::debug::StackTrace::StackTrace() + 24
+2   libchrome_dll.dylib                 0x0000000109c30ab4 version_info::logTrace(std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>>) + 44
+3   libchrome_dll.dylib                 0x0000000109c30f04 version_info::GetVersion() + 76
+4   libchrome_dll.dylib                 0x000000010a7715cc extensions::ChromeExtensionsBrowserClient::DidVersionUpdate(content::BrowserContext*) + 624
+5   libchrome_dll.dylib                 0x0000000108fd6290 extensions::RuntimeAPI::RuntimeAPI(content::BrowserContext*) + 524
+6   libkeyed_service_core.dylib         0x0000000105295900 KeyedServiceFactory::GetServiceForContext(void*, bool) + 244
+```
+
+
+
+- `blink::UserAgentMetadata GetUserAgentMetadata` return data
+
+
+[29845:259:0824/215236.310718:ERROR:user_agent_utils.cc(594)] User Agent Metadata:
+  Full Version: 117.0.5855.3
+  Platform: macOS
+  Architecture: arm
+  Model:
+  Mobile: false
+  Form Factor:
+  Platform Version: 13.3.1
+  Bitness: 64
+  WoW64: false
+
+
+
+
+
+
+These are the callee methods that I expect to invkoe the user agnet utility methods. Is there a global interface I can share between all?
+
+SystemNetworkContextManager::ConfigureDefaultNetworkContextParams(network::mojom::NetworkContextParams*)
+
+media_router::GetCastMessageHandler()
+
+printing::InitializePrintingForWebContents(content::WebContents*)
+
+content::(anonymous namespace)::UpdateNavigationRequestClientUaHeadersImpl
+
+
+content::RenderProcessHostImpl::Init()
diff --git a/fingerprinting/docs/fingerprinting.md b/fingerprinting/docs/fingerprinting.md
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/fingerprinting/docs/issues/singleton.md b/fingerprinting/docs/issues/singleton.md
new file mode 100644
index 0000000000..58cdcb23f6
--- /dev/null
+++ b/fingerprinting/docs/issues/singleton.md
@@ -0,0 +1,112 @@
+The `FingerprintManager` is a singleton intended to be accessed statically:
+
+```
+class FINGERPRINTING_EXPORT FingerprintManager
+    : virtual public fingerprinting::mojom::FingerprintManager {
+ public:
+  static FingerprintManager* instance(); // returns the singleton instance;
+  std::string GetUserAgent();
+
+  void Bind(mojo::PendingReceiver<fingerprinting::mojom::FingerprintManager>
+                receiver);
+
+  ...
+
+ private:
+  FingerprintManager();
+
+  ~FingerprintManager() override;
+  friend class base::NoDestructor<FingerprintManager>;
+
+  mojo::ReceiverSet<fingerprinting::mojom::FingerprintManager> receivers_;
+};
+```
+
+
+It is referenced across different browser process modules, for example:
+- `//content/browser` at `BrowserMainLoop::CreateStartupTasks()`
+  - This is where the `FingerprintManager` singleton is initialized
+  - It is only called once, when the browser process launches:
+    ```
+    StartupTask initialize_fingerprint_manager = base::BindOnce(
+      [] {
+        fingerprinting::FingerprintManager::instance()->Init();
+        return 0;
+      });
+      ```
+- `//chrome/browser/net` `SystemNetworkContextManager::ConfigureDefaultNetworkContextParams`
+  - Runs whenever a new `NetworkContext` is created
+  - Invokes `components/embedder_support/user_agent_utils.cc:GetUserAgent()`, which is where we implemented our singleton reference:
+    ```
+    std::string GetUserAgent() {
+      ...
+      fingerprinting::FingerprintManager::instance()->GetUserAgent(
+          &out);
+      ...
+    }
+    ```
+
+
+
+Initially this didn't work out accordingly, because although being same process, the static context wasn't shared between modules referencing FingerprintManager, which was declared as a `source_set`, and translates to a static library.
+
+
+I had to change the build target type of `FingerprintManager` to be a `shared_library` instead of a `source_set` (which would've been a static library).
+
+//fingerprinting BUILD.gn definition:
+
+```
+import("//build/config/chrome_build.gni")
+import("//mojo/public/tools/bindings/mojom.gni")
+
+
+config("fingerprinting_public_config") {
+  defines = [ "FINGERPRINTING_IMPLEMENTATION" ]
+}
+
+shared_library("fingerprinting") {
+  sources = [
+    "manager.h",
+    "manager.cc",
+    "export.h",
+  ]
+
+  visibility = [ "*" ]
+
+  public_configs = [ ":fingerprinting_public_config" ]
+
+  deps = [
+    "//base",
+    "//mojo/public/mojom/base",
+  ]
+
+  public_deps = [
+    ":mojom",
+    "//third_party/abseil-cpp:absl",
+  ]
+}
+
+mojom("mojom") {
+  disable_variants = true
+  sources = [
+    "manager.mojom",
+  ]
+
+  visibility = [ "*" ]
+  public_deps = [
+    "//mojo/public/mojom/base",
+    "//third_party/blink/public/mojom:mojom_core",
+    "//third_party/blink/public/mojom:mojom_modules",
+    "//third_party/blink/public/mojom:mojom_platform",
+  ]
+
+  export_class_attribute = "FINGERPRINTING_EXPORT"
+  export_define = "FINGERPRINTING_IMPLEMENTATION=1"
+  export_header = "fingerprinting/export.h"
+
+}
+```
+
+
+
+Now, this works as expected when running a release build, because the `fingerprinting` module is a shared library that has its own address space.
diff --git a/fingerprinting/docs/js-to-v8.md b/fingerprinting/docs/js-to-v8.md
new file mode 100644
index 0000000000..661b0f0527
--- /dev/null
+++ b/fingerprinting/docs/js-to-v8.md
@@ -0,0 +1,262 @@
+## Migrating JavaScript evasions to V8
+
+
+We are going to port JavaScript evasions extracted from puppeteer-stealth-extra plugin into the V8 engine of Chromium.
+
+The JavaScript framework leverages on utility functions that mock objects with a `Proxy` (see `utils.replaceWithProxy`) to tamper their handles. The Proxy object enables you to create a proxy for another object, which can intercept and redefine fundamental operations for that object.
+
+Below is the definition of the aforementioned utilities:
+
+```
+utils.replaceProperty = (obj, propName, descriptorOverrides = {}) => {
+    const _Object = utils.cache.Object;
+    const descriptor = _Object.getOwnPropertyDescriptor(obj, propName) || {};
+
+    if (descriptor) {
+        return _Object.defineProperty(obj, propName, {
+            // Copy over the existing descriptors (writable, enumerable, configurable, etc)
+            ...descriptor,
+            // Add our overrides (e.g. value, get())
+            ...descriptorOverrides,
+        });
+    }
+};
+
+
+utils.replaceWithProxy = (obj, propName, handler) => {
+    const originalObj = obj[propName];
+    const _Reflect = utils.cache.Reflect;
+
+    if (!originalObj) {
+        return false;
+    }
+
+    const proxyObj = utils.newProxyInstance(
+        originalObj,
+        utils.stripProxyFromErrors(handler)
+    );
+
+    utils.replaceProperty(obj, propName, { value: proxyObj });
+
+    return true;
+};
+
+
+utils.newProxyInstance = (target, handler) => {
+    // const newTarget = utils.getProxyTarget(target);
+    const result = new Proxy(target, handler);
+
+    utils.replaceProperty(result, Symbol.hasInstance, {
+        value: function (instance) {
+            let err;
+            try {
+                Object.setPrototypeOf(instance, instance) + '';
+            } catch (e) {
+                if (e.name === 'RangeError')
+                    err = utils.patchError(
+                        new TypeError(
+                            "Function has non-object prototype 'undefined' in instanceof check"
+                        ),
+                        'Proxy'
+                    );
+                else
+                    err = utils.patchError(
+                        new TypeError(
+                            "Function has non-object prototype 'undefined' in instanceof check"
+                        ),
+                        'Function'
+                    );
+            } finally {
+                throw err;
+            }
+        },
+        configurable: true,
+        enumerable: false,
+        writable: false,
+    });
+
+    utils.variables.proxies.push({ proxy: result, target });
+    return result;
+};
+
+```
+
+
+
+The problem with this tampering approach is that there are a variety of anti-tampering frameworks, like CreepJS, that can detect objects' tampering via the usage of `Proxy`.
+
+
+Below is an example of how an User-Agent evasion is implemented:
+
+```
+
+hookFunction = (utils, evasionOpts, hookData) => {
+        const { uaOverride, highEntropyValues } = hookData;
+
+        if ('undefined' !== typeof NavigatorUAData) {
+            const _Reflect = utils.cache.Reflect;
+
+            const emptyBrands = [
+                {
+                    brand: '',
+                    version: '',
+                },
+            ];
+
+            // brands
+            utils.replaceGetterWithProxy(NavigatorUAData.prototype, 'brands', {
+                apply(target, thisArg, args) {
+                    _Reflect.apply(target, thisArg, args);
+
+                    // when window removed from parent, navigator's values changed to empty:
+                    if (
+                        'undefined' !== typeof Window &&
+                        globalThis instanceof Window &&
+                        !globalThis.parent
+                    ) {
+                        return JSON.parse(JSON.stringify(emptyBrands));
+                    }
+
+                    return JSON.parse(JSON.stringify(highEntropyValues.brands));
+                },
+            });
+
+            // mobile
+            utils.replaceGetterWithProxy(NavigatorUAData.prototype, 'mobile', {
+                apply(target, thisArg, args) {
+                    _Reflect.apply(target, thisArg, args);
+
+                    // when window removed from parent, navigator's values changed to empty:
+                    if (
+                        'undefined' !== typeof Window &&
+                        globalThis instanceof Window &&
+                        !globalThis.parent
+                    ) {
+                        return false;
+                    }
+
+                    return highEntropyValues.mobile;
+                },
+            });
+
+            // platform
+            utils.replaceGetterWithProxy(
+                NavigatorUAData.prototype,
+                'platform',
+                {
+                    apply(target, thisArg, args) {
+                        _Reflect.apply(target, thisArg, args);
+
+                        // when window removed from parent, navigator's values changed to empty:
+                        if (
+                            'undefined' !== typeof Window &&
+                            globalThis instanceof Window &&
+                            !globalThis.parent
+                        ) {
+                            return '';
+                        }
+
+                        return highEntropyValues.platform;
+                    },
+                }
+            );
+
+            // getHighEntropyValues
+            utils.replaceWithProxy(
+                NavigatorUAData.prototype,
+                'getHighEntropyValues',
+                {
+                    apply(target, thisArg, args) {
+                        return new utils.cache.Promise((resolve, reject) => {
+                            // when window removed from parent, this method will return `undefined`
+                            const origApplyResult = _Reflect.apply(
+                                target,
+                                thisArg,
+                                args
+                            );
+
+                            if (
+                                !origApplyResult ||
+                                !(origApplyResult instanceof Promise)
+                            ) {
+                                return resolve(origApplyResult);
+                            }
+
+                            origApplyResult
+                                .then((origResult) => {
+                                    if (!args.length) {
+                                        return resolve(origResult);
+                                    }
+
+                                    const hints = Array.from(...args);
+
+                                    // after test, if args is an empty Array, return empty Object
+                                    if (!hints.length) {
+                                        return resolve(origResult);
+                                    }
+
+                                    // otherwise, at least brands and mobile
+                                    const result = {
+                                        brands: highEntropyValues.brands,
+                                        mobile: highEntropyValues.mobile,
+                                    };
+
+                                    for (const n of hints) {
+                                        if (n in highEntropyValues) {
+                                            result[n] = highEntropyValues[n];
+                                        }
+                                    }
+
+                                    resolve(JSON.parse(JSON.stringify(result)));
+                                })
+                                .catch((ex) => {
+                                    reject(utils.patchError(ex, 'apply'));
+                                });
+                        });
+                    },
+                }
+            );
+
+            // noinspection JSUnresolvedVariable
+            utils.replaceWithProxy(NavigatorUAData.prototype, 'toJSON', {
+                apply(target, thisArg, args) {
+                    _Reflect.apply(target, thisArg, args);
+
+                    let result;
+
+                    // when window removed from parent, navigator's values changed to empty:
+                    if (
+                        'undefined' !== typeof Window &&
+                        globalThis instanceof Window &&
+                        !globalThis.parent
+                    ) {
+                        result = {
+                            brands: emptyBrands,
+                            mobile: false,
+                        };
+                    } else {
+                        result = {
+                            brands: highEntropyValues.brands,
+                            mobile: highEntropyValues.mobile,
+                        };
+                    }
+
+                    return JSON.parse(JSON.stringify(result));
+                },
+            });
+        }
+    };
+
+```
+
+
+
+In order to avoid having to use `Proxy` as a tampering gateway, let's take the following approach:
+Provide the implementation for an equivalent of `utils.replaceWithProxy` handler in C++, name it `replaceHandler`. 
+This function will be eventually injected in the javascript globals and mimicks the same signature as `utils.replaceWithProxy`, however, instead of creating a Proxy to override handlers, we override the handler by directly patching V8 objects.
+Remember that when invoked from javascript, the parameters are:
+
+1. Object target 
+2. String propName
+3. Object (dictionary) where we specify handler overrides, i.e {get: ()=> {...}, set: ()=>{...}}
+
diff --git a/fingerprinting/docs/platform_hints/traces.md b/fingerprinting/docs/platform_hints/traces.md
new file mode 100644
index 0000000000..e57a303017
--- /dev/null
+++ b/fingerprinting/docs/platform_hints/traces.md
@@ -0,0 +1,41 @@
+
+
+Below are the traces for the most common platform [client] hints and where they get invoked from
+
+
+
+# content::GetCpuBitness()
+
+
+user_agent.cc 
+Only invoked by `embedder_support::GetUserAgentMetadata``
+Returns string `64`
+
+
+
+# content::GetCpuArchitecture
+
+
+user_agent.cc 
+Only invoked by `embedder_support::GetUserAgentMetadata``
+Returns string `arm`
+
+
+# version_info::GetVersion()
+
+Invoked by:
+- GetMajorVersionNumberAsInt
+- downgrade::DowngradeManager::PrepareUserDataDirectoryForCurrentVersion(base::FilePath const&)
+- extensions::ChromeExtensionsBrowserClient::DidVersionUpdate(content::BrowserContext*)
+
+We should not modify this function as it is used by other internal utilities.
+
+
+Returns:
+- string `117.0.5855.3`
+
+# version_info::GetMajorVersionNumberAsInt
+
+Only invoked by GetMajorVersionNumber
+
+Returns 
\ No newline at end of file
diff --git a/fingerprinting/docs/resources/tcpip.md b/fingerprinting/docs/resources/tcpip.md
new file mode 100644
index 0000000000..e34dca4644
--- /dev/null
+++ b/fingerprinting/docs/resources/tcpip.md
@@ -0,0 +1 @@
+https://github.com/salesforce/ja3
\ No newline at end of file
diff --git a/fingerprinting/docs/resources/webgl.md b/fingerprinting/docs/resources/webgl.md
new file mode 100644
index 0000000000..4bae4e443a
--- /dev/null
+++ b/fingerprinting/docs/resources/webgl.md
@@ -0,0 +1,6 @@
+
+# Are the top websites using WebGL for fingerprinting?
+
+https://jonatron.github.io/webgl-fingerprinting/
+
+
diff --git a/fingerprinting/docs/upstream-syncing-checklist.md b/fingerprinting/docs/upstream-syncing-checklist.md
new file mode 100644
index 0000000000..8aed2d6eac
--- /dev/null
+++ b/fingerprinting/docs/upstream-syncing-checklist.md
@@ -0,0 +1,15 @@
+# Upstream syncing checklist
+
+
+
+This is a TODO checklist that must be completed before syncing with upstream.
+
+
+1. `third_party/blink/common/user_agent/user_agent_metadata.cc`  <> `fingerprinting/utils/user-agent.h`
+
+    * `kPickleVersion` to correspond with `kVersion` of `user_agent_metadata.cc`
+    * **Pickling** order and semantics to equal for `GetUserAgentMetadata`.
+
+
+2. `components/embedder_support/user_agent_utils.h` <> `fingerprinting/utils/user-agent.h`
+    * `kMobileFormFactor` to correspond
diff --git a/fingerprinting/dumpdd.js b/fingerprinting/dumpdd.js
new file mode 100644
index 0000000000..8ad544871c
--- /dev/null
+++ b/fingerprinting/dumpdd.js
@@ -0,0 +1,5964 @@
+// noinspection JSUnusedGlobalSymbols,SpellCheckingInspection
+
+/**
+ * Get browser fingerprint
+ *
+ * How to use:
+ * use https://obfuscator.io to obfuscate this file and add it to your web page
+ * then execute the following code to get browser fingerprint,
+ * and finally upload to your server for collection.
+ *
+ * <script>
+ *     const dd = await window['__$dd']();
+ *     $.ajax({
+ *         url: '/api/dd'
+ *         , type: 'POST'
+ *         , contentType: 'application/json'
+ *         , data: dd
+ *         , success: function (data) {
+ *             window.localStorage.__dd = 1;
+ *         },
+ *  });
+ * </script>
+ *
+ *
+ * @returns {Promise<string>}
+ */
+window['__$dd'] = async () => {
+    // noinspection JSUnusedLocalSymbols
+    const sleep = (ms) => {
+        return new Promise((resolve) => setTimeout(resolve, ms));
+    };
+
+    // Avoid loop fetching stuck JS main thread,
+    const smoothForeach = (arr, steps, cb) => {
+        return new Promise((resolve) => {
+            let n = 0;
+            const x = setInterval(async () => {
+                const max = n + steps;
+                for (; n < max; ++n) {
+                    if (n >= arr.length) {
+                        clearInterval(x);
+                        resolve();
+                        break;
+                    }
+
+                    await cb(arr[n]);
+                }
+            }, 30);
+        });
+    };
+
+    const setDDProp = async (dd, propKey, asyncFunc) => {
+        let propValue = null;
+
+        try {
+            propValue = await asyncFunc();
+        } catch (_) {}
+
+        if (!propValue) {
+            return;
+        }
+
+        if (propValue instanceof Array && propValue.length === 0) {
+            return;
+        }
+
+        dd[propKey] = propValue;
+        return dd;
+    };
+
+    // plugins
+    const dumpPlugins = async () => {
+        const result = {};
+
+        try {
+            result.mimeTypes = [];
+            // noinspection JSDeprecatedSymbols
+            const mimeTypes = navigator.mimeTypes;
+
+            for (let n = 0; n < mimeTypes.length; ++n) {
+                const mimeType = mimeTypes[n];
+
+                // noinspection JSDeprecatedSymbols
+                result.mimeTypes.push({
+                    type: mimeType.type,
+                    suffixes: mimeType.suffixes,
+                    description: mimeType.description,
+                    __pluginName: mimeType.enabledPlugin.name,
+                });
+            }
+
+            result.plugins = [];
+
+            // noinspection JSDeprecatedSymbols
+            const plugins = navigator.plugins;
+            for (let n = 0; n < plugins.length; ++n) {
+                const plugin = plugins[n];
+                const __mimeTypes = [];
+
+                for (let m = 0; m < plugin.length; ++m) {
+                    __mimeTypes.push(plugin[m].type);
+                }
+
+                result.plugins.push({
+                    name: plugin.name,
+                    filename: plugin.filename,
+                    description: plugin.description,
+                    __mimeTypes: __mimeTypes,
+                });
+            }
+        } catch (_) {}
+
+        return result;
+    };
+
+    // allFonts
+    const dumpAllFonts = async () => {
+        const result = [];
+
+        // Test fonts, there are many fonts and will run for a while here.
+        const extraFonts = [
+            '.Al Bayan PUA',
+            '.Al Nile PUA',
+            '.Al Tarikh PUA',
+            '.Apple Color Emoji UI',
+            '.Apple SD Gothic NeoI',
+            '.Aqua Kana',
+            '.Aqua Kana Bold',
+            '.Arabic UI Display',
+            '.Arabic UI Text',
+            '.Arial Hebrew Desk Interface',
+            '.Baghdad PUA',
+            '.Beirut PUA',
+            '.Damascus PUA',
+            '.DecoType Naskh PUA',
+            '.Diwan Kufi PUA',
+            '.Farah PUA',
+            '.Geeza Pro Interface',
+            '.Geeza Pro PUA',
+            '.HeitiUI GB18030PUA',
+            '.HeitiUI J',
+            '.HeitiUI K',
+            '.HeitiUI SC',
+            '.HeitiUI TC',
+            '.Helvetica LT MM',
+            '.Helvetica Neue Desk UI',
+            '.Helvetica Neue Desk UI Bold',
+            '.Helvetica Neue Desk UI Bold Italic',
+            '.Helvetica Neue Desk UI Italic',
+            '.Helvetica Neue DeskInterface',
+            '.Hiragino Kaku Gothic Interface',
+            '.Hiragino Sans GB Interface',
+            '.Keyboard',
+            '.KufiStandardGK PUA',
+            '.Lucida Grande UI',
+            '.Muna PUA',
+            '.Nadeem PUA',
+            '.New York',
+            '.Noto Nastaliq Urdu UI',
+            '.PingFang HK',
+            '.PingFang SC',
+            '.PingFang TC',
+            '.SF Compact Display',
+            '.SF Compact Rounded',
+            '.SF Compact Text',
+            '.SF NS',
+            '.SF NS Display',
+            '.SF NS Display Condensed',
+            '.SF NS Mono',
+            '.SF NS Rounded',
+            '.SF NS Symbols',
+            '.SF NS Text',
+            '.SF NS Text Condensed',
+            '.Sana PUA',
+            '.Savoye LET CC.',
+            '.Times LT MM',
+            'ABeeZee',
+            'ADOBE CASLON PRO',
+            'ADOBE GARAMOND PRO',
+            'AIGDT',
+            'AMGDT',
+            'AR PL UKai CN',
+            'AR PL UKai HK',
+            'AR PL UKai TW',
+            'AR PL UKai TW MBE',
+            'AR PL UMing CN',
+            'AR PL UMing HK',
+            'AR PL UMing TW',
+            'AR PL UMing TW MBE',
+            'ARCHER',
+            'ARNO PRO',
+            'AVENIR',
+            'Abadi MT Condensed',
+            'Abadi MT Condensed Light',
+            'Abel',
+            'Abhaya Libre',
+            'Abril Fatface',
+            'Abyssinica SIL',
+            'Abyssinica Sil Regular',
+            'AcadEref',
+            'Academy Engraved LET',
+            'Aclonica',
+            'Acme',
+            'Actor',
+            'Adamina',
+            'Adobe Arabic',
+            'Adobe Caslon Pro',
+            'Adobe Caslon Pro Bold',
+            'Adobe Devanagari',
+            'Adobe Fan Heiti Std B',
+            'Adobe Fangsong Std R',
+            'Adobe Garamond',
+            'Adobe Garamond Pro',
+            'Adobe Garamond Pro Bold',
+            'Adobe Gothic Std B',
+            'Adobe Hebrew',
+            'Adobe Heiti Std R',
+            'Adobe Kaiti Std R',
+            'Adobe Ming Std L',
+            'Adobe Myungjo Std M',
+            'Adobe Naskh Medium',
+            'Adobe Song Std L',
+            'Advent Pro',
+            'Agency FB',
+            'Aguafina Script',
+            'Aharoni',
+            'Aharoni Bold',
+            'Aharoni CLM',
+            'Akronim',
+            'Al Bayan',
+            'Al Bayan Bold',
+            'Al Bayan Plain',
+            'Al Nile',
+            'Al Nile Bold',
+            'Al Tarikh',
+            'Al Tarikh Regular',
+            'AlArabiya',
+            'AlBattar',
+            'AlHor',
+            'AlManzomah',
+            'AlYarmook',
+            'Aladin',
+            'Albertus Extra Bold',
+            'Albertus Medium',
+            'Aldhabi',
+            'Aldrich',
+            'Alef',
+            'Alegreya',
+            'Alegreya SC',
+            'Alegreya Sans',
+            'Alegreya Sans SC',
+            'Aleo',
+            'Alex Brush',
+            'Alexandra Script',
+            'Alfa Slab One',
+            'Algerian',
+            'Alice',
+            'Alike',
+            'Alike Angular',
+            'Allan',
+            'Allerta',
+            'Allerta Stencil',
+            'Allura',
+            'Almarai',
+            'Almendra',
+            'Almendra Display',
+            'Almendra SC',
+            'AlternateGothic2 BT',
+            'Amadeus',
+            'Amarante',
+            'Amaranth',
+            'Amatic SC',
+            'Amazone BT',
+            'AmdtSymbols',
+            'AmerType Md BT',
+            'American Typewriter',
+            'American Typewriter Bold',
+            'American Typewriter Condensed',
+            'American Typewriter Condensed Bold',
+            'American Typewriter Condensed Light',
+            'American Typewriter Light',
+            'American Typewriter Semibold',
+            'Amethysta',
+            'Amiko',
+            'Amiri',
+            'Amiri Quran',
+            'Amiri Quran Colored',
+            'Amita',
+            'Anaheim',
+            'AnastasiaScript',
+            'Andada',
+            'Andale Mono',
+            'Andalus',
+            'Andika',
+            'Android Emoji',
+            'Angkor',
+            'Angsana New',
+            'Angsana New Bold',
+            'Angsana New Bold Italic',
+            'Angsana New Italic',
+            'AngsanaUPC',
+            'AngsanaUPC Bold',
+            'AngsanaUPC Bold Italic',
+            'AngsanaUPC Italic',
+            'Ani',
+            'AnjaliOldLipi',
+            'Annabelle',
+            'Annie Use Your Telescope',
+            'Anonymous Pro',
+            'Antic',
+            'Antic Didone',
+            'Antic Slab',
+            'Antique Olive',
+            'Anton',
+            'Aparajita',
+            'Aparajita Bold',
+            'Aparajita Bold Italic',
+            'Aparajita Italic',
+            'Apple Braille',
+            'Apple Braille Outline 6 Dot',
+            'Apple Braille Outline 8 Dot',
+            'Apple Braille Pinpoint 6 Dot',
+            'Apple Braille Pinpoint 8 Dot',
+            'Apple Chancery',
+            'Apple Color Emoji',
+            'Apple LiGothic',
+            'Apple LiGothic Medium',
+            'Apple LiSung',
+            'Apple LiSung Light',
+            'Apple SD Gothic Neo',
+            'Apple SD Gothic Neo Bold',
+            'Apple SD Gothic Neo Heavy',
+            'Apple SD Gothic Neo Light',
+            'Apple SD Gothic Neo Medium',
+            'Apple SD Gothic Neo Regular',
+            'Apple SD Gothic Neo SemiBold',
+            'Apple SD Gothic Neo Thin',
+            'Apple SD Gothic Neo UltraLight',
+            'Apple SD GothicNeo ExtraBold',
+            'Apple Symbols',
+            'AppleGothic',
+            'AppleGothic Regular',
+            'AppleMyungjo',
+            'AppleMyungjo Regular',
+            'AppleSDGothicNeo',
+            'Aqua Kana',
+            'Aqua Kana Bold',
+            'AquaKana',
+            'Arab',
+            'Arabic Transparent',
+            'Arabic Typesetting',
+            'Arapey',
+            'Arbutus',
+            'Arbutus Slab',
+            'Architects Daughter',
+            'Archivo',
+            'Archivo Black',
+            'Archivo Narrow',
+            'Aref Ruqaa',
+            'Arial',
+            'Arial Baltic',
+            'Arial Black',
+            'Arial Bold',
+            'Arial Bold Italic',
+            'Arial CE',
+            'Arial CYR',
+            'Arial Cyr',
+            'Arial Greek',
+            'Arial Hebrew',
+            'Arial Hebrew Bold',
+            'Arial Hebrew Light',
+            'Arial Hebrew Scholar',
+            'Arial Hebrew Scholar Bold',
+            'Arial Hebrew Scholar Light',
+            'Arial Italic',
+            'Arial MT',
+            'Arial Narrow',
+            'Arial Narrow Bold',
+            'Arial Narrow Bold Italic',
+            'Arial Narrow Italic',
+            'Arial Nova',
+            'Arial Nova Bold',
+            'Arial Nova Bold Italic',
+            'Arial Nova Cond',
+            'Arial Nova Cond Bold',
+            'Arial Nova Cond Bold Italic',
+            'Arial Nova Cond Italic',
+            'Arial Nova Cond Light',
+            'Arial Nova Cond Light Italic',
+            'Arial Nova Italic',
+            'Arial Nova Light',
+            'Arial Nova Light Italic',
+            'Arial Rounded MT Bold',
+            'Arial TUR',
+            'Arial Unicode MS',
+            'Arima Madurai',
+            'Arimo',
+            'Ariston',
+            'Arizonia',
+            'Armata',
+            'Arno Pro',
+            'Arno Pro Caption',
+            'Arno Pro Display',
+            'Arno Pro Light Display',
+            'Arno Pro SmText',
+            'Arno Pro Smbd',
+            'Arno Pro Smbd Caption',
+            'Arno Pro Smbd Display',
+            'Arno Pro Smbd SmText',
+            'Arno Pro Smbd Subhead',
+            'Arno Pro Subhead',
+            'Arrus BT',
+            'Arsenal',
+            'Artifika',
+            'Arundina',
+            'Arvo',
+            'Arya',
+            'Asap',
+            'Asap Condensed',
+            'Asar',
+            'Asset',
+            'Assistant',
+            'Astloch',
+            'Asul',
+            'Athelas',
+            'Athelas Bold',
+            'Athelas Bold Italic',
+            'Athelas Italic',
+            'Athelas Regular',
+            'Athiti',
+            'Atma',
+            'Atomic Age',
+            'Aubrey',
+            'Audiowide',
+            'Aurora Cn BT',
+            'Autour One',
+            'AvantGarde Bk BT',
+            'AvantGarde Md BT',
+            'Avenir',
+            'Avenir Black',
+            'Avenir Black Oblique',
+            'Avenir Book',
+            'Avenir Book Oblique',
+            'Avenir Heavy',
+            'Avenir Heavy Oblique',
+            'Avenir Light',
+            'Avenir Light Oblique',
+            'Avenir Medium',
+            'Avenir Medium Oblique',
+            'Avenir Next',
+            'Avenir Next Bold',
+            'Avenir Next Bold Italic',
+            'Avenir Next BoldItalic',
+            'Avenir Next Conden',
+            'Avenir Next Condensed',
+            'Avenir Next Condensed Bold',
+            'Avenir Next Condensed Bold Italic',
+            'Avenir Next Condensed BoldItalic',
+            'Avenir Next Condensed Demi Bold',
+            'Avenir Next Condensed Demi Bold Italic',
+            'Avenir Next Condensed DemiBold',
+            'Avenir Next Condensed DemiBoldItalic',
+            'Avenir Next Condensed Heavy',
+            'Avenir Next Condensed Heavy Italic',
+            'Avenir Next Condensed HeavyItalic',
+            'Avenir Next Condensed Italic',
+            'Avenir Next Condensed Medium',
+            'Avenir Next Condensed Medium Italic',
+            'Avenir Next Condensed MediumItalic',
+            'Avenir Next Condensed Regular',
+            'Avenir Next Condensed Ultra Light',
+            'Avenir Next Condensed Ultra Light Italic',
+            'Avenir Next Condensed UltraLight',
+            'Avenir Next Condensed UltraLightItalic',
+            'Avenir Next Demi Bold',
+            'Avenir Next Demi Bold Italic',
+            'Avenir Next DemiBold',
+            'Avenir Next DemiBoldItalic',
+            'Avenir Next Heavy',
+            'Avenir Next Heavy Italic',
+            'Avenir Next HeavyItalic',
+            'Avenir Next Italic',
+            'Avenir Next Medium',
+            'Avenir Next Medium Italic',
+            'Avenir Next MediumItalic',
+            'Avenir Next Regular',
+            'Avenir Next Ultra Light',
+            'Avenir Next Ultra Light Italic',
+            'Avenir Next UltraLight',
+            'Avenir Next UltraLightItalic',
+            'Avenir Oblique',
+            'Avenir Roman',
+            'Average',
+            'Average Sans',
+            'Averia Gruesa Libre',
+            'Averia Libre',
+            'Averia Sans Libre',
+            'Averia Serif Libre',
+            'Ayuthaya',
+            'B612',
+            'B612 Mono',
+            'BIZ UDGothic',
+            'BIZ UDGothic Bold',
+            'BIZ UDMincho',
+            'BIZ UDMincho Medium',
+            'BIZ UDPGothic',
+            'BIZ UDPGothic Bold',
+            'BIZ UDPMincho',
+            'BIZ UDPMincho Medium',
+            'BPG Algeti GPL&GNU',
+            'BPG Chveulebrivi GPL&GNU',
+            'BPG Courier GPL&GNU',
+            'BPG Courier S GPL&GNU',
+            'BPG DedaEna Block GPL&GNU',
+            'BPG DejaVu Sans 2011 GNU-GPL',
+            'BPG Elite GPL&GNU',
+            'BPG Excelsior Caps GPL&GNU',
+            'BPG Excelsior Condencerd GPL&GNU',
+            'BPG Excelsior GPL&GNU',
+            'BPG Glaho GPL&GNU',
+            'BPG Gorda GPL&GNU',
+            'BPG Ingiri GPL&GNU',
+            'BPG Mrgvlovani Caps GNU&GPL',
+            'BPG Mrgvlovani GPL&GNU',
+            'BPG Nateli Caps GPL&GNU',
+            'BPG Nateli Condenced GPL&GNU',
+            'BPG Nateli GPL&GNU',
+            'BPG Nino Medium Cond GPL&GNU',
+            'BPG Nino Medium GPL&GNU',
+            'BPG Sans GPL&GNU',
+            'BPG Sans Medium GPL&GNU',
+            'BPG Sans Modern GPL&GNU',
+            'BPG Sans Regular GPL&GNU',
+            'BPG Serif GPL&GNU',
+            'BPG Serif Modern GPL&GNU',
+            'Bad Script',
+            'Baghdad',
+            'Baghdad Regular',
+            'Bahiana',
+            'Bahianita',
+            'Bahnschrift',
+            'Bahnschrift Light',
+            'Bahnschrift SemiBold',
+            'Bahnschrift SemiLight',
+            'Bai Jamjuree',
+            'Baloo',
+            'Baloo Bhai',
+            'Baloo Bhaijaan',
+            'Baloo Bhaina',
+            'Baloo Chettan',
+            'Baloo Da',
+            'Baloo Paaji',
+            'Baloo Tamma',
+            'Baloo Tammudu',
+            'Baloo Thambi',
+            'Balthazar',
+            'Bandy',
+            'Bangers',
+            'Bangla MN',
+            'Bangla MN Bold',
+            'Bangla Sangam MN',
+            'Bangla Sangam MN Bold',
+            'Bank Gothic',
+            'BankGothic Lt BT',
+            'BankGothic Md BT',
+            'Baoli SC',
+            'Baoli SC Regular',
+            'Baoli TC',
+            'Baoli TC Regular',
+            'Barlow',
+            'Barlow Condensed',
+            'Barlow Semi Condensed',
+            'Barriecito',
+            'Barrio',
+            'Basic',
+            'Baskerville',
+            'Baskerville Bold',
+            'Baskerville Bold Italic',
+            'Baskerville Italic',
+            'Baskerville Old Face',
+            'Baskerville SemiBold',
+            'Baskerville SemiBold Italic',
+            'Batang',
+            'BatangChe',
+            'Battambang',
+            'Bauer Bodoni',
+            'Bauhaus 93',
+            'Baumans',
+            'Bayon',
+            'Bazooka',
+            'Be Vietnam',
+            'Bebas Neue',
+            'Beirut',
+            'Beirut Regular',
+            'Belgrano',
+            'Bell Gothic Std Black',
+            'Bell Gothic Std Light',
+            'Bell MT',
+            'Bellefair',
+            'Belleza',
+            'Bembo',
+            'BenchNine',
+            'Benguiat Bk BT',
+            'Bentham',
+            'Berkshire Swash',
+            'Berlin Sans FB',
+            'Berlin Sans FB Demi',
+            'Bernard MT Condensed',
+            'BernhardFashion BT',
+            'BernhardMod BT',
+            'Beth Ellen',
+            'Bevan',
+            'BiauKai',
+            'Bickham Script One',
+            'Bickham Script Pro Regular',
+            'Bickham Script Pro Semibold',
+            'Bickham Script Two',
+            'Big Caslon',
+            'Big Caslon Medium',
+            'Big Shoulders Display',
+            'Big Shoulders Text',
+            'Bigelow Rules',
+            'Bigshot One',
+            'Bilbo',
+            'Bilbo Swash Caps',
+            'BinnerD',
+            'BioRhyme',
+            'BioRhyme Expanded',
+            'Birch Std',
+            'Biryani',
+            'Bitstream Charter',
+            'Bitstream Vera Sans Mono',
+            'Bitter',
+            'Black And White Picture',
+            'Black Han Sans',
+            'Black Ops One',
+            'Blackadder ITC',
+            'Blackoak Std',
+            'BlairMdITC TT',
+            'BlinkMacSystemFont',
+            'Blinker',
+            'Bodoni 72',
+            'Bodoni 72 Bold',
+            'Bodoni 72 Book',
+            'Bodoni 72 Book Italic',
+            'Bodoni 72 Oldstyle',
+            'Bodoni 72 Oldstyle Bold',
+            'Bodoni 72 Oldstyle Book',
+            'Bodoni 72 Oldstyle Book Italic',
+            'Bodoni 72 Smallcaps',
+            'Bodoni 72 Smallcaps Book',
+            'Bodoni MT',
+            'Bodoni MT Black',
+            'Bodoni MT Condensed',
+            'Bodoni MT Poster Compressed',
+            'Bodoni Ornaments',
+            'Bokor',
+            'Bonbon',
+            'Boogaloo',
+            'Book Antiqua',
+            'Bookman Old Style',
+            'Bookshelf Symbol 7',
+            'Boulder',
+            'Bowlby One',
+            'Bowlby One SC',
+            'Bradley Hand',
+            'Bradley Hand Bold',
+            'Bradley Hand ITC',
+            'Brawler',
+            'Bree Serif',
+            'Bremen Bd BT',
+            'Britannic Bold',
+            'Broadway',
+            'Browallia New',
+            'Browallia New Bold',
+            'Browallia New Bold Italic',
+            'Browallia New Italic',
+            'BrowalliaUPC',
+            'BrowalliaUPC Bold',
+            'BrowalliaUPC Bold Italic',
+            'BrowalliaUPC Italic',
+            'Brush Script',
+            'Brush Script MT',
+            'Brush Script MT Italic',
+            'Brush Script Std',
+            'Bubblegum Sans',
+            'Bubbler One',
+            'Buda',
+            'Buenard',
+            'Bungee',
+            'Bungee Hairline',
+            'Bungee Inline',
+            'Bungee Outline',
+            'Bungee Shade',
+            'Butcherman',
+            'Butterfly Kids',
+            'C059',
+            'CG Omega',
+            'CG Times',
+            'Cabin',
+            'Cabin Condensed',
+            'Cabin Sketch',
+            'Caesar Dressing',
+            'Cagliostro',
+            'Cairo',
+            'Caladea',
+            'Caladings CLM',
+            'Calibri',
+            'Calibri Bold',
+            'Calibri Bold Italic',
+            'Calibri Italic',
+            'Calibri Light',
+            'Calibri Light Italic',
+            'Californian FB',
+            'Calisto MT',
+            'Calligraffitti',
+            'Calligraph',
+            'Calligrapher',
+            'Cambay',
+            'Cambo',
+            'Cambria',
+            'Cambria Bold',
+            'Cambria Bold Italic',
+            'Cambria Italic',
+            'Cambria Math',
+            'Candal',
+            'Candara',
+            'Candara Bold',
+            'Candara Bold Italic',
+            'Candara Italic',
+            'Candara Light',
+            'Candara Light Italic',
+            'Cantarell',
+            'Cantarell Extra Bold',
+            'Cantarell Light',
+            'Cantarell Thin',
+            'Cantata One',
+            'Cantora One',
+            'Capriola',
+            'Cardo',
+            'Carlito',
+            'Carme',
+            'Carolina',
+            'Carrois Gothic',
+            'Carrois Gothic SC',
+            'Carter One',
+            'CaslonOpnface BT',
+            'Castellar',
+            'Catamaran',
+            'Caudex',
+            'Caveat',
+            'Caveat Brush',
+            'Cedarville Cursive',
+            'Centaur',
+            'Century',
+            'Century Gothic',
+            'Century Schoolbook',
+            'Century Schoolbook L',
+            'Ceremonious Two',
+            'Ceviche One',
+            'Cezanne',
+            'Chakra Petch',
+            'Chalkboard',
+            'Chalkboard Bold',
+            'Chalkboard SE',
+            'Chalkboard SE Bold',
+            'Chalkboard SE Light',
+            'Chalkboard SE Regular',
+            'Chalkduster',
+            'Chandas',
+            'Changa',
+            'Changa One',
+            'Chango',
+            'Chaparral Pro',
+            'Chaparral Pro Light',
+            'Charcoal CY',
+            'Charlemagne Std',
+            'Charlesworth',
+            'Charm',
+            'Charmonman',
+            'Charter',
+            'Charter BT',
+            'Charter Bd BT',
+            'Charter Black',
+            'Charter Black Italic',
+            'Charter Bold',
+            'Charter Bold Italic',
+            'Charter Italic',
+            'Charter Roman',
+            'Chathura',
+            'Chau Philomene One',
+            'Chaucer',
+            'Chela One',
+            'Chelsea Market',
+            'ChelthmITC Bk BT',
+            'Chenla',
+            'Cherry Cream Soda',
+            'Cherry Swash',
+            'Chewy',
+            'Chicle',
+            'Chilanka',
+            'Chiller',
+            'Chivo',
+            'Chonburi',
+            'Cinzel',
+            'Cinzel Decorative',
+            'CityBlueprint',
+            'Clarendon',
+            'Clarendon BT',
+            'Clarendon Blk BT',
+            'Clarendon Condensed',
+            'Clarendon Lt BT',
+            'Clean',
+            'Clicker Script',
+            'CloisterBlack BT',
+            'Cochin',
+            'Cochin Bold',
+            'Cochin Bold Italic',
+            'Cochin Italic',
+            'Coda',
+            'Coda Caption',
+            'Codystar',
+            'Coiny',
+            'Colonna MT',
+            'Combo',
+            'Comfortaa',
+            'Comfortaa Light',
+            'Comic Sans',
+            'Comic Sans MS',
+            'Comic Sans MS Bold',
+            'Comic Sans MS Bold Italic',
+            'Comic Sans MS Italic',
+            'Coming Soon',
+            'CommercialPi BT',
+            'CommercialScript BT',
+            'Complex',
+            'Concert One',
+            'Condiment',
+            'Consolas',
+            'Consolas Bold',
+            'Consolas Bold Italic',
+            'Consolas Italic',
+            'Constantia',
+            'Constantia Bold',
+            'Constantia Bold Italic',
+            'Constantia Italic',
+            'Content',
+            'Contrail One',
+            'Convergence',
+            'Cookie',
+            'Cooper Black',
+            'Cooper Std Black',
+            'CopperplGoth Bd BT',
+            'Copperplate',
+            'Copperplate Bold',
+            'Copperplate Gothic',
+            'Copperplate Gothic Bold',
+            'Copperplate Gothic Light',
+            'Copperplate Light',
+            'Copse',
+            'Copyist',
+            'Corbel',
+            'Corbel Bold',
+            'Corbel Bold Italic',
+            'Corbel Italic',
+            'Corbel Light',
+            'Corbel Light Italic',
+            'Corben',
+            'Cordia New',
+            'Cordia New Bold',
+            'Cordia New Bold Italic',
+            'Cordia New Italic',
+            'CordiaUPC',
+            'CordiaUPC Bold',
+            'CordiaUPC Bold Italic',
+            'CordiaUPC Italic',
+            'Cormorant',
+            'Cormorant Garamond',
+            'Cormorant Infant',
+            'Cormorant SC',
+            'Cormorant Unicase',
+            'Cormorant Upright',
+            'Cornerstone',
+            'Coronet',
+            'Corsiva Hebrew',
+            'Corsiva Hebrew Bold',
+            'Cortoba',
+            'CountryBlueprint',
+            'Courgette',
+            'Courier',
+            'Courier 10 Pitch',
+            'Courier Bold',
+            'Courier Bold Oblique',
+            'Courier New',
+            'Courier New Baltic',
+            'Courier New Bold',
+            'Courier New Bold Italic',
+            'Courier New CE',
+            'Courier New CYR',
+            'Courier New Cyr',
+            'Courier New Greek',
+            'Courier New Italic',
+            'Courier New TUR',
+            'Courier Oblique',
+            'Cousine',
+            'Coustard',
+            'Covered By Your Grace',
+            'Crafty Girls',
+            'Creepster',
+            'Crete Round',
+            'Crimson Pro',
+            'Crimson Text',
+            'Croissant One',
+            'Crushed',
+            'Cuckoo',
+            'Cuprum',
+            'Curlz MT',
+            'Cursor',
+            'Cute Font',
+            'Cutive',
+            'Cutive Mono',
+            'D050000L',
+            'DB LCD Temp',
+            'DELICIOUS',
+            'DFKai-SB',
+            'DIN',
+            'DIN Alternate',
+            'DIN Alternate Bold',
+            'DIN Condensed',
+            'DIN Condensed Bold',
+            'DM Sans',
+            'DM Serif Display',
+            'DM Serif Text',
+            'Damascus',
+            'Damascus Bold',
+            'Damascus Light',
+            'Damascus Medium',
+            'Damascus Regular',
+            'Damascus Semi Bold',
+            'Damion',
+            'Dancing Script',
+            'Dangrek',
+            'Darker Grotesque',
+            'DaunPenh',
+            'Dauphin',
+            'David',
+            'David Bold',
+            'David CLM',
+            'David Libre',
+            'Dawning of a New Day',
+            'Days One',
+            'DecoType Naskh',
+            'DecoType Naskh Regular',
+            'Decor',
+            'DejaVu Math TeX Gyre',
+            'DejaVu Sans',
+            'DejaVu Sans Condensed',
+            'DejaVu Sans Light',
+            'DejaVu Sans Mono',
+            'DejaVu Serif',
+            'DejaVu Serif Condensed',
+            'Dekko',
+            'Delius',
+            'Delius Swash Caps',
+            'Delius Unicase',
+            'Della Respira',
+            'DengXian',
+            'DengXian Bold',
+            'DengXian Light',
+            'Denk One',
+            'Denmark',
+            'Devanagari MT',
+            'Devanagari MT Bold',
+            'Devanagari Sangam MN',
+            'Devanagari Sangam MN Bold',
+            'Devonshire',
+            'Dhurjati',
+            'Didact Gothic',
+            'Didot',
+            'Didot Bold',
+            'Didot Italic',
+            'DilleniaUPC',
+            'DilleniaUPC Bold',
+            'DilleniaUPC Bold Italic',
+            'DilleniaUPC Italic',
+            'Dimnah',
+            'Dingbats',
+            'Diplomata',
+            'Diplomata SC',
+            'Diwan Kufi',
+            'Diwan Kufi Regular',
+            'Diwan Mishafi',
+            'Diwan Thuluth',
+            'Diwan Thuluth Regular',
+            'Do Hyeon',
+            'DokChampa',
+            'Dokdo',
+            'Domine',
+            'Donegal One',
+            'Doppio One',
+            'Dorsa',
+            'Dosis',
+            'Dotum',
+            'DotumChe',
+            'Dr Sugiyama',
+            'Droid Arabic Kufi',
+            'Droid Arabic Naskh',
+            'Droid Naskh Shift Alt',
+            'Droid Sans',
+            'Droid Sans Arabic',
+            'Droid Sans Armenian',
+            'Droid Sans Devanagari',
+            'Droid Sans Ethiopic',
+            'Droid Sans Fallback',
+            'Droid Sans Georgian',
+            'Droid Sans Hebrew',
+            'Droid Sans Japanese',
+            'Droid Sans Mono',
+            'Droid Sans Tamil',
+            'Droid Sans Thai',
+            'Droid Serif',
+            'Drugulin CLM',
+            'Duru Sans',
+            'Dutch801 Rm BT',
+            'Dutch801 XBd BT',
+            'Dynalight',
+            'Dyuthi',
+            'EB Garamond',
+            'EUROSTILE',
+            'Eagle Lake',
+            'East Sea Dokdo',
+            'Eater',
+            'Ebrima',
+            'Ebrima Bold',
+            'Eccentric Std',
+            'Economica',
+            'Eczar',
+            'Edwardian Script ITC',
+            'Eeyek Unicode',
+            'El Messiri',
+            'Electrolize',
+            'Electron',
+            'Elephant',
+            'Ellinia CLM',
+            'Elsie',
+            'Elsie Swash Caps',
+            'Emblema One',
+            'Emilys Candy',
+            'EmojiOne Mozilla',
+            'Encode Sans',
+            'Encode Sans Condensed',
+            'Encode Sans Expanded',
+            'Encode Sans Semi Condensed',
+            'Encode Sans Semi Expanded',
+            'Engagement',
+            'Englebert',
+            'English 111 Vivace BT',
+            'Engravers MT',
+            'EngraversGothic BT',
+            'Enriqueta',
+            'Eras Bold ITC',
+            'Eras Demi ITC',
+            'Eras Light ITC',
+            'Eras Medium ITC',
+            'Erica One',
+            'Esteban',
+            'Estrangelo Edessa',
+            'EucrosiaUPC',
+            'EucrosiaUPC Bold',
+            'EucrosiaUPC Bold Italic',
+            'EucrosiaUPC Italic',
+            'Euphemia',
+            'Euphemia UCAS',
+            'Euphemia UCAS Bold',
+            'Euphemia UCAS Italic',
+            'Euphoria Script',
+            'EuroRoman',
+            'Eurostile',
+            'Ewert',
+            'Exo',
+            'Exo 2',
+            'Exotc350 Bd BT',
+            'Expletus Sans',
+            'Ezra SIL',
+            'Ezra SIL SR',
+            'FONTIN',
+            'FRUTIGER',
+            'Fahkwang',
+            'FangSong',
+            'Fanwood Text',
+            'Farah',
+            'Farah Regular',
+            'Farisi',
+            'Farisi Regular',
+            'Farro',
+            'Farsan',
+            'Fascinate',
+            'Fascinate Inline',
+            'Faster One',
+            'Fasthand',
+            'Fauna One',
+            'Faustina',
+            'Federant',
+            'Federo',
+            'Felipa',
+            'Felix Titling',
+            'Fenix',
+            'Finger Paint',
+            'Fira Code',
+            'Fira Mono',
+            'Fira Sans',
+            'Fira Sans Condensed',
+            'Fira Sans Extra Condensed',
+            'Fixed',
+            'Fixed Miriam Transparent',
+            'Fixedsys',
+            'Fjalla One',
+            'Fjord One',
+            'Flamenco',
+            'Flavors',
+            'Fondamento',
+            'FontAwesome',
+            'Fontdiner Swanky',
+            'Footlight MT Light',
+            'Forte',
+            'Forum',
+            'Francois One',
+            'Frank Ruehl CLM',
+            'Frank Ruehl Libre',
+            'Frank Ruehl Libre Black',
+            'Frank Ruehl Libre Light',
+            'Frank Ruhl Libre',
+            'FrankRuehl',
+            'Franklin Gothic',
+            'Franklin Gothic Book',
+            'Franklin Gothic Demi',
+            'Franklin Gothic Demi Cond',
+            'Franklin Gothic Heavy',
+            'Franklin Gothic Medium',
+            'Franklin Gothic Medium Cond',
+            'Franklin Gothic Medium Italic',
+            'Fransiscan',
+            'Freckle Face',
+            'Fredericka the Great',
+            'Fredoka One',
+            'Free Avant Garde',
+            'Free Bookman',
+            'Free Chancery',
+            'Free Courier',
+            'Free Helvetian',
+            'Free Helvetian Condensed',
+            'Free Paladin',
+            'Free Schoolbook',
+            'Free Times',
+            'FreeMono',
+            'FreeSans',
+            'FreeSerif',
+            'Freefrm721 Blk BT',
+            'Freehand',
+            'Freehand521 BT',
+            'FreesiaUPC',
+            'FreesiaUPC Bold',
+            'FreesiaUPC Bold Italic',
+            'FreesiaUPC Italic',
+            'Freestyle Script',
+            'French Script MT',
+            'Fresca',
+            'Frijole',
+            'FrnkGothITC Bk BT',
+            'Fruitger',
+            'Fruktur',
+            'Fugaz One',
+            'Furat',
+            'Futura',
+            'Futura Bk BT',
+            'Futura Bold',
+            'Futura Conden',
+            'Futura Condensed ExtraBold',
+            'Futura Condensed Medium',
+            'Futura CondensedExtraBold',
+            'Futura CondensedMedium',
+            'Futura Lt BT',
+            'Futura Md BT',
+            'Futura Medium',
+            'Futura Medium Italic',
+            'Futura MediumItalic',
+            'Futura ZBlk BT',
+            'FuturaBlack BT',
+            'GB18030 Bitmap',
+            'GDT',
+            'GENISO',
+            'GFS Didot',
+            'GFS Neohellenic',
+            'GOTHAM',
+            'GOTHAM BOLD',
+            'Gabriela',
+            'Gabriola',
+            'Gadugi',
+            'Gadugi Bold',
+            'Gaegu',
+            'Gafata',
+            'Galada',
+            'Galdeano',
+            'Galindo',
+            'Galliard BT',
+            'Galvji',
+            'Gamja Flower',
+            'Garamond',
+            'Garamond Premr Pro',
+            'Garamond Premr Pro Smbd',
+            'Gargi',
+            'Garuda',
+            'Gautami',
+            'Gautami Bold',
+            'Gayathri',
+            'Gayathri Thin',
+            'Geeza Pro',
+            'Geeza Pro Bold',
+            'Geeza Pro Light',
+            'Geeza Pro Regular',
+            'Geneva',
+            'Geneva CY',
+            'Gentium',
+            'Gentium Basic',
+            'Gentium Book Basic',
+            'GentiumAlt',
+            'Geo',
+            'GeoSlab 703 Lt BT',
+            'GeoSlab 703 XBd BT',
+            'Geometr231 BT',
+            'Geometr231 Hv BT',
+            'Geometr231 Lt BT',
+            'Georgia',
+            'Georgia Bold',
+            'Georgia Bold Italic',
+            'Georgia BoldItalic',
+            'Georgia Italic',
+            'Georgia Pro',
+            'Georgia Pro Black',
+            'Georgia Pro Black Italic',
+            'Georgia Pro Bold',
+            'Georgia Pro Bold Italic',
+            'Georgia Pro Cond',
+            'Georgia Pro Cond Black',
+            'Georgia Pro Cond Black Italic',
+            'Georgia Pro Cond Bold',
+            'Georgia Pro Cond Bold Italic',
+            'Georgia Pro Cond Italic',
+            'Georgia Pro Cond Light',
+            'Georgia Pro Cond Light Italic',
+            'Georgia Pro Cond Semibold',
+            'Georgia Pro Cond Semibold Italic',
+            'Georgia Pro Italic',
+            'Georgia Pro Light',
+            'Georgia Pro Light Italic',
+            'Georgia Pro Semibold',
+            'Georgia Pro Semibold Italic',
+            'Geostar',
+            'Geostar Fill',
+            'Germania One',
+            'Giddyup Std',
+            'Gidugu',
+            'Gigi',
+            'Gilda Display',
+            'Gill Sans',
+            'Gill Sans Bold',
+            'Gill Sans Bold Italic',
+            'Gill Sans BoldItalic',
+            'Gill Sans Italic',
+            'Gill Sans Light',
+            'Gill Sans Light Italic',
+            'Gill Sans LightItalic',
+            'Gill Sans MT',
+            'Gill Sans MT Condensed',
+            'Gill Sans MT Ext Condensed Bold',
+            'Gill Sans Nova',
+            'Gill Sans Nova Bold',
+            'Gill Sans Nova Bold Italic',
+            'Gill Sans Nova Cond',
+            'Gill Sans Nova Cond Bold',
+            'Gill Sans Nova Cond Bold Italic',
+            'Gill Sans Nova Cond Italic',
+            'Gill Sans Nova Cond Lt',
+            'Gill Sans Nova Cond Lt Italic',
+            'Gill Sans Nova Cond Ultra Bold',
+            'Gill Sans Nova Cond XBd',
+            'Gill Sans Nova Cond XBd Italic',
+            'Gill Sans Nova Italic',
+            'Gill Sans Nova Light',
+            'Gill Sans Nova Light Italic',
+            'Gill Sans Nova Ultra Bold',
+            'Gill Sans SemiBold',
+            'Gill Sans SemiBold Italic',
+            'Gill Sans SemiBoldItalic',
+            'Gill Sans Ultra Bold',
+            'Gill Sans Ultra Bold Condensed',
+            'Gill Sans UltraBold',
+            'Gisha',
+            'Gisha Bold',
+            'Give You Glory',
+            'Glass Antiqua',
+            'Glegoo',
+            'Gloria Hallelujah',
+            'Gloucester MT Extra Condensed',
+            'Goblin One',
+            'Gochi Hand',
+            'Gorditas',
+            'Gothic A1',
+            'GothicE',
+            'GothicG',
+            'GothicI',
+            'Goudy Bookletter 1911',
+            'Goudy Old Style',
+            'Goudy Stout',
+            'GoudyHandtooled BT',
+            'GoudyOLSt BT',
+            'Graduate',
+            'Granada',
+            'Grand Hotel',
+            'Graph',
+            'Gravitas One',
+            'Great Vibes',
+            'GreekC',
+            'GreekS',
+            'Grenze',
+            'Griffy',
+            'Gruppo',
+            'Gubbi',
+            'Gudea',
+            'Gugi',
+            'Gujarati MT',
+            'Gujarati MT Bold',
+            'Gujarati Sangam MN',
+            'Gujarati Sangam MN Bold',
+            'Gulim',
+            'GulimChe',
+            'GungSeo',
+            'GungSeo Regular',
+            'Gungsuh',
+            'GungsuhChe',
+            'Gurajada',
+            'Gurmukhi MN',
+            'Gurmukhi MN Bold',
+            'Gurmukhi MT',
+            'Gurmukhi Sangam MN',
+            'Gurmukhi Sangam MN Bold',
+            'HELV',
+            'Habibi',
+            'Hadasim CLM',
+            'Haettenschweiler',
+            'Halant',
+            'Hammersmith One',
+            'Hanalei',
+            'Hanalei Fill',
+            'Handlee',
+            'Hani',
+            'Hannotate SC',
+            'Hannotate SC Bold',
+            'Hannotate SC Regular',
+            'Hannotate TC',
+            'Hannotate TC Bold',
+            'Hannotate TC Regular',
+            'Hanuman',
+            'HanziPen SC',
+            'HanziPen SC Bold',
+            'HanziPen SC Regular',
+            'HanziPen TC',
+            'HanziPen TC Bold',
+            'HanziPen TC Regular',
+            'Happy Monkey',
+            'Haramain',
+            'Harlow Solid Italic',
+            'Harmattan',
+            'Harrington',
+            'HeadLineA Regular',
+            'Headland One',
+            'HeadlineA',
+            'Heather',
+            'Heather Script One',
+            'Heebo',
+            'Hei',
+            'Hei Regular',
+            'Heiti SC',
+            'Heiti SC Light',
+            'Heiti SC Medium',
+            'Heiti TC',
+            'Heiti TC Light',
+            'Heiti TC Medium',
+            'Helkevtrica',
+            'Helvetica',
+            'Helvetica Bold',
+            'Helvetica Bold Oblique',
+            'Helvetica CY',
+            'Helvetica CY Bold',
+            'Helvetica CY BoldOblique',
+            'Helvetica CY Oblique',
+            'Helvetica CY Plain',
+            'Helvetica LT MM',
+            'Helvetica Light',
+            'Helvetica Light Oblique',
+            'Helvetica Neue',
+            'Helvetica Neue Bold',
+            'Helvetica Neue Bold Italic',
+            'Helvetica Neue Condensed Black',
+            'Helvetica Neue Condensed Bold',
+            'Helvetica Neue Desk UI',
+            'Helvetica Neue Desk UI Bold',
+            'Helvetica Neue Desk UI Bold Italic',
+            'Helvetica Neue Desk UI Italic',
+            'Helvetica Neue DeskInterface',
+            'Helvetica Neue Italic',
+            'Helvetica Neue Light',
+            'Helvetica Neue Light Italic',
+            'Helvetica Neue Medium',
+            'Helvetica Neue Medium Italic',
+            'Helvetica Neue Thin',
+            'Helvetica Neue Thin Italic',
+            'Helvetica Neue UltraLight',
+            'Helvetica Neue UltraLight Italic',
+            'Helvetica Oblique',
+            'Henny Penny',
+            'Hepta Slab',
+            'Herald',
+            'Herculanum',
+            'Herr Von Muellerhoff',
+            'Hershey-Gothic-English',
+            'Hershey-Gothic-German',
+            'Hershey-Gothic-Italian',
+            'Hershey-Plain-Duplex',
+            'Hershey-Plain-Duplex-Italic',
+            'Hershey-Plain-Triplex',
+            'Hershey-Plain-Triplex-Italic',
+            'Hershey-Script-Complex',
+            'Hershey-Script-Simplex',
+            'Hi Melody',
+            'High Tower Text',
+            'Hind',
+            'Hind Guntur',
+            'Hind Madurai',
+            'Hind Siliguri',
+            'Hind Vadodara',
+            'Hiragino Kaku Gothic Pro',
+            'Hiragino Kaku Gothic Pro W3',
+            'Hiragino Kaku Gothic Pro W6',
+            'Hiragino Kaku Gothic ProN',
+            'Hiragino Kaku Gothic ProN W3',
+            'Hiragino Kaku Gothic ProN W6',
+            'Hiragino Kaku Gothic Std',
+            'Hiragino Kaku Gothic Std W8',
+            'Hiragino Kaku Gothic StdN',
+            'Hiragino Kaku Gothic StdN W8',
+            'Hiragino Maru Gothic Pro',
+            'Hiragino Maru Gothic Pro W4',
+            'Hiragino Maru Gothic ProN',
+            'Hiragino Maru Gothic ProN W4',
+            'Hiragino Mincho Pro',
+            'Hiragino Mincho Pro W3',
+            'Hiragino Mincho Pro W6',
+            'Hiragino Mincho ProN',
+            'Hiragino Mincho ProN W3',
+            'Hiragino Mincho ProN W6',
+            'Hiragino Sans',
+            'Hiragino Sans CNS',
+            'Hiragino Sans CNS W3',
+            'Hiragino Sans CNS W6',
+            'Hiragino Sans GB',
+            'Hiragino Sans GB W3',
+            'Hiragino Sans GB W6',
+            'Hiragino Sans W0',
+            'Hiragino Sans W1',
+            'Hiragino Sans W2',
+            'Hiragino Sans W3',
+            'Hiragino Sans W4',
+            'Hiragino Sans W5',
+            'Hiragino Sans W6',
+            'Hiragino Sans W7',
+            'Hiragino Sans W8',
+            'Hiragino Sans W9',
+            'Hobo Std',
+            'Hoefler Text',
+            'Hoefler Text Black',
+            'Hoefler Text Black Italic',
+            'Hoefler Text Italic',
+            'Hoefler Text Ornaments',
+            'HoloLens MDL2 Assets',
+            'Holtwood One SC',
+            'Homa',
+            'Homemade Apple',
+            'Homenaje',
+            'Hor',
+            'Humanst 521 Cn BT',
+            'Humanst521 BT',
+            'Humanst521 Lt BT',
+            'IBM Plex Mono',
+            'IBM Plex Sans',
+            'IBM Plex Sans Condensed',
+            'IBM Plex Serif',
+            'IM Fell DW Pica',
+            'IM Fell DW Pica SC',
+            'IM Fell Double Pica',
+            'IM Fell Double Pica SC',
+            'IM Fell English',
+            'IM Fell English SC',
+            'IM Fell French Canon',
+            'IM Fell French Canon SC',
+            'IM Fell Great Primer',
+            'IM Fell Great Primer SC',
+            'INCONSOLATA',
+            'INTERSTATE',
+            'IPAGothic',
+            'IPAMincho',
+            'IPAPGothic',
+            'IPAPMincho',
+            'ISOCP',
+            'ISOCP2',
+            'ISOCP3',
+            'ISOCPEUR',
+            'ISOCT',
+            'ISOCT2',
+            'ISOCT3',
+            'ISOCTEUR',
+            'ITF Devanagari',
+            'ITF Devanagari Bold',
+            'ITF Devanagari Book',
+            'ITF Devanagari Demi',
+            'ITF Devanagari Light',
+            'ITF Devanagari Marathi',
+            'ITF Devanagari Marathi Bold',
+            'ITF Devanagari Marathi Book',
+            'ITF Devanagari Marathi Demi',
+            'ITF Devanagari Marathi Light',
+            'ITF Devanagari Marathi Medium',
+            'ITF Devanagari Medium',
+            'Iceberg',
+            'Iceland',
+            'Impact',
+            'Imprima',
+            'Imprint MT Shadow',
+            'InaiMathi',
+            'InaiMathi Bold',
+            'Incised901 BT',
+            'Incised901 Bd BT',
+            'Incised901 Lt BT',
+            'Inconsolata',
+            'Inder',
+            'Indie Flower',
+            'Informal Roman',
+            'Informal011 BT',
+            'Inika',
+            'Ink Free',
+            'Inknut Antiqua',
+            'Iowan Old Style',
+            'Iowan Old Style Black',
+            'Iowan Old Style Black Italic',
+            'Iowan Old Style Bold',
+            'Iowan Old Style Bold Italic',
+            'Iowan Old Style Italic',
+            'Iowan Old Style Roman',
+            'Iowan Old Style Titling',
+            'IrisUPC',
+            'IrisUPC Bold',
+            'IrisUPC Bold Italic',
+            'IrisUPC Italic',
+            'Irish Grover',
+            'Iskoola Pota',
+            'Iskoola Pota Bold',
+            'Istok Web',
+            'Italiana',
+            'Italianno',
+            'Italic',
+            'ItalicC',
+            'ItalicT',
+            'Itim',
+            'Jacques Francois',
+            'Jacques Francois Shadow',
+            'Jaldi',
+            'Jamrul',
+            'Japan',
+            'JasmineUPC',
+            'JasmineUPC Bold',
+            'JasmineUPC Bold Italic',
+            'JasmineUPC Italic',
+            'Javanese Text',
+            'Jazz LET',
+            'Jenson',
+            'Jester',
+            'Jet',
+            'Jim Nightshade',
+            'Jockey One',
+            'Jokerman',
+            'Jolly Lodger',
+            'Jomhuria',
+            'Jomolhari',
+            'Josefin Sans',
+            'Josefin Slab',
+            'Joti One',
+            'Jua',
+            'Judson',
+            'Juice ITC',
+            'Julee',
+            'Julius Sans One',
+            'Junge',
+            'Jura',
+            'Just Another Hand',
+            'Just Me Again Down Here',
+            'K2D',
+            'Kabel Bk BT',
+            'Kabel Ult BT',
+            'KacstArt',
+            'KacstBook',
+            'KacstDecorative',
+            'KacstDigital',
+            'KacstFarsi',
+            'KacstLetter',
+            'KacstNaskh',
+            'KacstOffice',
+            'KacstOne',
+            'KacstPen',
+            'KacstPoster',
+            'KacstQurn',
+            'KacstScreen',
+            'KacstTitle',
+            'KacstTitleL',
+            'Kadwa',
+            'Kai',
+            'Kai Regular',
+            'KaiTi',
+            'Kailasa',
+            'Kailasa Bold',
+            'Kailasa Regular',
+            'Kaiti SC',
+            'Kaiti SC Black',
+            'Kaiti SC Bold',
+            'Kaiti SC Regular',
+            'Kaiti TC',
+            'Kaiti TC Black',
+            'Kaiti TC Bold',
+            'Kaiti TC Regular',
+            'Kalam',
+            'Kalapi',
+            'Kalimati',
+            'Kalinga',
+            'Kalinga Bold',
+            'Kalyani',
+            'Kameron',
+            'Kanit',
+            'Kannada MN',
+            'Kannada MN Bold',
+            'Kannada Sangam MN',
+            'Kannada Sangam MN Bold',
+            'Kantumruy',
+            'Karla',
+            'Karma',
+            'Kartika',
+            'Kartika Bold',
+            'Karumbi',
+            'Katibeh',
+            'Kaufmann BT',
+            'Kaufmann Bd BT',
+            'Kaushan Script',
+            'Kavivanar',
+            'Kavoon',
+            'Kayrawan',
+            'Kdam Thmor',
+            'Keania One',
+            'Kedage',
+            'Kefa',
+            'Kefa Bold',
+            'Kefa Regular',
+            'Kelly Slab',
+            'Kenia',
+            'Keraleeyam',
+            'Keter YG',
+            'Keyboard',
+            'Khalid',
+            'Khand',
+            'Khmer',
+            'Khmer MN',
+            'Khmer MN Bold',
+            'Khmer OS',
+            'Khmer OS Battambang',
+            'Khmer OS Bokor',
+            'Khmer OS Content',
+            'Khmer OS Fasthand',
+            'Khmer OS Freehand',
+            'Khmer OS Metal Chrieng',
+            'Khmer OS Muol',
+            'Khmer OS Muol Light',
+            'Khmer OS Muol Pali',
+            'Khmer OS Siemreap',
+            'Khmer OS System',
+            'Khmer Sangam MN',
+            'Khmer UI',
+            'Khmer UI Bold',
+            'Khula',
+            'Kinnari',
+            'Kirang Haerang',
+            'Kite One',
+            'Klee',
+            'Klee Demibold',
+            'Klee Medium',
+            'Knewave',
+            'KoHo',
+            'Kodchasan',
+            'KodchiangUPC',
+            'KodchiangUPC Bold',
+            'KodchiangUPC Bold Italic',
+            'KodchiangUPC Italic',
+            'Kohinoor Bangla',
+            'Kohinoor Bangla Bold',
+            'Kohinoor Bangla Light',
+            'Kohinoor Bangla Medium',
+            'Kohinoor Bangla Semibold',
+            'Kohinoor Devanagari',
+            'Kohinoor Devanagari Bold',
+            'Kohinoor Devanagari Light',
+            'Kohinoor Devanagari Medium',
+            'Kohinoor Devanagari Regular',
+            'Kohinoor Devanagari Semibold',
+            'Kohinoor Gujarati',
+            'Kohinoor Telugu',
+            'Kohinoor Telugu Bold',
+            'Kohinoor Telugu Light',
+            'Kohinoor Telugu Medium',
+            'Kohinoor Telugu Semibold',
+            'Kokila',
+            'Kokila Bold',
+            'Kokila Bold Italic',
+            'Kokila Italic',
+            'Kokonor',
+            'Kokonor Regular',
+            'Korinna BT',
+            'Kosugi',
+            'Kosugi Maru',
+            'Kotta One',
+            'Koulen',
+            'Kozuka Gothic Pr6N B',
+            'Kozuka Gothic Pr6N EL',
+            'Kozuka Gothic Pr6N H',
+            'Kozuka Gothic Pr6N L',
+            'Kozuka Gothic Pr6N M',
+            'Kozuka Gothic Pr6N R',
+            'Kozuka Gothic Pro B',
+            'Kozuka Gothic Pro EL',
+            'Kozuka Gothic Pro H',
+            'Kozuka Gothic Pro L',
+            'Kozuka Gothic Pro M',
+            'Kozuka Gothic Pro R',
+            'Kozuka Mincho Pr6N B',
+            'Kozuka Mincho Pr6N EL',
+            'Kozuka Mincho Pr6N H',
+            'Kozuka Mincho Pr6N L',
+            'Kozuka Mincho Pr6N M',
+            'Kozuka Mincho Pr6N R',
+            'Kozuka Mincho Pro B',
+            'Kozuka Mincho Pro EL',
+            'Kozuka Mincho Pro H',
+            'Kozuka Mincho Pro L',
+            'Kozuka Mincho Pro M',
+            'Kozuka Mincho Pro R',
+            'Kranky',
+            'Kreon',
+            'Kristen ITC',
+            'Kristi',
+            'Krona One',
+            'Krub',
+            'Krungthep',
+            'KufiStandardGK',
+            'KufiStandardGK Regular',
+            'Kulim Park',
+            'Kumar One',
+            'Kumar One Outline',
+            'Kunstler Script',
+            'Kurale',
+            'LKLUG',
+            'La Belle Aurore',
+            'Lacquer',
+            'Laila',
+            'Lakki Reddy',
+            'Laksaman',
+            'Lalezar',
+            'Lancelot',
+            'Lantinghei SC',
+            'Lantinghei SC Demibold',
+            'Lantinghei SC Extralight',
+            'Lantinghei SC Heavy',
+            'Lantinghei TC',
+            'Lantinghei TC Demibold',
+            'Lantinghei TC Extralight',
+            'Lantinghei TC Heavy',
+            'Lao MN',
+            'Lao MN Bold',
+            'Lao Sangam MN',
+            'Lao UI',
+            'Lao UI Bold',
+            'LastResort',
+            'Lateef',
+            'Latha',
+            'Latha Bold',
+            'Lato',
+            'League Script',
+            'Leckerli One',
+            'Ledger',
+            'Leelawadee',
+            'Leelawadee Bold',
+            'Leelawadee UI',
+            'Leelawadee UI Bold',
+            'Leelawadee UI Leelawadee UI',
+            'Leelawadee UI Semilight',
+            'Lekton',
+            'Lemon',
+            'Lemonada',
+            'Letter Gothic',
+            'Letter Gothic Std',
+            'Levenim MT',
+            'Levenim MT Bold',
+            'Lexend Deca',
+            'Lexend Exa',
+            'Lexend Giga',
+            'Lexend Mega',
+            'Lexend Peta',
+            'Lexend Tera',
+            'Lexend Zetta',
+            'LiHei Pro',
+            'LiSong Pro',
+            'Liberation Mono',
+            'Liberation Sans',
+            'Liberation Sans Narrow',
+            'Liberation Serif',
+            'Libian SC',
+            'Libian SC Regular',
+            'Libian TC',
+            'Libian TC Regular',
+            'Libre Barcode 128',
+            'Libre Barcode 128 Text',
+            'Libre Barcode 39',
+            'Libre Barcode 39 Extended',
+            'Libre Barcode 39 Extended Text',
+            'Libre Barcode 39 Text',
+            'Libre Baskerville',
+            'Libre Caslon Display',
+            'Libre Caslon Text',
+            'Libre Franklin',
+            'Life Savers',
+            'Likhan',
+            'Lilita One',
+            'Lily Script One',
+            'LilyUPC',
+            'LilyUPC Bold',
+            'LilyUPC Bold Italic',
+            'LilyUPC Italic',
+            'Limelight',
+            'Linden Hill',
+            'LingWai SC',
+            'LingWai SC Medium',
+            'LingWai TC',
+            'LingWai TC Medium',
+            'Linux Biolinum Keyboard O',
+            'Linux Biolinum O',
+            'Linux Libertine Display O',
+            'Linux Libertine Initials O',
+            'Linux Libertine Mono O',
+            'Linux Libertine O',
+            'Literata',
+            'Lithograph',
+            'Lithograph Light',
+            'Lithos Pro Regular',
+            'Liu Jian Mao Cao',
+            'Livvic',
+            'Lobster',
+            'Lobster Two',
+            'Lohit Assamese',
+            'Lohit Bengali',
+            'Lohit Devanagari',
+            'Lohit Gujarati',
+            'Lohit Gurmukhi',
+            'Lohit Hindi',
+            'Lohit Kannada',
+            'Lohit Malayalam',
+            'Lohit Marathi',
+            'Lohit Nepali',
+            'Lohit Odia',
+            'Lohit Oriya',
+            'Lohit Punjabi',
+            'Lohit Tamil',
+            'Lohit Tamil Classical',
+            'Lohit Telugu',
+            'Loma',
+            'Londrina Outline',
+            'Londrina Shadow',
+            'Londrina Sketch',
+            'Londrina Solid',
+            'Long Cang',
+            'Long Island',
+            'Lora',
+            'Love Ya Like A Sister',
+            'Loved by the King',
+            'Lovers Quarrel',
+            'Lucida Bright',
+            'Lucida Calligraphy',
+            'Lucida Console',
+            'Lucida Fax',
+            'Lucida Grande',
+            'Lucida Grande Bold',
+            'Lucida Handwriting',
+            'Lucida Sans',
+            'Lucida Sans Typewriter',
+            'Lucida Sans Unicode',
+            'Luckiest Guy',
+            'Luminari',
+            'Lusitana',
+            'Lustria',
+            'Lydian BT',
+            'M PLUS 1p',
+            'M PLUS Rounded 1c',
+            'MONO',
+            'MS Gothic',
+            'MS LineDraw',
+            'MS Mincho',
+            'MS Outlook',
+            'MS PGothic',
+            'MS PMincho',
+            'MS Reference Sans Serif',
+            'MS Reference Specialty',
+            'MS Sans Serif',
+            'MS Serif',
+            'MS UI Gothic',
+            'MT Extra',
+            'MUSEO',
+            'MV Boli',
+            'MYRIAD',
+            'MYRIAD PRO',
+            'Ma Shan Zheng',
+            'Macondo',
+            'Macondo Swash Caps',
+            'Mada',
+            'Madan',
+            'Magneto',
+            'Magra',
+            'Maiandra GD',
+            'Maiden Orange',
+            'Maitree',
+            'Major Mono Display',
+            'Mako',
+            'Malayalam MN',
+            'Malayalam MN Bold',
+            'Malayalam Sangam MN',
+            'Malayalam Sangam MN Bold',
+            'Malgun Gothic',
+            'Malgun Gothic Bold',
+            'Malgun Gothic Semilight',
+            'Mali',
+            'Mallanna',
+            'Mallige',
+            'Mandali',
+            'Mangal',
+            'Mangal Bold',
+            'Manjari',
+            'Manjari Thin',
+            'Mansalva',
+            'Manuale',
+            'Marcellus',
+            'Marcellus SC',
+            'Marck Script',
+            'Margarine',
+            'Marigold',
+            'Marion',
+            'Marion Bold',
+            'Marion Italic',
+            'Marion Regular',
+            'Markazi Text',
+            'Marker Felt',
+            'Marker Felt Thin',
+            'Marker Felt Wide',
+            'Market',
+            'Marko One',
+            'Marlett',
+            'Marmelad',
+            'Martel',
+            'Martel Sans',
+            'Marvel',
+            'Mashq',
+            'Mashq-Bold',
+            'Mate',
+            'Mate SC',
+            'Material Icons',
+            'Matisse ITC',
+            'Matura MT Script Capitals',
+            'Maven Pro',
+            'McLaren',
+            'Meddon',
+            'MedievalSharp',
+            'Medula One',
+            'Meera',
+            'Meera Inimai',
+            'Megrim',
+            'Meie Script',
+            'Meiryo',
+            'Meiryo Bold',
+            'Meiryo Bold Italic',
+            'Meiryo Italic',
+            'Meiryo UI',
+            'Meiryo UI Bold',
+            'Meiryo UI Bold Italic',
+            'Meiryo UI Italic',
+            'Menlo',
+            'Menlo Bold',
+            'Menlo Bold Italic',
+            'Menlo Italic',
+            'Menlo Regular',
+            'Merienda',
+            'Merienda One',
+            'Merriweather',
+            'Merriweather Sans',
+            'Mesquite Std',
+            'Metal',
+            'Metal Mania',
+            'Metamorphous',
+            'Metrophobic',
+            'Michroma',
+            'Microsoft Himalaya',
+            'Microsoft JhengHei',
+            'Microsoft JhengHei Bold',
+            'Microsoft JhengHei Light',
+            'Microsoft JhengHei Regular',
+            'Microsoft JhengHei UI',
+            'Microsoft JhengHei UI Bold',
+            'Microsoft JhengHei UI Light',
+            'Microsoft JhengHei UI Regular',
+            'Microsoft New Tai Lue',
+            'Microsoft New Tai Lue Bold',
+            'Microsoft PhagsPa',
+            'Microsoft PhagsPa Bold',
+            'Microsoft Sans Serif',
+            'Microsoft Tai Le',
+            'Microsoft Tai Le Bold',
+            'Microsoft Uighur',
+            'Microsoft Uighur Bold',
+            'Microsoft YaHei',
+            'Microsoft YaHei Bold',
+            'Microsoft YaHei Light',
+            'Microsoft YaHei UI',
+            'Microsoft YaHei UI Bold',
+            'Microsoft YaHei UI Light',
+            'Microsoft Yi Baiti',
+            'Milonga',
+            'Miltonian',
+            'Miltonian Tattoo',
+            'Mina',
+            'MingLiU',
+            'MingLiU-ExtB',
+            'MingLiU_HKSCS',
+            'MingLiU_HKSCS-ExtB',
+            'Mingzat',
+            'Minion',
+            'Minion Pro',
+            'Minion Pro Cond',
+            'Minion Pro Med',
+            'Minion Pro SmBd',
+            'Miniver',
+            'Miriam',
+            'Miriam CLM',
+            'Miriam Fixed',
+            'Miriam Libre',
+            'Miriam Mono CLM',
+            'Mirza',
+            'Mishafi',
+            'Mishafi Gold',
+            'Mishafi Gold Regular',
+            'Mishafi Regular',
+            'Miss Fajardose',
+            'Mistral',
+            'Mitr',
+            'Mitra Mono',
+            'Modak',
+            'Modern',
+            'Modern Antiqua',
+            'Modern No. 20',
+            'Mogra',
+            'Molengo',
+            'Molle',
+            'Mona Lisa Solid ITC TT',
+            'Monaco',
+            'Monaco CY',
+            'Monda',
+            'Mongolian Baiti',
+            'Monofett',
+            'Monospac821 BT',
+            'Monoton',
+            'Monotxt',
+            'Monotype Corsiva',
+            'Monsieur La Doulaise',
+            'Montaga',
+            'Montez',
+            'Montserrat',
+            'Montserrat Alternates',
+            'Montserrat Black',
+            'Montserrat ExtraBold',
+            'Montserrat ExtraLight',
+            'Montserrat Light',
+            'Montserrat Medium',
+            'Montserrat SemiBold',
+            'Montserrat Subrayada',
+            'Montserrat Thin',
+            'MoolBoran',
+            'Moul',
+            'Moulpali',
+            'Mountains of Christmas',
+            'Mouse Memoirs',
+            'Mr Bedfort',
+            'Mr Dafoe',
+            'Mr De Haviland',
+            'Mrs Eaves',
+            'Mrs Saint Delafield',
+            'Mrs Sheppards',
+            'Mshtakan',
+            'Mshtakan Bold',
+            'Mshtakan BoldOblique',
+            'Mshtakan Oblique',
+            'Mukta',
+            'Mukta Mahee',
+            'Mukta Malar',
+            'Mukta Vaani',
+            'MuktaMahee',
+            'Mukti Narrow',
+            'Mukti Narrow Bold',
+            'Muli',
+            'Muna',
+            'Muna Black',
+            'Muna Bold',
+            'Muna Regular',
+            'Myanmar MN',
+            'Myanmar MN Bold',
+            'Myanmar Sangam MN',
+            'Myanmar Sangam MN Bold',
+            'Myanmar Text',
+            'Myanmar Text Bold',
+            'Myriad Arabic',
+            'Myriad Arabic Black',
+            'Myriad Arabic Black Italic',
+            'Myriad Arabic Bold',
+            'Myriad Arabic Bold Italic',
+            'Myriad Arabic Italic',
+            'Myriad Arabic Light',
+            'Myriad Arabic Light Italic',
+            'Myriad Arabic Semibold',
+            'Myriad Arabic Semibold Italic',
+            'Myriad Hebrew',
+            'Myriad Pro',
+            'Myriad Pro Cond',
+            'Myriad Pro Light',
+            'Myriad Web Pro',
+            'Mystery Quest',
+            'NEVIS',
+            'NSimSun',
+            'NTR',
+            'Nachlieli CLM',
+            'Nada',
+            'Nadeem',
+            'Nadeem Regular',
+            'Nagham',
+            'Nakula',
+            'Nanum Brush Script',
+            'Nanum Gothic',
+            'Nanum Gothic Coding',
+            'Nanum Myeongjo',
+            'Nanum Pen Script',
+            'Nanum Script',
+            'NanumBarunGothic',
+            'NanumGothic',
+            'NanumGothic Bold',
+            'NanumGothic ExtraBold',
+            'NanumGothic Light',
+            'NanumGothicCoding',
+            'NanumGothicExtraBold',
+            'NanumMyeongjo',
+            'NanumMyeongjo Bold',
+            'NanumMyeongjo ExtraBold',
+            'NanumSquare',
+            'NanumSquareRound',
+            'Narkisim',
+            'Navilu',
+            'Navuli',
+            'Nazli',
+            'Neucha',
+            'Neue Haas Grotesk Text Pro',
+            'Neue Haas Grotesk Text Pro Bold',
+            'Neue Haas Grotesk Text Pro Bold Italic',
+            'Neue Haas Grotesk Text Pro Italic',
+            'Neue Haas Grotesk Text Pro Medium',
+            'Neue Haas Grotesk Text Pro Medium Italic',
+            'Neuton',
+            'New Peninim MT',
+            'New Peninim MT Bold',
+            'New Peninim MT Bold Inclined',
+            'New Peninim MT Inclined',
+            'New Rocker',
+            'News Cycle',
+            'News Gothic',
+            'News Gothic MT',
+            'News GothicMT',
+            'NewsGoth BT',
+            'Niagara Engraved',
+            'Niagara Solid',
+            'Nice',
+            'Niconne',
+            'Nimbus Mono L',
+            'Nimbus Mono PS',
+            'Nimbus Roman',
+            'Nimbus Roman No9 L',
+            'Nimbus Sans',
+            'Nimbus Sans L',
+            'Nimbus Sans Narrow',
+            'Niramit',
+            'Nirmala UI',
+            'Nirmala UI Bold',
+            'Nirmala UI Semilight',
+            'Nixie One',
+            'Nobile',
+            'Nokora',
+            'Norasi',
+            'Norican',
+            'Nosifer',
+            'Notable',
+            'Noteworthy',
+            'Noteworthy Bold',
+            'Noteworthy Light',
+            'Nothing You Could Do',
+            'Noticia Text',
+            'Noto Color Emoji',
+            'Noto Emoji',
+            'Noto Kufi Arabic',
+            'Noto Mono',
+            'Noto Music',
+            'Noto Naskh Arabic',
+            'Noto Naskh Arabic UI',
+            'Noto Nastaliq Urdu',
+            'Noto Sans',
+            'Noto Sans Adlam',
+            'Noto Sans Adlam Unjoined',
+            'Noto Sans Anatolian Hieroglyphs',
+            'Noto Sans Arabic',
+            'Noto Sans Arabic UI',
+            'Noto Sans Armenian',
+            'Noto Sans Avestan',
+            'Noto Sans Balinese',
+            'Noto Sans Bamum',
+            'Noto Sans Bassa Vah',
+            'Noto Sans Batak',
+            'Noto Sans Bengali',
+            'Noto Sans Bengali UI',
+            'Noto Sans Bhaiksuki',
+            'Noto Sans Brahmi',
+            'Noto Sans Buginese',
+            'Noto Sans Buhid',
+            'Noto Sans CJK HK',
+            'Noto Sans CJK HK Black',
+            'Noto Sans CJK HK DemiLight',
+            'Noto Sans CJK HK Light',
+            'Noto Sans CJK HK Medium',
+            'Noto Sans CJK HK Thin',
+            'Noto Sans CJK JP',
+            'Noto Sans CJK JP Black',
+            'Noto Sans CJK JP DemiLight',
+            'Noto Sans CJK JP Light',
+            'Noto Sans CJK JP Medium',
+            'Noto Sans CJK JP Thin',
+            'Noto Sans CJK KR',
+            'Noto Sans CJK KR Black',
+            'Noto Sans CJK KR DemiLight',
+            'Noto Sans CJK KR Light',
+            'Noto Sans CJK KR Medium',
+            'Noto Sans CJK KR Thin',
+            'Noto Sans CJK SC',
+            'Noto Sans CJK SC Black',
+            'Noto Sans CJK SC DemiLight',
+            'Noto Sans CJK SC Light',
+            'Noto Sans CJK SC Medium',
+            'Noto Sans CJK SC Regular',
+            'Noto Sans CJK SC Thin',
+            'Noto Sans CJK TC',
+            'Noto Sans CJK TC Black',
+            'Noto Sans CJK TC DemiLight',
+            'Noto Sans CJK TC Light',
+            'Noto Sans CJK TC Medium',
+            'Noto Sans CJK TC Thin',
+            'Noto Sans Canadian Aboriginal',
+            'Noto Sans Carian',
+            'Noto Sans Caucasian Albanian',
+            'Noto Sans Chakma',
+            'Noto Sans Cham',
+            'Noto Sans Cherokee',
+            'Noto Sans Coptic',
+            'Noto Sans Cuneiform',
+            'Noto Sans Cypriot',
+            'Noto Sans Deseret',
+            'Noto Sans Devanagari',
+            'Noto Sans Devanagari UI',
+            'Noto Sans Display',
+            'Noto Sans Duployan',
+            'Noto Sans Egyptian Hieroglyphs',
+            'Noto Sans Elbasan',
+            'Noto Sans Ethiopic',
+            'Noto Sans Georgian',
+            'Noto Sans Glagolitic',
+            'Noto Sans Gothic',
+            'Noto Sans Grantha',
+            'Noto Sans Gujarati',
+            'Noto Sans Gujarati UI',
+            'Noto Sans Gurmukhi',
+            'Noto Sans Gurmukhi UI',
+            'Noto Sans HK',
+            'Noto Sans Hanunoo',
+            'Noto Sans Hatran',
+            'Noto Sans Hebrew',
+            'Noto Sans Imperial Aramaic',
+            'Noto Sans Inscriptional Pahlavi',
+            'Noto Sans Inscriptional Parthian',
+            'Noto Sans JP',
+            'Noto Sans JP Regular',
+            'Noto Sans Javanese',
+            'Noto Sans KR',
+            'Noto Sans KR Regular',
+            'Noto Sans Kaithi',
+            'Noto Sans Kannada',
+            'Noto Sans Kannada UI',
+            'Noto Sans Kayah Li',
+            'Noto Sans Kharoshthi',
+            'Noto Sans Khmer',
+            'Noto Sans Khmer UI',
+            'Noto Sans Khojki',
+            'Noto Sans Khudawadi',
+            'Noto Sans Lao',
+            'Noto Sans Lao UI',
+            'Noto Sans Lepcha',
+            'Noto Sans Limbu',
+            'Noto Sans Linear A',
+            'Noto Sans Linear B',
+            'Noto Sans Lisu',
+            'Noto Sans Lycian',
+            'Noto Sans Lydian',
+            'Noto Sans Mahajani',
+            'Noto Sans Malayalam',
+            'Noto Sans Malayalam UI',
+            'Noto Sans Mandaic',
+            'Noto Sans Manichaean',
+            'Noto Sans Marchen',
+            'Noto Sans Math',
+            'Noto Sans Meetei Mayek',
+            'Noto Sans Mende Kikakui',
+            'Noto Sans Meroitic',
+            'Noto Sans Miao',
+            'Noto Sans Modi',
+            'Noto Sans Mongolian',
+            'Noto Sans Mono',
+            'Noto Sans Mono CJK HK',
+            'Noto Sans Mono CJK JP',
+            'Noto Sans Mono CJK KR',
+            'Noto Sans Mono CJK SC',
+            'Noto Sans Mono CJK TC',
+            'Noto Sans Mro',
+            'Noto Sans Multani',
+            'Noto Sans Myanmar',
+            'Noto Sans Myanmar UI',
+            'Noto Sans NKo',
+            'Noto Sans Nabataean',
+            'Noto Sans New Tai Lue',
+            'Noto Sans Newa',
+            'Noto Sans Ogham',
+            'Noto Sans Ol Chiki',
+            'Noto Sans Old Hungarian',
+            'Noto Sans Old Italic',
+            'Noto Sans Old North Arabian',
+            'Noto Sans Old Permic',
+            'Noto Sans Old Persian',
+            'Noto Sans Old South Arabian',
+            'Noto Sans Old Turkic',
+            'Noto Sans Oriya',
+            'Noto Sans Oriya UI',
+            'Noto Sans Osage',
+            'Noto Sans Osmanya',
+            'Noto Sans Pahawh Hmong',
+            'Noto Sans Palmyrene',
+            'Noto Sans Pau Cin Hau',
+            'Noto Sans Phags Pa',
+            'Noto Sans PhagsPa',
+            'Noto Sans Phoenician',
+            'Noto Sans Psalter Pahlavi',
+            'Noto Sans Rejang',
+            'Noto Sans Runic',
+            'Noto Sans SC',
+            'Noto Sans SC Regular',
+            'Noto Sans Samaritan',
+            'Noto Sans Saurashtra',
+            'Noto Sans Sharada',
+            'Noto Sans Shavian',
+            'Noto Sans Sinhala',
+            'Noto Sans Sinhala UI',
+            'Noto Sans Sora Sompeng',
+            'Noto Sans Sundanese',
+            'Noto Sans Syloti Nagri',
+            'Noto Sans Symbols',
+            'Noto Sans Symbols2',
+            'Noto Sans Syriac',
+            'Noto Sans Syriac Eastern',
+            'Noto Sans Syriac Estrangela',
+            'Noto Sans Syriac Western',
+            'Noto Sans TC',
+            'Noto Sans TC Regular',
+            'Noto Sans Tagalog',
+            'Noto Sans Tagbanwa',
+            'Noto Sans Tai Le',
+            'Noto Sans Tai Tham',
+            'Noto Sans Tai Viet',
+            'Noto Sans Takri',
+            'Noto Sans Tamil',
+            'Noto Sans Tamil UI',
+            'Noto Sans Telugu',
+            'Noto Sans Telugu UI',
+            'Noto Sans Thaana',
+            'Noto Sans Thai',
+            'Noto Sans Thai UI',
+            'Noto Sans Tibetan',
+            'Noto Sans Tifinagh',
+            'Noto Sans Tirhuta',
+            'Noto Sans UI',
+            'Noto Sans Ugaritic',
+            'Noto Sans Vai',
+            'Noto Sans Warang Citi',
+            'Noto Sans Yi',
+            'Noto Serif',
+            'Noto Serif Ahom',
+            'Noto Serif Armenian',
+            'Noto Serif Balinese',
+            'Noto Serif Bengali',
+            'Noto Serif CJK JP',
+            'Noto Serif CJK JP Black',
+            'Noto Serif CJK JP ExtraLight',
+            'Noto Serif CJK JP Light',
+            'Noto Serif CJK JP Medium',
+            'Noto Serif CJK JP SemiBold',
+            'Noto Serif CJK KR',
+            'Noto Serif CJK KR Black',
+            'Noto Serif CJK KR ExtraLight',
+            'Noto Serif CJK KR Light',
+            'Noto Serif CJK KR Medium',
+            'Noto Serif CJK KR SemiBold',
+            'Noto Serif CJK SC',
+            'Noto Serif CJK SC Black',
+            'Noto Serif CJK SC ExtraLight',
+            'Noto Serif CJK SC Light',
+            'Noto Serif CJK SC Medium',
+            'Noto Serif CJK SC SemiBold',
+            'Noto Serif CJK TC',
+            'Noto Serif CJK TC Black',
+            'Noto Serif CJK TC ExtraLight',
+            'Noto Serif CJK TC Light',
+            'Noto Serif CJK TC Medium',
+            'Noto Serif CJK TC SemiBold',
+            'Noto Serif Devanagari',
+            'Noto Serif Display',
+            'Noto Serif Ethiopic',
+            'Noto Serif Georgian',
+            'Noto Serif Gujarati',
+            'Noto Serif Gurmukhi',
+            'Noto Serif Hebrew',
+            'Noto Serif Italic',
+            'Noto Serif JP',
+            'Noto Serif KR',
+            'Noto Serif Kannada',
+            'Noto Serif Khmer',
+            'Noto Serif Lao',
+            'Noto Serif Malayalam',
+            'Noto Serif Myanmar',
+            'Noto Serif SC',
+            'Noto Serif Sinhala',
+            'Noto Serif TC',
+            'Noto Serif Tamil',
+            'Noto Serif Tamil Slanted',
+            'Noto Serif Telugu',
+            'Noto Serif Thai',
+            'Noto Serif Tibetan',
+            'Nova Cut',
+            'Nova Flat',
+            'Nova Mono',
+            'Nova Oval',
+            'Nova Round',
+            'Nova Script',
+            'Nova Slim',
+            'Nova Square',
+            'Nueva Std',
+            'Nueva Std Cond',
+            'Numans',
+            'Nunito',
+            'Nunito Sans',
+            'Nuosu SIL',
+            'Nyala',
+            'OCR A Extended',
+            'OCR A Std',
+            'OCR-A BT',
+            'OCR-B 10 BT',
+            'OSAKA',
+            'Odor Mean Chey',
+            'Offside',
+            'Old Century',
+            'Old English Text MT',
+            'Old Standard TT',
+            'Oldenburg',
+            'Oleo Script',
+            'Oleo Script Swash Caps',
+            'Onyx',
+            'Onyx BT',
+            'Open Sans',
+            'Open Sans Condensed',
+            'OpenSymbol',
+            'Optima',
+            'Optima Bold',
+            'Optima Bold Italic',
+            'Optima ExtraBlack',
+            'Optima Italic',
+            'Optima Regular',
+            'Oranienbaum',
+            'Orator Std',
+            'Orbitron',
+            'Oregano',
+            'Orienta',
+            'Original Surfer',
+            'Oriya MN',
+            'Oriya MN Bold',
+            'Oriya Sangam MN',
+            'Oriya Sangam MN Bold',
+            'Osaka',
+            'Osaka Mono',
+            'Osaka-Mono',
+            'Ostorah',
+            'Oswald',
+            'Ouhod',
+            'Ouhod-Bold',
+            'Ouverture script',
+            'Over the Rainbow',
+            'Overlock',
+            'Overlock SC',
+            'Overpass',
+            'Overpass Mono',
+            'Ovo',
+            'Oxygen',
+            'Oxygen Mono',
+            'OzHandicraft BT',
+            'P052',
+            'PCMyungjo',
+            'PCMyungjo Regular',
+            'PMingLiU',
+            'PMingLiU-ExtB',
+            'PRINCETOWN LET',
+            'PSL Ornanong Pro',
+            'PT Mono',
+            'PT Mono Bold',
+            'PT Sans',
+            'PT Sans Bold',
+            'PT Sans Bold Italic',
+            'PT Sans Caption',
+            'PT Sans Caption Bold',
+            'PT Sans Italic',
+            'PT Sans Narrow',
+            'PT Sans Narrow Bold',
+            'PT Serif',
+            'PT Serif Bold',
+            'PT Serif Bold Italic',
+            'PT Serif Caption',
+            'PT Serif Caption Italic',
+            'PT Serif Italic',
+            'PTBarnum BT',
+            'Pacifico',
+            'Padauk',
+            'Padauk Book',
+            'Pagul',
+            'PakType Naskh Basic',
+            'PakTypeNaqsh',
+            'PakTypeTehreer',
+            'Palace Script MT',
+            'Palanquin',
+            'Palanquin Dark',
+            'Palatino',
+            'Palatino Bold',
+            'Palatino Bold Italic',
+            'Palatino Italic',
+            'Palatino Linotype',
+            'Palatino Linotype Bold',
+            'Palatino Linotype Bold Italic',
+            'Palatino Linotype Italic',
+            'PanRoman',
+            'Pangolin',
+            'Paprika',
+            'Papyrus',
+            'Papyrus Condensed',
+            'Parchment',
+            'Parisienne',
+            'Party LET',
+            'Party Let Plain',
+            'Passero One',
+            'Passion One',
+            'Pathway Gothic One',
+            'Patrick Hand',
+            'Patrick Hand SC',
+            'Pattaya',
+            'Patua One',
+            'Pavanam',
+            'Paytone One',
+            'Peddana',
+            'Pegasus',
+            'Peralta',
+            'Permanent Marker',
+            'Perpetua',
+            'Perpetua Titling MT',
+            'Petit Formal Script',
+            'PetitaBold',
+            'Petra',
+            'Petrona',
+            'Phetsarath OT',
+            'Philosopher',
+            'Phosphate',
+            'Phosphate Inline',
+            'Phosphate Solid',
+            'Pickwick',
+            'Piedra',
+            'PilGi',
+            'PilGi Regular',
+            'Ping Fang HK',
+            'Ping Fang HK Light',
+            'Ping Fang HK Medium',
+            'Ping Fang HK Regular',
+            'Ping Fang HK Semibold',
+            'Ping Fang HK Thin',
+            'Ping Fang HK Ultralight',
+            'Ping Fang SC',
+            'Ping Fang SC Light',
+            'Ping Fang SC Medium',
+            'Ping Fang SC Regular',
+            'Ping Fang SC Semibold',
+            'Ping Fang SC Thin',
+            'Ping Fang SC Ultralight',
+            'Ping Fang TC',
+            'Ping Fang TC Light',
+            'Ping Fang TC Medium',
+            'Ping Fang TC Regular',
+            'Ping Fang TC Semibold',
+            'Ping Fang TC Thin',
+            'Ping Fang TC Ultralight',
+            'PingFang HK',
+            'PingFang HK Light',
+            'PingFang HK Medium',
+            'PingFang HK Regular',
+            'PingFang HK Semibold',
+            'PingFang HK Thin',
+            'PingFang HK Ultralight',
+            'PingFang SC',
+            'PingFang SC Light',
+            'PingFang SC Medium',
+            'PingFang SC Regular',
+            'PingFang SC Semibold',
+            'PingFang SC Thin',
+            'PingFang SC Ultralight',
+            'PingFang TC',
+            'PingFang TC Light',
+            'PingFang TC Medium',
+            'PingFang TC Regular',
+            'PingFang TC Semibold',
+            'PingFang TC Thin',
+            'PingFang TC Ultralight',
+            'Pinyon Script',
+            'Pirata One',
+            'Plantagenet Cherokee',
+            'Plaster',
+            'Play',
+            'Playball',
+            'Playbill',
+            'Playfair Display',
+            'Playfair Display SC',
+            'Podkova',
+            'Poiret One',
+            'Poller One',
+            'Poly',
+            'Pompiere',
+            'Pontano Sans',
+            'Poor Richard',
+            'Poor Story',
+            'Poplar Std',
+            'Poppins',
+            'Port Lligat Sans',
+            'Port Lligat Slab',
+            'Poster',
+            'PosterBodoni BT',
+            'Pothana2000',
+            'Pragati Narrow',
+            'Prata',
+            'Preahvihear',
+            'Press Start 2P',
+            'Prestige Elite Std',
+            'Pridi',
+            'Princess Sofia',
+            'Pristina',
+            'Prociono',
+            'Prompt',
+            'Prosto One',
+            'Proxy 1',
+            'Proxy 2',
+            'Proxy 3',
+            'Proxy 4',
+            'Proxy 5',
+            'Proxy 6',
+            'Proxy 7',
+            'Proxy 8',
+            'Proxy 9',
+            'Proza Libre',
+            'Public Sans',
+            'Purisa',
+            'Puritan',
+            'Purple Purse',
+            'Pythagoras',
+            'Quando',
+            'Quantico',
+            'Quattrocento',
+            'Quattrocento Sans',
+            'Questrial',
+            'Quicksand',
+            'Quicksand Light',
+            'Quicksand Medium',
+            'Quintessential',
+            'Qwigley',
+            'Raanana',
+            'Raanana Bold',
+            'Raavi',
+            'Raavi Bold',
+            'Rachana',
+            'Racing Sans One',
+            'Radley',
+            'Rage Italic',
+            'RaghuMalayalam',
+            'RaghuMalayalamSans',
+            'Rajdhani',
+            'Rakkas',
+            'Raleway',
+            'Raleway Dots',
+            'Ramabhadra',
+            'Ramaraja',
+            'Rambla',
+            'Rammetto One',
+            'Ranchers',
+            'Rancho',
+            'Ranga',
+            'Rasa',
+            'Rasa Light',
+            'Rasa Medium',
+            'Rasa SemiBold',
+            'Rasheeq',
+            'Rasheeq-Bold',
+            'Rationale',
+            'Ravi Prakash',
+            'Ravie',
+            'Red Hat Display',
+            'Red Hat Text',
+            'Redressed',
+            'Reem Kufi',
+            'Reenie Beanie',
+            'Rehan',
+            'Rekha',
+            'Revalia',
+            'Rhodium Libre',
+            'Ribbon131 Bd BT',
+            'Ribeye',
+            'Ribeye Marrow',
+            'Righteous',
+            'Risque',
+            'Roboto',
+            'Roboto Black',
+            'Roboto Condensed',
+            'Roboto Light',
+            'Roboto Medium',
+            'Roboto Mono',
+            'Roboto Slab',
+            'Rochester',
+            'Rock Salt',
+            'Rockwell',
+            'Rockwell Bold',
+            'Rockwell Bold Italic',
+            'Rockwell Condensed',
+            'Rockwell Extra Bold',
+            'Rockwell Italic',
+            'Rockwell Nova',
+            'Rockwell Nova Bold',
+            'Rockwell Nova Bold Italic',
+            'Rockwell Nova Cond',
+            'Rockwell Nova Cond Bold',
+            'Rockwell Nova Cond Bold Italic',
+            'Rockwell Nova Cond Italic',
+            'Rockwell Nova Cond Light',
+            'Rockwell Nova Cond Light Italic',
+            'Rockwell Nova Extra Bold',
+            'Rockwell Nova Extra Bold Italic',
+            'Rockwell Nova Italic',
+            'Rockwell Nova Light Italic',
+            'Rockwell Nova Rockwell',
+            'Rod',
+            'Rokkitt',
+            'Roman',
+            'RomanC',
+            'RomanD',
+            'RomanS',
+            'RomanT',
+            'Romanesco',
+            'Romantic',
+            'Ropa Sans',
+            'Rosario',
+            'Rosarivo',
+            'Rosewood Std Regular',
+            'Rouge Script',
+            'Rozha One',
+            'Rubik',
+            'Rubik Black',
+            'Rubik Light',
+            'Rubik Medium',
+            'Rubik Mono One',
+            'Ruda',
+            'Rufina',
+            'Ruge Boogie',
+            'Ruluko',
+            'Rum Raisin',
+            'Ruslan Display',
+            'Russo One',
+            'Ruthie',
+            'Rye',
+            'SCRIPTINA',
+            'SILKSCREEN',
+            'STFangSong',
+            'STFangsong',
+            'STHeiti',
+            'STHeitiSC Light',
+            'STHeitiSC Medium',
+            'STIX',
+            'STIX Math',
+            'STIX Two Math',
+            'STIX Two Text',
+            'STIX Two Text Bold',
+            'STIX Two Text Bold Italic',
+            'STIX Two Text Italic',
+            'STIXGeneral',
+            'STIXGeneral-Bold',
+            'STIXGeneral-BoldItalic',
+            'STIXGeneral-Italic',
+            'STIXGeneral-Regular',
+            'STIXIntegralsD',
+            'STIXIntegralsD-Bold',
+            'STIXIntegralsD-Regular',
+            'STIXIntegralsSm',
+            'STIXIntegralsSm-Bold',
+            'STIXIntegralsSm-Regular',
+            'STIXIntegralsUp',
+            'STIXIntegralsUp-Bold',
+            'STIXIntegralsUp-Regular',
+            'STIXIntegralsUpD',
+            'STIXIntegralsUpD-Bold',
+            'STIXIntegralsUpD-Regular',
+            'STIXIntegralsUpSm',
+            'STIXIntegralsUpSm-Bold',
+            'STIXIntegralsUpSm-Regular',
+            'STIXNonUnicode',
+            'STIXNonUnicode-Bold',
+            'STIXNonUnicode-BoldItalic',
+            'STIXNonUnicode-Italic',
+            'STIXNonUnicode-Regular',
+            'STIXSizeFiveSym',
+            'STIXSizeFiveSym-Regular',
+            'STIXSizeFourSym',
+            'STIXSizeFourSym-Bold',
+            'STIXSizeFourSym-Regular',
+            'STIXSizeOneSym',
+            'STIXSizeOneSym-Bold',
+            'STIXSizeOneSym-Regular',
+            'STIXSizeThreeSym',
+            'STIXSizeThreeSym-Bold',
+            'STIXSizeThreeSym-Regular',
+            'STIXSizeTwoSym',
+            'STIXSizeTwoSym-Bold',
+            'STIXSizeTwoSym-Regular',
+            'STIXVariants',
+            'STIXVariants-Bold',
+            'STIXVariants-Regular',
+            'STKaiti',
+            'STSong',
+            'STXihei',
+            'Saab',
+            'Sacramento',
+            'Sahadeva',
+            'Sahitya',
+            'Sail',
+            'Saira',
+            'Saira Condensed',
+            'Saira Extra Condensed',
+            'Saira Semi Condensed',
+            'Saira Stencil One',
+            'Sakkal Majalla',
+            'Sakkal Majalla Bold',
+            'Salem',
+            'Salsa',
+            'Samanata',
+            'Samyak Devanagari',
+            'Samyak Gujarati',
+            'Samyak Malayalam',
+            'Samyak Tamil',
+            'Sana',
+            'Sana Regular',
+            'Sanchez',
+            'Sancreek',
+            'Sans',
+            'SansSerif',
+            'Sansita',
+            'Sanskrit Text',
+            'Santa Fe LET',
+            'Sarabun',
+            'Sarai',
+            'Sarala',
+            'Sarina',
+            'Sarpanch',
+            'Sathu',
+            'Satisfy',
+            'Savoye LET',
+            'Savoye LET Plain CC.:1.0',
+            'Savoye LET Plain:1.0',
+            'Sawarabi Gothic',
+            'Sawarabi Mincho',
+            'Sawasdee',
+            'Scada',
+            'Sceptre',
+            'Scheherazade',
+            'Schoolbell',
+            'Scope One',
+            'Script',
+            'Script MT Bold',
+            'ScriptC',
+            'ScriptS',
+            'Seaweed Script',
+            'Secular One',
+            'Sedgwick Ave',
+            'Sedgwick Ave Display',
+            'Segoe MDL2 Assets',
+            'Segoe Print',
+            'Segoe Print Bold',
+            'Segoe Pseudo',
+            'Segoe Script',
+            'Segoe Script Bold',
+            'Segoe UI',
+            'Segoe UI Black',
+            'Segoe UI Black Italic',
+            'Segoe UI Bold',
+            'Segoe UI Bold Italic',
+            'Segoe UI Emoji',
+            'Segoe UI Historic',
+            'Segoe UI Italic',
+            'Segoe UI Light',
+            'Segoe UI Light Italic',
+            'Segoe UI Semibold',
+            'Segoe UI Semibold Italic',
+            'Segoe UI Semilight',
+            'Segoe UI Semilight Italic',
+            'Segoe UI Symbol',
+            'Seravek',
+            'Seravek Bold',
+            'Seravek Bold Italic',
+            'Seravek ExtraLight',
+            'Seravek ExtraLight Italic',
+            'Seravek Italic',
+            'Seravek Light',
+            'Seravek Light Italic',
+            'Seravek Medium',
+            'Seravek Medium Italic',
+            'Serifa',
+            'Serifa BT',
+            'Serifa Th BT',
+            'Sevillana',
+            'Seymour One',
+            'Shado',
+            'Shadows Into Light',
+            'Shadows Into Light Two',
+            'Shanti',
+            'Share',
+            'Share Tech',
+            'Share Tech Mono',
+            'Sharjah',
+            'ShelleyVolante BT',
+            'Sherwood',
+            'Shofar',
+            'Shojumaru',
+            'Shonar Bangla',
+            'Shonar Bangla Bold',
+            'Short Stack',
+            'Showcard Gothic',
+            'Shree Devanagari 714',
+            'Shree Devanagari 714 Bold',
+            'Shree Devanagari 714 Bold Italic',
+            'Shree Devanagari 714 Italic',
+            'Shrikhand',
+            'Shruti',
+            'Shruti Bold',
+            'Siemreap',
+            'Sigmar One',
+            'SignPainter',
+            'SignPainter-HouseScript',
+            'SignPainter-HouseScript Semibold',
+            'Signboard',
+            'Signika',
+            'Signika Negative',
+            'Silom',
+            'SimHei',
+            'SimSun',
+            'SimSun-ExtB',
+            'Simonetta',
+            'Simple CLM',
+            'Simplex',
+            'Simplified Arabic',
+            'Simplified Arabic Bold',
+            'Simplified Arabic Fixed',
+            'Sindbad',
+            'Single Day',
+            'Sinhala MN',
+            'Sinhala MN Bold',
+            'Sinhala Sangam MN',
+            'Sinhala Sangam MN Bold',
+            'Sintony',
+            'Sirin Stencil',
+            'Sitka',
+            'Sitka Banner',
+            'Sitka Banner Bold',
+            'Sitka Banner Bold Italic',
+            'Sitka Banner Italic',
+            'Sitka Display',
+            'Sitka Display Bold',
+            'Sitka Display Bold Italic',
+            'Sitka Display Italic',
+            'Sitka Heading',
+            'Sitka Heading Bold',
+            'Sitka Heading Bold Italic',
+            'Sitka Heading Italic',
+            'Sitka Small',
+            'Sitka Small Bold',
+            'Sitka Small Bold Italic',
+            'Sitka Small Italic',
+            'Sitka Subheading',
+            'Sitka Subheading Bold',
+            'Sitka Subheading Bold Italic',
+            'Sitka Subheading Italic',
+            'Sitka Text',
+            'Sitka Text Bold',
+            'Sitka Text Bold Italic',
+            'Sitka Text Italic',
+            'Six Caps',
+            'Sketch Rockwell',
+            'Skia',
+            'Skia Black',
+            'Skia Black Condensed',
+            'Skia Black Extended',
+            'Skia Bold',
+            'Skia Condensed',
+            'Skia Extended',
+            'Skia Light',
+            'Skia Light Condensed',
+            'Skia Light Extended',
+            'Skia Regular',
+            'Skranji',
+            'Slabo 13px',
+            'Slabo 27px',
+            'Slackey',
+            'Small Fonts',
+            'Smokum',
+            'Smythe',
+            'Snap ITC',
+            'Snell Roundhand',
+            'Snell Roundhand Black',
+            'Snell Roundhand Bold',
+            'Sniglet',
+            'Snippet',
+            'Snowburst One',
+            'Socket',
+            'Sofadi One',
+            'Sofia',
+            'Song',
+            'Song Myung',
+            'Songti SC',
+            'Songti SC Black',
+            'Songti SC Bold',
+            'Songti SC Light',
+            'Songti SC Regular',
+            'Songti TC',
+            'Songti TC Bold',
+            'Songti TC Light',
+            'Songti TC Regular',
+            'Sonsie One',
+            'Sorts Mill Goudy',
+            'Source Code Pro',
+            'Source Code Pro Black',
+            'Source Code Pro Extra Light',
+            'Source Code Pro ExtraLight',
+            'Source Code Pro Light',
+            'Source Code Pro Medium',
+            'Source Code Pro Semibold',
+            'Source Han Sans CN',
+            'Source Han Sans CN Bold',
+            'Source Han Sans CN ExtraLight',
+            'Source Han Sans CN Heavy',
+            'Source Han Sans CN Light',
+            'Source Han Sans CN Medium',
+            'Source Han Sans CN Normal',
+            'Source Han Sans TW',
+            'Source Han Serif CN',
+            'Source Han Serif TW',
+            'Source Sans Pro',
+            'Source Sans Pro Extra Light',
+            'Source Sans Pro Light',
+            'Source Serif Pro',
+            'Source Serif Pro Extra Light',
+            'Source Serif Pro Light',
+            'Souvenir Lt BT',
+            'Space Mono',
+            'Special Elite',
+            'Spectral',
+            'Spectral SC',
+            'Spicy Rice',
+            'Spinnaker',
+            'Spirax',
+            'Squada One',
+            'Square721 BT',
+            'Sree Krushnadevaraya',
+            'Sriracha',
+            'Srisakdi',
+            'Staatliches',
+            'Staccato222 BT',
+            'Stalemate',
+            'Stalinist One',
+            'Stam Ashkenaz CLM',
+            'Stam Sefarad CLM',
+            'Standard Symbols L',
+            'Standard Symbols PS',
+            'Stardos Stencil',
+            'Steamer',
+            'Stencil',
+            'Stencil Std',
+            'Stint Ultra Condensed',
+            'Stint Ultra Expanded',
+            'Stoke',
+            'Storybook',
+            'Strait',
+            'Stylish',
+            'Styllo',
+            'Stylus BT',
+            'Subway',
+            'Sue Ellen Francisco',
+            'Suez One',
+            'Sukhumvit Set',
+            'Sukhumvit Set Bold',
+            'Sukhumvit Set Light',
+            'Sukhumvit Set Medium',
+            'Sukhumvit Set Semi Bold',
+            'Sukhumvit Set Text',
+            'Sukhumvit Set Thin',
+            'Sumana',
+            'Sunflower',
+            'Sunshiney',
+            'SuperFrench',
+            'Superclarendon',
+            'Superclarendon Black',
+            'Superclarendon Black Italic',
+            'Superclarendon BlackItalic',
+            'Superclarendon Bold',
+            'Superclarendon Bold Italic',
+            'Superclarendon BoldItalic',
+            'Superclarendon Italic',
+            'Superclarendon Light',
+            'Superclarendon Light Italic',
+            'Superclarendon LightItalic',
+            'Superclarendon Regular',
+            'Supermercado One',
+            'Sura',
+            'Suranna',
+            'Suravaram',
+            'Suruma',
+            'Suwannaphum',
+            'Swanky and Moo Moo',
+            'Swis721 BT',
+            'Swis721 BdCnOul BT',
+            'Swis721 BdOul BT',
+            'Swis721 Blk BT',
+            'Swis721 BlkCn BT',
+            'Swis721 BlkEx BT',
+            'Swis721 BlkOul BT',
+            'Swis721 Cn BT',
+            'Swis721 Ex BT',
+            'Swis721 Hv BT',
+            'Swis721 Lt BT',
+            'Swis721 LtCn BT',
+            'Swis721 LtEx BT',
+            'Swiss911 XCm BT',
+            'Syastro',
+            'Sylfaen',
+            'Symap',
+            'Symath',
+            'Symbol',
+            'Symbola',
+            'Symeteo',
+            'Symusic',
+            'Synchro LET',
+            'Syncopate',
+            'System',
+            'System Font Bold',
+            'System Font Regular',
+            'TRAJAN PRO',
+            'Tahoma',
+            'Tahoma Bold',
+            'Tahoma Negreta',
+            'Tajawal',
+            'TakaoPGothic',
+            'Tamil MN',
+            'Tamil MN Bold',
+            'Tamil Sangam MN',
+            'Tamil Sangam MN Bold',
+            'Tangerine',
+            'Taprom',
+            'Tarablus',
+            'Tauri',
+            'Taviraj',
+            'TeamViewer8',
+            'Teams',
+            'Technic',
+            'TechnicBold',
+            'TechnicLite',
+            'Technical',
+            'Teko',
+            'Tekton Pro',
+            'Tekton Pro Cond',
+            'Tekton Pro Ext',
+            'Teletype',
+            'Telex',
+            'Telugu MN',
+            'Telugu MN Bold',
+            'Telugu Sangam MN',
+            'Telugu Sangam MN Bold',
+            'Tempus Sans ITC',
+            'Tenali Ramakrishna',
+            'Tenor Sans',
+            'Terminal',
+            'Text Me One',
+            'Thabit',
+            'Thasadith',
+            'The Girl Next Door',
+            'Tholoth',
+            'Thonburi',
+            'Thonburi Bold',
+            'Thonburi Light',
+            'Tibetan Machine Uni',
+            'Tienne',
+            'Tillana',
+            'Times',
+            'Times Bold',
+            'Times Bold Italic',
+            'Times CY',
+            'Times Italic',
+            'Times LT MM',
+            'Times New Roman',
+            'Times New Roman Baltic',
+            'Times New Roman Bold',
+            'Times New Roman Bold Italic',
+            'Times New Roman CE',
+            'Times New Roman CYR',
+            'Times New Roman Cyr',
+            'Times New Roman Greek',
+            'Times New Roman Italic',
+            'Times New Roman PS',
+            'Times New Roman PS BoldItalicMT',
+            'Times New Roman PS BoldMT',
+            'Times New Roman PS ItalicMT',
+            'Times New Roman PSMT',
+            'Times New Roman TUR',
+            'Times Roman',
+            'Timmana',
+            'Tinos',
+            'Titan One',
+            'Titillium Web',
+            'Titr',
+            'Tlwg Mono',
+            'Tlwg Typewriter',
+            'Tlwg Typist',
+            'Tlwg Typo',
+            'TlwgMono',
+            'TlwgTypewriter',
+            'Tomorrow',
+            'Toppan Bunkyu Gothic',
+            'Toppan Bunkyu Gothic Demibold',
+            'Toppan Bunkyu Gothic Regular',
+            'Toppan Bunkyu Midashi Gothic',
+            'Toppan Bunkyu Midashi Gothic Extrabold',
+            'Toppan Bunkyu Midashi Mincho',
+            'Toppan Bunkyu Midashi Mincho Extrabold',
+            'Toppan Bunkyu Mincho',
+            'Toppan Bunkyu Mincho Regular',
+            'Trade Winds',
+            'Traditional Arabic',
+            'Traditional Arabic Bold',
+            'Trajan',
+            'Trajan Pro',
+            'Trattatello',
+            'Trebuchet BoldItalic',
+            'Trebuchet MS',
+            'Trebuchet MS Bold',
+            'Trebuchet MS Bold Italic',
+            'Trebuchet MS Italic',
+            'Trirong',
+            'Tristan',
+            'Trocchi',
+            'Trochut',
+            'Trykker',
+            'Tsukushi A Round Gothic',
+            'Tsukushi A Round Gothic Bold',
+            'Tsukushi A Round Gothic Regular',
+            'Tsukushi B Round Gothic',
+            'Tsukushi B Round Gothic Bold',
+            'Tsukushi B Round Gothic Regular',
+            'Tubular',
+            'Tulpen One',
+            'Tunga',
+            'Tunga Bold',
+            'Turret Road',
+            'Tw Cen MT',
+            'Tw Cen MT Condensed',
+            'Tw Cen MT Condensed Extra Bold',
+            'Twemoji Mozilla',
+            'Txt',
+            'TypoUpright BT',
+            'UD Digi Kyokasho',
+            'UD Digi Kyokasho N-B',
+            'UD Digi Kyokasho N-R',
+            'UD Digi Kyokasho NK-B',
+            'UD Digi Kyokasho NK-R',
+            'UD Digi Kyokasho NP-B',
+            'UD Digi Kyokasho NP-R',
+            'UKIJ 3D',
+            'UKIJ Basma',
+            'UKIJ Bom',
+            'UKIJ CJK',
+            'UKIJ Chechek',
+            'UKIJ Chiwer Kesme',
+            'UKIJ Diwani',
+            'UKIJ Diwani Kawak',
+            'UKIJ Diwani Tom',
+            'UKIJ Diwani Yantu',
+            'UKIJ Ekran',
+            'UKIJ Elipbe',
+            'UKIJ Elipbe_Chekitlik',
+            'UKIJ Esliye',
+            'UKIJ Esliye Chiwer',
+            'UKIJ Esliye Neqish',
+            'UKIJ Esliye Qara',
+            'UKIJ Esliye Tom',
+            'UKIJ Imaret',
+            'UKIJ Inchike',
+            'UKIJ Jelliy',
+            'UKIJ Junun',
+            'UKIJ Kawak',
+            'UKIJ Kawak 3D',
+            'UKIJ Kesme',
+            'UKIJ Kesme Tuz',
+            'UKIJ Kufi',
+            'UKIJ Kufi 3D',
+            'UKIJ Kufi Chiwer',
+            'UKIJ Kufi Gul',
+            'UKIJ Kufi Kawak',
+            'UKIJ Kufi Tar',
+            'UKIJ Kufi Uz',
+            'UKIJ Kufi Yay',
+            'UKIJ Kufi Yolluq',
+            'UKIJ Mejnun',
+            'UKIJ Mejnuntal',
+            'UKIJ Merdane',
+            'UKIJ Moy Qelem',
+            'UKIJ Nasq',
+            'UKIJ Nasq Zilwa',
+            'UKIJ Orqun Basma',
+            'UKIJ Orqun Yazma',
+            'UKIJ Orxun-Yensey',
+            'UKIJ Qara',
+            'UKIJ Qolyazma',
+            'UKIJ Qolyazma Tez',
+            'UKIJ Qolyazma Tuz',
+            'UKIJ Qolyazma Yantu',
+            'UKIJ Ruqi',
+            'UKIJ Saet',
+            'UKIJ Sulus',
+            'UKIJ Sulus Tom',
+            'UKIJ Teng',
+            'UKIJ Tiken',
+            'UKIJ Title',
+            'UKIJ Tor',
+            'UKIJ Tughra',
+            'UKIJ Tuz',
+            'UKIJ Tuz Basma',
+            'UKIJ Tuz Gezit',
+            'UKIJ Tuz Kitab',
+            'UKIJ Tuz Neqish',
+            'UKIJ Tuz Qara',
+            'UKIJ Tuz Tom',
+            'UKIJ Tuz Tor',
+            'UKIJ Zilwa',
+            'UKIJ_Mac Basma',
+            'UKIJ_Mac Ekran',
+            'URW Bookman',
+            'URW Bookman L',
+            'URW Chancery L',
+            'URW Gothic',
+            'URW Gothic L',
+            'URW Palladio L',
+            'Ubuntu',
+            'Ubuntu Condensed',
+            'Ubuntu Light',
+            'Ubuntu Mono',
+            'Ubuntu Thin',
+            'Ultra',
+            'Umpush',
+            'UnBatang',
+            'UnDotum',
+            'Uncial Antiqua',
+            'Underdog',
+            'Unica One',
+            'Unicorn',
+            'Unifont',
+            'Unifont CSUR',
+            'Unifont Upper',
+            'UnifrakturCook',
+            'UnifrakturMaguntia',
+            'Unikurd Web',
+            'Univers',
+            'Univers CE 55 Medium',
+            'Univers Condensed',
+            'UniversalMath1 BT',
+            'Unkempt',
+            'Unlock',
+            'Unna',
+            'Urdu Typesetting',
+            'Urdu Typesetting Bold',
+            'Uroob',
+            'Utopia',
+            'Utsaah',
+            'Utsaah Bold',
+            'Utsaah Bold Italic',
+            'Utsaah Italic',
+            'VL Gothic',
+            'VL PGothic',
+            'VT323',
+            'Vagabond',
+            'Vampiro One',
+            'Vani',
+            'Vani Bold',
+            'Varela',
+            'Varela Round',
+            'Vast Shadow',
+            'Vemana2000',
+            'Verdana',
+            'Verdana Bold',
+            'Verdana Bold Italic',
+            'Verdana Italic',
+            'Verdana Pro',
+            'Verdana Pro Black',
+            'Verdana Pro Black Italic',
+            'Verdana Pro Bold',
+            'Verdana Pro Bold Italic',
+            'Verdana Pro Cond',
+            'Verdana Pro Cond Black',
+            'Verdana Pro Cond Black Italic',
+            'Verdana Pro Cond Bold',
+            'Verdana Pro Cond Bold Italic',
+            'Verdana Pro Cond Italic',
+            'Verdana Pro Cond Light',
+            'Verdana Pro Cond Light Italic',
+            'Verdana Pro Cond SemiBold',
+            'Verdana Pro Cond SemiBold Italic',
+            'Verdana Pro Italic',
+            'Verdana Pro Light',
+            'Verdana Pro Light Italic',
+            'Verdana Pro SemiBold',
+            'Verdana Pro SemiBold Italic',
+            'Vesper Libre',
+            'Vibes',
+            'Vibur',
+            'Vidaloka',
+            'Viga',
+            'Vijaya',
+            'Vijaya Bold',
+            'Viner Hand ITC',
+            'Vineta BT',
+            'VisualUI',
+            'Vivaldi',
+            'Vladimir Script',
+            'Voces',
+            'Volkhov',
+            'Vollkorn',
+            'Vollkorn SC',
+            'Voltaire',
+            'Vrinda',
+            'Vrinda Bold',
+            'WHITNEY',
+            'WP Arabic Sihafa',
+            'WP ArabicScript Sihafa',
+            'WP CyrillicA',
+            'WP CyrillicB',
+            'WP Greek Century',
+            'WP Greek Courier',
+            'WP Greek Helve',
+            'WP Hebrew David',
+            'WP MultinationalA Courier',
+            'WP MultinationalA Helve',
+            'WP MultinationalA Roman',
+            'WP MultinationalB Courier',
+            'WP MultinationalB Helve',
+            'WP MultinationalB Roman',
+            'WST_Czec',
+            'WST_Engl',
+            'WST_Fren',
+            'WST_Germ',
+            'WST_Ital',
+            'WST_Span',
+            'WST_Swed',
+            'Waiting for the Sunrise',
+            'Wallpoet',
+            'Walter Turncoat',
+            'Waree',
+            'Warnes',
+            'Waseem',
+            'Waseem Light',
+            'Waseem Regular',
+            'Wawati SC',
+            'Wawati SC Regular',
+            'Wawati TC',
+            'Wawati TC Regular',
+            'Webdings',
+            'Weibei SC',
+            'Weibei SC Bold',
+            'Weibei TC',
+            'Weibei TC Bold',
+            'Wellfleet',
+            'WenQuanYi Micro Hei',
+            'WenQuanYi Micro Hei Mono',
+            'WenQuanYi Zen Hei',
+            'WenQuanYi Zen Hei Mono',
+            'WenQuanYi Zen Hei Sharp',
+            'Wendy One',
+            'Westminster',
+            'Wide Latin',
+            'Wingdings',
+            'Wingdings 2',
+            'Wingdings 3',
+            'Wire One',
+            'Work Sans',
+            'Xingkai SC',
+            'Xingkai SC Bold',
+            'Xingkai SC Light',
+            'Xingkai TC',
+            'Xingkai TC Bold',
+            'Xingkai TC Light',
+            'Yanone Kaffeesatz',
+            'Yantramanav',
+            'Yatra One',
+            'Yehuda CLM',
+            'Yellowtail',
+            'Yeon Sung',
+            'Yeseva One',
+            'Yesteryear',
+            'Yrsa',
+            'Yrsa Light',
+            'Yrsa Medium',
+            'Yrsa SemiBold',
+            'Yu Gothic',
+            'Yu Gothic Bold',
+            'Yu Gothic Light',
+            'Yu Gothic Medium',
+            'Yu Gothic Regular',
+            'Yu Gothic UI',
+            'Yu Gothic UI Bold',
+            'Yu Gothic UI Light',
+            'Yu Gothic UI Regular',
+            'Yu Gothic UI Semibold',
+            'Yu Gothic UI Semilight',
+            'Yu Mincho',
+            'Yu Mincho Demibold',
+            'Yu Mincho Light',
+            'Yu Mincho Regular',
+            'YuGothic',
+            'YuGothic Bold',
+            'YuGothic Medium',
+            'YuKyokasho',
+            'YuKyokasho Bold',
+            'YuKyokasho Medium',
+            'YuKyokasho Yoko',
+            'YuKyokasho Yoko Bold',
+            'YuKyokasho Yoko Medium',
+            'YuMincho',
+            'YuMincho +36p Kana',
+            'YuMincho +36p Kana Demibold',
+            'YuMincho +36p Kana Extrabold',
+            'YuMincho +36p Kana Medium',
+            'YuMincho Demibold',
+            'YuMincho Extrabold',
+            'YuMincho Medium',
+            'Yuanti SC',
+            'Yuanti SC Bold',
+            'Yuanti SC Light',
+            'Yuanti SC Regular',
+            'Yuanti TC',
+            'Yuanti TC Bold',
+            'Yuanti TC Light',
+            'Yuanti TC Regular',
+            'Yuppy SC',
+            'Yuppy SC Regular',
+            'Yuppy TC',
+            'Yuppy TC Regular',
+            'Z003',
+            'ZCOOL KuaiLe',
+            'ZCOOL QingKe HuangYou',
+            'ZCOOL XiaoWei',
+            'ZWAdobeF',
+            'Zapf Dingbats',
+            'Zapf Dingbats ITC',
+            'ZapfEllipt BT',
+            'ZapfHumnst BT',
+            'ZapfHumnst Dm BT',
+            'Zapfino',
+            'Zeyada',
+            'Zhi Mang Xing',
+            'Zilla Slab',
+            'Zilla Slab Highlight',
+            'Zurich BlkEx BT',
+            'Zurich Ex BT',
+            'aakar',
+            'cmex10',
+            'cmmi10',
+            'cmr10',
+            'cmsy10',
+            'esint10',
+            'eufm10',
+            'monospace',
+            'mry_KacstQurn',
+            'msam10',
+            'msbm10',
+            'ori1Uni',
+            'padmaa',
+            'padmaa-Bold.1.1',
+            'padmmaa',
+            'rsfs10',
+            'sans-serif',
+            'serif',
+            'utkal',
+            'wasy10',
+            'מרים',
+            'गार्गी',
+            'नालिमाटी',
+            'অনি Dvf',
+            'মিত্র',
+            'মুক্তি',
+            'মুক্তি পাতনা',
+            '宋体',
+            '微软雅黑',
+            '新細明',
+            '新細明體',
+            '細明體',
+            '굴림',
+            '굴림체',
+            '바탕',
+            'ＭＳ ゴシック',
+            'ＭＳ 明朝',
+            'ＭＳ Ｐゴシック',
+            'ＭＳ Ｐ明朝',
+        ];
+        const baseFonts = ['sans-serif', 'serif', 'monospace'];
+        const baseWidth = {};
+        const baseHeight = {};
+
+        for (let font of baseFonts) {
+            const span = document.createElement('span');
+            span.innerHTML = 'mmmmmmmmmmlli';
+            span.style.fontSize = '72px';
+            span.style.fontFamily = font;
+
+            // noinspection JSCheckFunctionSignatures
+            document.body.appendChild(span);
+            baseWidth[font] = span.offsetWidth;
+            baseHeight[font] = span.offsetHeight;
+
+            // noinspection JSCheckFunctionSignatures
+            document.body.removeChild(span);
+        }
+
+        await smoothForeach(extraFonts, 15, (font) => {
+            let exists = 0;
+            for (const baseFont of baseFonts) {
+                const span = document.createElement('span');
+                span.innerHTML = 'mmmmmmmmmmlli';
+                span.style.fontSize = '72px';
+                span.style.fontFamily = font + ',' + baseFont;
+                // noinspection JSCheckFunctionSignatures
+                document.body.appendChild(span);
+
+                const sizeNotTheSame =
+                    span.offsetWidth !== baseWidth[baseFont] ||
+                    span.offsetHeight !== baseHeight[baseFont];
+
+                // noinspection JSCheckFunctionSignatures
+                document.body.removeChild(span);
+
+                if (sizeNotTheSame) {
+                    result.push(font);
+                    break;
+                }
+            }
+        });
+
+        return result;
+    };
+
+    // gpu
+    const dumpGpu = async () => {
+        const result = {};
+        try {
+            const webgl = document.createElement('canvas').getContext('webgl');
+            const renderer = webgl.getExtension('WEBGL_debug_renderer_info');
+
+            result.vendor = webgl.getParameter(renderer.UNMASKED_VENDOR_WEBGL);
+            result.renderer = webgl.getParameter(
+                renderer.UNMASKED_RENDERER_WEBGL
+            );
+        } catch (_) {}
+
+        return result;
+    };
+
+    // props
+    const dumpObjProps = async (obj, keys) => {
+        const result = {};
+
+        if (obj) {
+            for (let n in keys) {
+                const key = keys[n];
+                const val = obj[key];
+
+                try {
+                    if (
+                        ('function' == typeof val || 'object' == typeof val) &&
+                        !(val === null) &&
+                        !(val instanceof Array)
+                    ) {
+                        result[key] = '_$obj!_//+_';
+                    } else {
+                        if ('undefined' == typeof val) {
+                            result[key] = '_$obj!_undefined_//+_';
+                        } else {
+                            result[key] = val;
+                        }
+                    }
+                } catch (_) {}
+            }
+        }
+
+        return result;
+    };
+
+    const dumpNavigatorProps = async () => {
+        return dumpObjProps(navigator, [
+            'languages',
+            'userAgent',
+            'appCodeName',
+            'appMinorVersion',
+            'appName',
+            'appVersion',
+            'buildID',
+            'platform',
+            'product',
+            'productSub',
+            'hardwareConcurrency',
+            'cpuClass',
+            'maxTouchPoints',
+            'oscpu',
+            'vendor',
+            'vendorSub',
+            'deviceMemory',
+            'doNotTrack',
+            'msDoNotTrack',
+            'vibrate',
+            'credentials',
+            'storage',
+            'requestMediaKeySystemAccess',
+            'bluetooth',
+            'language',
+            'systemLanguage',
+            'userLanguage',
+            'pdfViewerEnabled',
+        ]);
+    };
+
+    const dumpWindowProps = async () => {
+        return dumpObjProps(window, [
+            'innerWidth',
+            'innerHeight',
+            'outerWidth',
+            'outerHeight',
+            'screenX',
+            'screenY',
+            'pageXOffset',
+            'pageYOffset',
+            'Image',
+            'isSecureContext',
+            'devicePixelRatio',
+            'toolbar',
+            'locationbar',
+            'ActiveXObject',
+            'external',
+            'mozRTCPeerConnection',
+            'postMessage',
+            'webkitRequestAnimationFrame',
+            'BluetoothUUID',
+            'netscape',
+            'localStorage',
+            'sessionStorage',
+            'indexDB',
+            'BarcodeDetector',
+        ]);
+    };
+
+    const dumpScreenProps = async () => {
+        return dumpObjProps(screen, [
+            'availWidth',
+            'availHeight',
+            'availLeft',
+            'availTop',
+            'width',
+            'height',
+            'colorDepth',
+            'pixelDepth',
+        ]);
+    };
+
+    const dumpDocumentProps = async () => {
+        return dumpObjProps(document, [
+            'characterSet',
+            'compatMode',
+            'documentMode',
+            'layers',
+            'images',
+        ]);
+    };
+
+    // webgl
+    const dumpWebGLCore = async (
+        webglContextId,
+        experimentalWebglContextId
+    ) => {
+        function getWebGLContext() {
+            const canvas = document.createElement('canvas');
+            let result = null;
+            try {
+                result =
+                    canvas.getContext(webglContextId) ||
+                    canvas.getContext(experimentalWebglContextId);
+            } catch (ex) {}
+
+            result || (result = null);
+            return result;
+        }
+
+        const webglContext = getWebGLContext();
+
+        function getMaxAnisotropy(ctx) {
+            if (ctx) {
+                const ext =
+                    ctx.getExtension('EXT_texture_filter_anisotropic') ||
+                    ctx.getExtension('WEBKIT_EXT_texture_filter_anisotropic') ||
+                    ctx.getExtension('MOZ_EXT_texture_filter_anisotropic');
+
+                if (ext) {
+                    return ctx.getParameter(ext.MAX_TEXTURE_MAX_ANISOTROPY_EXT);
+                }
+            }
+
+            return null;
+        }
+
+        if (!webglContext) {
+            return {};
+        }
+
+        // https://www.khronos.org/registry/webgl/specs/1.0/
+
+        // correlation table
+        // const corr = {
+        //     "DEPTH_BUFFER_BIT": 256,
+        //     "STENCIL_BUFFER_BIT": 1024,
+        //     "COLOR_BUFFER_BIT": 16384,
+        //     "POINTS": 0,
+        //     "LINES": 1,
+        //     "LINE_LOOP": 2,
+        //     "LINE_STRIP": 3,
+        //     "TRIANGLES": 4,
+        //     "TRIANGLE_STRIP": 5,
+        //     "TRIANGLE_FAN": 6,
+        //     "ZERO": 0,
+        //     "ONE": 1,
+        //     "SRC_COLOR": 768,
+        //     "ONE_MINUS_SRC_COLOR": 769,
+        //     "SRC_ALPHA": 770,
+        //     "ONE_MINUS_SRC_ALPHA": 771,
+        //     "DST_ALPHA": 772,
+        //     "ONE_MINUS_DST_ALPHA": 773,
+        //     "DST_COLOR": 774,
+        //     "ONE_MINUS_DST_COLOR": 775,
+        //     "SRC_ALPHA_SATURATE": 776,
+        //     "FUNC_ADD": 32774,
+        //     "BLEND_EQUATION": 32777,
+        //     "BLEND_EQUATION_RGB": 32777,
+        //     "BLEND_EQUATION_ALPHA": 34877,
+        //     "FUNC_SUBTRACT": 32778,
+        //     "FUNC_REVERSE_SUBTRACT": 32779,
+        //     "BLEND_DST_RGB": 32968,
+        //     "BLEND_SRC_RGB": 32969,
+        //     "BLEND_DST_ALPHA": 32970,
+        //     "BLEND_SRC_ALPHA": 32971,
+        //     "CONSTANT_COLOR": 32769,
+        //     "ONE_MINUS_CONSTANT_COLOR": 32770,
+        //     "CONSTANT_ALPHA": 32771,
+        //     "ONE_MINUS_CONSTANT_ALPHA": 32772,
+        //     "BLEND_COLOR": 32773,
+        //     "ARRAY_BUFFER": 34962,
+        //     "ELEMENT_ARRAY_BUFFER": 34963,
+        //     "ARRAY_BUFFER_BINDING": 34964,
+        //     "ELEMENT_ARRAY_BUFFER_BINDING": 34965,
+        //     "STREAM_DRAW": 35040,
+        //     "STATIC_DRAW": 35044,
+        //     "DYNAMIC_DRAW": 35048,
+        //     "BUFFER_SIZE": 34660,
+        //     "BUFFER_USAGE": 34661,
+        //     "CURRENT_VERTEX_ATTRIB": 34342,
+        //     "FRONT": 1028,
+        //     "BACK": 1029,
+        //     "FRONT_AND_BACK": 1032,
+        //     "TEXTURE_2D": 3553,
+        //     "CULL_FACE": 2884,
+        //     "BLEND": 3042,
+        //     "DITHER": 3024,
+        //     "STENCIL_TEST": 2960,
+        //     "DEPTH_TEST": 2929,
+        //     "SCISSOR_TEST": 3089,
+        //     "POLYGON_OFFSET_FILL": 32823,
+        //     "SAMPLE_ALPHA_TO_COVERAGE": 32926,
+        //     "SAMPLE_COVERAGE": 32928,
+        //     "NO_ERROR": 0,
+        //     "INVALID_ENUM": 1280,
+        //     "INVALID_VALUE": 1281,
+        //     "INVALID_OPERATION": 1282,
+        //     "OUT_OF_MEMORY": 1285,
+        //     "CW": 2304,
+        //     "CCW": 2305,
+        //     "LINE_WIDTH": 2849,
+        //     "ALIASED_POINT_SIZE_RANGE": 33901,
+        //     "ALIASED_LINE_WIDTH_RANGE": 33902,
+        //     "CULL_FACE_MODE": 2885,
+        //     "FRONT_FACE": 2886,
+        //     "DEPTH_RANGE": 2928,
+        //     "DEPTH_WRITEMASK": 2930,
+        //     "DEPTH_CLEAR_VALUE": 2931,
+        //     "DEPTH_FUNC": 2932,
+        //     "STENCIL_CLEAR_VALUE": 2961,
+        //     "STENCIL_FUNC": 2962,
+        //     "STENCIL_FAIL": 2964,
+        //     "STENCIL_PASS_DEPTH_FAIL": 2965,
+        //     "STENCIL_PASS_DEPTH_PASS": 2966,
+        //     "STENCIL_REF": 2967,
+        //     "STENCIL_VALUE_MASK": 2963,
+        //     "STENCIL_WRITEMASK": 2968,
+        //     "STENCIL_BACK_FUNC": 34816,
+        //     "STENCIL_BACK_FAIL": 34817,
+        //     "STENCIL_BACK_PASS_DEPTH_FAIL": 34818,
+        //     "STENCIL_BACK_PASS_DEPTH_PASS": 34819,
+        //     "STENCIL_BACK_REF": 36003,
+        //     "STENCIL_BACK_VALUE_MASK": 36004,
+        //     "STENCIL_BACK_WRITEMASK": 36005,
+        //     "VIEWPORT": 2978,
+        //     "SCISSOR_BOX": 3088,
+        //     "COLOR_CLEAR_VALUE": 3106,
+        //     "COLOR_WRITEMASK": 3107,
+        //     "UNPACK_ALIGNMENT": 3317,
+        //     "PACK_ALIGNMENT": 3333,
+        //     "MAX_TEXTURE_SIZE": 3379,
+        //     "MAX_VIEWPORT_DIMS": 3386,
+        //     "SUBPIXEL_BITS": 3408,
+        //     "RED_BITS": 3410,
+        //     "GREEN_BITS": 3411,
+        //     "BLUE_BITS": 3412,
+        //     "ALPHA_BITS": 3413,
+        //     "DEPTH_BITS": 3414,
+        //     "STENCIL_BITS": 3415,
+        //     "POLYGON_OFFSET_UNITS": 10752,
+        //     "POLYGON_OFFSET_FACTOR": 32824,
+        //     "TEXTURE_BINDING_2D": 32873,
+        //     "SAMPLE_BUFFERS": 32936,
+        //     "SAMPLES": 32937,
+        //     "SAMPLE_COVERAGE_VALUE": 32938,
+        //     "SAMPLE_COVERAGE_INVERT": 32939,
+        //     "COMPRESSED_TEXTURE_FORMATS": 34467,
+        //     "DONT_CARE": 4352,
+        //     "FASTEST": 4353,
+        //     "NICEST": 4354,
+        //     "GENERATE_MIPMAP_HINT": 33170,
+        //     "BYTE": 5120,
+        //     "UNSIGNED_BYTE": 5121,
+        //     "SHORT": 5122,
+        //     "UNSIGNED_SHORT": 5123,
+        //     "INT": 5124,
+        //     "UNSIGNED_INT": 5125,
+        //     "FLOAT": 5126,
+        //     "DEPTH_COMPONENT": 6402,
+        //     "ALPHA": 6406,
+        //     "RGB": 6407,
+        //     "RGBA": 6408,
+        //     "LUMINANCE": 6409,
+        //     "LUMINANCE_ALPHA": 6410,
+        //     "UNSIGNED_SHORT_4_4_4_4": 32819,
+        //     "UNSIGNED_SHORT_5_5_5_1": 32820,
+        //     "UNSIGNED_SHORT_5_6_5": 33635,
+        //     "FRAGMENT_SHADER": 35632,
+        //     "VERTEX_SHADER": 35633,
+        //     "MAX_VERTEX_ATTRIBS": 34921,
+        //     "MAX_VERTEX_UNIFORM_VECTORS": 36347,
+        //     "MAX_VARYING_VECTORS": 36348,
+        //     "MAX_COMBINED_TEXTURE_IMAGE_UNITS": 35661,
+        //     "MAX_VERTEX_TEXTURE_IMAGE_UNITS": 35660,
+        //     "MAX_TEXTURE_IMAGE_UNITS": 34930,
+        //     "MAX_FRAGMENT_UNIFORM_VECTORS": 36349,
+        //     "SHADER_TYPE": 35663,
+        //     "DELETE_STATUS": 35712,
+        //     "LINK_STATUS": 35714,
+        //     "VALIDATE_STATUS": 35715,
+        //     "ATTACHED_SHADERS": 35717,
+        //     "ACTIVE_UNIFORMS": 35718,
+        //     "ACTIVE_ATTRIBUTES": 35721,
+        //     "SHADING_LANGUAGE_VERSION": 35724,
+        //     "CURRENT_PROGRAM": 35725,
+        //     "NEVER": 512,
+        //     "LESS": 513,
+        //     "EQUAL": 514,
+        //     "LEQUAL": 515,
+        //     "GREATER": 516,
+        //     "NOTEQUAL": 517,
+        //     "GEQUAL": 518,
+        //     "ALWAYS": 519,
+        //     "KEEP": 7680,
+        //     "REPLACE": 7681,
+        //     "INCR": 7682,
+        //     "DECR": 7683,
+        //     "INVERT": 5386,
+        //     "INCR_WRAP": 34055,
+        //     "DECR_WRAP": 34056,
+        //     "VENDOR": 7936,
+        //     "RENDERER": 7937,
+        //     "VERSION": 7938,
+        //     "NEAREST": 9728,
+        //     "LINEAR": 9729,
+        //     "NEAREST_MIPMAP_NEAREST": 9984,
+        //     "LINEAR_MIPMAP_NEAREST": 9985,
+        //     "NEAREST_MIPMAP_LINEAR": 9986,
+        //     "LINEAR_MIPMAP_LINEAR": 9987,
+        //     "TEXTURE_MAG_FILTER": 10240,
+        //     "TEXTURE_MIN_FILTER": 10241,
+        //     "TEXTURE_WRAP_S": 10242,
+        //     "TEXTURE_WRAP_T": 10243,
+        //     "TEXTURE": 5890,
+        //     "TEXTURE_CUBE_MAP": 34067,
+        //     "TEXTURE_BINDING_CUBE_MAP": 34068,
+        //     "TEXTURE_CUBE_MAP_POSITIVE_X": 34069,
+        //     "TEXTURE_CUBE_MAP_NEGATIVE_X": 34070,
+        //     "TEXTURE_CUBE_MAP_POSITIVE_Y": 34071,
+        //     "TEXTURE_CUBE_MAP_NEGATIVE_Y": 34072,
+        //     "TEXTURE_CUBE_MAP_POSITIVE_Z": 34073,
+        //     "TEXTURE_CUBE_MAP_NEGATIVE_Z": 34074,
+        //     "MAX_CUBE_MAP_TEXTURE_SIZE": 34076,
+        //     "TEXTURE0": 33984,
+        //     "TEXTURE1": 33985,
+        //     "TEXTURE2": 33986,
+        //     "TEXTURE3": 33987,
+        //     "TEXTURE4": 33988,
+        //     "TEXTURE5": 33989,
+        //     "TEXTURE6": 33990,
+        //     "TEXTURE7": 33991,
+        //     "TEXTURE8": 33992,
+        //     "TEXTURE9": 33993,
+        //     "TEXTURE10": 33994,
+        //     "TEXTURE11": 33995,
+        //     "TEXTURE12": 33996,
+        //     "TEXTURE13": 33997,
+        //     "TEXTURE14": 33998,
+        //     "TEXTURE15": 33999,
+        //     "TEXTURE16": 34000,
+        //     "TEXTURE17": 34001,
+        //     "TEXTURE18": 34002,
+        //     "TEXTURE19": 34003,
+        //     "TEXTURE20": 34004,
+        //     "TEXTURE21": 34005,
+        //     "TEXTURE22": 34006,
+        //     "TEXTURE23": 34007,
+        //     "TEXTURE24": 34008,
+        //     "TEXTURE25": 34009,
+        //     "TEXTURE26": 34010,
+        //     "TEXTURE27": 34011,
+        //     "TEXTURE28": 34012,
+        //     "TEXTURE29": 34013,
+        //     "TEXTURE30": 34014,
+        //     "TEXTURE31": 34015,
+        //     "ACTIVE_TEXTURE": 34016,
+        //     "REPEAT": 10497,
+        //     "CLAMP_TO_EDGE": 33071,
+        //     "MIRRORED_REPEAT": 33648,
+        //     "FLOAT_VEC2": 35664,
+        //     "FLOAT_VEC3": 35665,
+        //     "FLOAT_VEC4": 35666,
+        //     "INT_VEC2": 35667,
+        //     "INT_VEC3": 35668,
+        //     "INT_VEC4": 35669,
+        //     "BOOL": 35670,
+        //     "BOOL_VEC2": 35671,
+        //     "BOOL_VEC3": 35672,
+        //     "BOOL_VEC4": 35673,
+        //     "FLOAT_MAT2": 35674,
+        //     "FLOAT_MAT3": 35675,
+        //     "FLOAT_MAT4": 35676,
+        //     "SAMPLER_2D": 35678,
+        //     "SAMPLER_CUBE": 35680,
+        //     "VERTEX_ATTRIB_ARRAY_ENABLED": 34338,
+        //     "VERTEX_ATTRIB_ARRAY_SIZE": 34339,
+        //     "VERTEX_ATTRIB_ARRAY_STRIDE": 34340,
+        //     "VERTEX_ATTRIB_ARRAY_TYPE": 34341,
+        //     "VERTEX_ATTRIB_ARRAY_NORMALIZED": 34922,
+        //     "VERTEX_ATTRIB_ARRAY_POINTER": 34373,
+        //     "VERTEX_ATTRIB_ARRAY_BUFFER_BINDING": 34975,
+        //     "IMPLEMENTATION_COLOR_READ_TYPE": 35738,
+        //     "IMPLEMENTATION_COLOR_READ_FORMAT": 35739,
+        //     "COMPILE_STATUS": 35713,
+        //     "LOW_FLOAT": 36336,
+        //     "MEDIUM_FLOAT": 36337,
+        //     "HIGH_FLOAT": 36338,
+        //     "LOW_INT": 36339,
+        //     "MEDIUM_INT": 36340,
+        //     "HIGH_INT": 36341,
+        //     "FRAMEBUFFER": 36160,
+        //     "RENDERBUFFER": 36161,
+        //     "RGBA4": 32854,
+        //     "RGB5_A1": 32855,
+        //     "RGB565": 36194,
+        //     "DEPTH_COMPONENT16": 33189,
+        //     "STENCIL_INDEX8": 36168,
+        //     "DEPTH_STENCIL": 34041,
+        //     "RENDERBUFFER_WIDTH": 36162,
+        //     "RENDERBUFFER_HEIGHT": 36163,
+        //     "RENDERBUFFER_INTERNAL_FORMAT": 36164,
+        //     "RENDERBUFFER_RED_SIZE": 36176,
+        //     "RENDERBUFFER_GREEN_SIZE": 36177,
+        //     "RENDERBUFFER_BLUE_SIZE": 36178,
+        //     "RENDERBUFFER_ALPHA_SIZE": 36179,
+        //     "RENDERBUFFER_DEPTH_SIZE": 36180,
+        //     "RENDERBUFFER_STENCIL_SIZE": 36181,
+        //     "FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE": 36048,
+        //     "FRAMEBUFFER_ATTACHMENT_OBJECT_NAME": 36049,
+        //     "FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL": 36050,
+        //     "FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE": 36051,
+        //     "COLOR_ATTACHMENT0": 36064,
+        //     "DEPTH_ATTACHMENT": 36096,
+        //     "STENCIL_ATTACHMENT": 36128,
+        //     "DEPTH_STENCIL_ATTACHMENT": 33306,
+        //     "NONE": 0,
+        //     "FRAMEBUFFER_COMPLETE": 36053,
+        //     "FRAMEBUFFER_INCOMPLETE_ATTACHMENT": 36054,
+        //     "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT": 36055,
+        //     "FRAMEBUFFER_INCOMPLETE_DIMENSIONS": 36057,
+        //     "FRAMEBUFFER_UNSUPPORTED": 36061,
+        //     "FRAMEBUFFER_BINDING": 36006,
+        //     "RENDERBUFFER_BINDING": 36007,
+        //     "MAX_RENDERBUFFER_SIZE": 34024,
+        //     "INVALID_FRAMEBUFFER_OPERATION": 1286,
+        //     "UNPACK_FLIP_Y_WEBGL": 37440,
+        //     "UNPACK_PREMULTIPLY_ALPHA_WEBGL": 37441,
+        //     "CONTEXT_LOST_WEBGL": 37442,
+        //     "UNPACK_COLORSPACE_CONVERSION_WEBGL": 37443,
+        //     "BROWSER_DEFAULT_WEBGL": 37444,
+        //     "READ_BUFFER": 3074,
+        //     "UNPACK_ROW_LENGTH": 3314,
+        //     "UNPACK_SKIP_ROWS": 3315,
+        //     "UNPACK_SKIP_PIXELS": 3316,
+        //     "PACK_ROW_LENGTH": 3330,
+        //     "PACK_SKIP_ROWS": 3331,
+        //     "PACK_SKIP_PIXELS": 3332,
+        //     "COLOR": 6144,
+        //     "DEPTH": 6145,
+        //     "STENCIL": 6146,
+        //     "RED": 6403,
+        //     "RGB8": 32849,
+        //     "RGBA8": 32856,
+        //     "RGB10_A2": 32857,
+        //     "TEXTURE_BINDING_3D": 32874,
+        //     "UNPACK_SKIP_IMAGES": 32877,
+        //     "UNPACK_IMAGE_HEIGHT": 32878,
+        //     "TEXTURE_3D": 32879,
+        //     "TEXTURE_WRAP_R": 32882,
+        //     "MAX_3D_TEXTURE_SIZE": 32883,
+        //     "UNSIGNED_INT_2_10_10_10_REV": 33640,
+        //     "MAX_ELEMENTS_VERTICES": 33000,
+        //     "MAX_ELEMENTS_INDICES": 33001,
+        //     "TEXTURE_MIN_LOD": 33082,
+        //     "TEXTURE_MAX_LOD": 33083,
+        //     "TEXTURE_BASE_LEVEL": 33084,
+        //     "TEXTURE_MAX_LEVEL": 33085,
+        //     "MIN": 32775,
+        //     "MAX": 32776,
+        //     "DEPTH_COMPONENT24": 33190,
+        //     "MAX_TEXTURE_LOD_BIAS": 34045,
+        //     "TEXTURE_COMPARE_MODE": 34892,
+        //     "TEXTURE_COMPARE_FUNC": 34893,
+        //     "CURRENT_QUERY": 34917,
+        //     "QUERY_RESULT": 34918,
+        //     "QUERY_RESULT_AVAILABLE": 34919,
+        //     "STREAM_READ": 35041,
+        //     "STREAM_COPY": 35042,
+        //     "STATIC_READ": 35045,
+        //     "STATIC_COPY": 35046,
+        //     "DYNAMIC_READ": 35049,
+        //     "DYNAMIC_COPY": 35050,
+        //     "MAX_DRAW_BUFFERS": 34852,
+        //     "DRAW_BUFFER0": 34853,
+        //     "DRAW_BUFFER1": 34854,
+        //     "DRAW_BUFFER2": 34855,
+        //     "DRAW_BUFFER3": 34856,
+        //     "DRAW_BUFFER4": 34857,
+        //     "DRAW_BUFFER5": 34858,
+        //     "DRAW_BUFFER6": 34859,
+        //     "DRAW_BUFFER7": 34860,
+        //     "DRAW_BUFFER8": 34861,
+        //     "DRAW_BUFFER9": 34862,
+        //     "DRAW_BUFFER10": 34863,
+        //     "DRAW_BUFFER11": 34864,
+        //     "DRAW_BUFFER12": 34865,
+        //     "DRAW_BUFFER13": 34866,
+        //     "DRAW_BUFFER14": 34867,
+        //     "DRAW_BUFFER15": 34868,
+        //     "MAX_FRAGMENT_UNIFORM_COMPONENTS": 35657,
+        //     "MAX_VERTEX_UNIFORM_COMPONENTS": 35658,
+        //     "SAMPLER_3D": 35679,
+        //     "SAMPLER_2D_SHADOW": 35682,
+        //     "FRAGMENT_SHADER_DERIVATIVE_HINT": 35723,
+        //     "PIXEL_PACK_BUFFER": 35051,
+        //     "PIXEL_UNPACK_BUFFER": 35052,
+        //     "PIXEL_PACK_BUFFER_BINDING": 35053,
+        //     "PIXEL_UNPACK_BUFFER_BINDING": 35055,
+        //     "FLOAT_MAT2x3": 35685,
+        //     "FLOAT_MAT2x4": 35686,
+        //     "FLOAT_MAT3x2": 35687,
+        //     "FLOAT_MAT3x4": 35688,
+        //     "FLOAT_MAT4x2": 35689,
+        //     "FLOAT_MAT4x3": 35690,
+        //     "SRGB": 35904,
+        //     "SRGB8": 35905,
+        //     "SRGB8_ALPHA8": 35907,
+        //     "COMPARE_REF_TO_TEXTURE": 34894,
+        //     "RGBA32F": 34836,
+        //     "RGB32F": 34837,
+        //     "RGBA16F": 34842,
+        //     "RGB16F": 34843,
+        //     "VERTEX_ATTRIB_ARRAY_INTEGER": 35069,
+        //     "MAX_ARRAY_TEXTURE_LAYERS": 35071,
+        //     "MIN_PROGRAM_TEXEL_OFFSET": 35076,
+        //     "MAX_PROGRAM_TEXEL_OFFSET": 35077,
+        //     "MAX_VARYING_COMPONENTS": 35659,
+        //     "TEXTURE_2D_ARRAY": 35866,
+        //     "TEXTURE_BINDING_2D_ARRAY": 35869,
+        //     "R11F_G11F_B10F": 35898,
+        //     "UNSIGNED_INT_10F_11F_11F_REV": 35899,
+        //     "RGB9_E5": 35901,
+        //     "UNSIGNED_INT_5_9_9_9_REV": 35902,
+        //     "TRANSFORM_FEEDBACK_BUFFER_MODE": 35967,
+        //     "MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS": 35968,
+        //     "TRANSFORM_FEEDBACK_VARYINGS": 35971,
+        //     "TRANSFORM_FEEDBACK_BUFFER_START": 35972,
+        //     "TRANSFORM_FEEDBACK_BUFFER_SIZE": 35973,
+        //     "TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN": 35976,
+        //     "RASTERIZER_DISCARD": 35977,
+        //     "MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS": 35978,
+        //     "MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS": 35979,
+        //     "INTERLEAVED_ATTRIBS": 35980,
+        //     "SEPARATE_ATTRIBS": 35981,
+        //     "TRANSFORM_FEEDBACK_BUFFER": 35982,
+        //     "TRANSFORM_FEEDBACK_BUFFER_BINDING": 35983,
+        //     "RGBA32UI": 36208,
+        //     "RGB32UI": 36209,
+        //     "RGBA16UI": 36214,
+        //     "RGB16UI": 36215,
+        //     "RGBA8UI": 36220,
+        //     "RGB8UI": 36221,
+        //     "RGBA32I": 36226,
+        //     "RGB32I": 36227,
+        //     "RGBA16I": 36232,
+        //     "RGB16I": 36233,
+        //     "RGBA8I": 36238,
+        //     "RGB8I": 36239,
+        //     "RED_INTEGER": 36244,
+        //     "RGB_INTEGER": 36248,
+        //     "RGBA_INTEGER": 36249,
+        //     "SAMPLER_2D_ARRAY": 36289,
+        //     "SAMPLER_2D_ARRAY_SHADOW": 36292,
+        //     "SAMPLER_CUBE_SHADOW": 36293,
+        //     "UNSIGNED_INT_VEC2": 36294,
+        //     "UNSIGNED_INT_VEC3": 36295,
+        //     "UNSIGNED_INT_VEC4": 36296,
+        //     "INT_SAMPLER_2D": 36298,
+        //     "INT_SAMPLER_3D": 36299,
+        //     "INT_SAMPLER_CUBE": 36300,
+        //     "INT_SAMPLER_2D_ARRAY": 36303,
+        //     "UNSIGNED_INT_SAMPLER_2D": 36306,
+        //     "UNSIGNED_INT_SAMPLER_3D": 36307,
+        //     "UNSIGNED_INT_SAMPLER_CUBE": 36308,
+        //     "UNSIGNED_INT_SAMPLER_2D_ARRAY": 36311,
+        //     "DEPTH_COMPONENT32F": 36012,
+        //     "DEPTH32F_STENCIL8": 36013,
+        //     "FLOAT_32_UNSIGNED_INT_24_8_REV": 36269,
+        //     "FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING": 33296,
+        //     "FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE": 33297,
+        //     "FRAMEBUFFER_ATTACHMENT_RED_SIZE": 33298,
+        //     "FRAMEBUFFER_ATTACHMENT_GREEN_SIZE": 33299,
+        //     "FRAMEBUFFER_ATTACHMENT_BLUE_SIZE": 33300,
+        //     "FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE": 33301,
+        //     "FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE": 33302,
+        //     "FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE": 33303,
+        //     "FRAMEBUFFER_DEFAULT": 33304,
+        //     "UNSIGNED_INT_24_8": 34042,
+        //     "DEPTH24_STENCIL8": 35056,
+        //     "UNSIGNED_NORMALIZED": 35863,
+        //     "DRAW_FRAMEBUFFER_BINDING": 36006,
+        //     "READ_FRAMEBUFFER": 36008,
+        //     "DRAW_FRAMEBUFFER": 36009,
+        //     "READ_FRAMEBUFFER_BINDING": 36010,
+        //     "RENDERBUFFER_SAMPLES": 36011,
+        //     "FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER": 36052,
+        //     "MAX_COLOR_ATTACHMENTS": 36063,
+        //     "COLOR_ATTACHMENT1": 36065,
+        //     "COLOR_ATTACHMENT2": 36066,
+        //     "COLOR_ATTACHMENT3": 36067,
+        //     "COLOR_ATTACHMENT4": 36068,
+        //     "COLOR_ATTACHMENT5": 36069,
+        //     "COLOR_ATTACHMENT6": 36070,
+        //     "COLOR_ATTACHMENT7": 36071,
+        //     "COLOR_ATTACHMENT8": 36072,
+        //     "COLOR_ATTACHMENT9": 36073,
+        //     "COLOR_ATTACHMENT10": 36074,
+        //     "COLOR_ATTACHMENT11": 36075,
+        //     "COLOR_ATTACHMENT12": 36076,
+        //     "COLOR_ATTACHMENT13": 36077,
+        //     "COLOR_ATTACHMENT14": 36078,
+        //     "COLOR_ATTACHMENT15": 36079,
+        //     "FRAMEBUFFER_INCOMPLETE_MULTISAMPLE": 36182,
+        //     "MAX_SAMPLES": 36183,
+        //     "HALF_FLOAT": 5131,
+        //     "RG": 33319,
+        //     "RG_INTEGER": 33320,
+        //     "R8": 33321,
+        //     "RG8": 33323,
+        //     "R16F": 33325,
+        //     "R32F": 33326,
+        //     "RG16F": 33327,
+        //     "RG32F": 33328,
+        //     "R8I": 33329,
+        //     "R8UI": 33330,
+        //     "R16I": 33331,
+        //     "R16UI": 33332,
+        //     "R32I": 33333,
+        //     "R32UI": 33334,
+        //     "RG8I": 33335,
+        //     "RG8UI": 33336,
+        //     "RG16I": 33337,
+        //     "RG16UI": 33338,
+        //     "RG32I": 33339,
+        //     "RG32UI": 33340,
+        //     "VERTEX_ARRAY_BINDING": 34229,
+        //     "R8_SNORM": 36756,
+        //     "RG8_SNORM": 36757,
+        //     "RGB8_SNORM": 36758,
+        //     "RGBA8_SNORM": 36759,
+        //     "SIGNED_NORMALIZED": 36764,
+        //     "COPY_READ_BUFFER": 36662,
+        //     "COPY_WRITE_BUFFER": 36663,
+        //     "COPY_READ_BUFFER_BINDING": 36662,
+        //     "COPY_WRITE_BUFFER_BINDING": 36663,
+        //     "UNIFORM_BUFFER": 35345,
+        //     "UNIFORM_BUFFER_BINDING": 35368,
+        //     "UNIFORM_BUFFER_START": 35369,
+        //     "UNIFORM_BUFFER_SIZE": 35370,
+        //     "MAX_VERTEX_UNIFORM_BLOCKS": 35371,
+        //     "MAX_FRAGMENT_UNIFORM_BLOCKS": 35373,
+        //     "MAX_COMBINED_UNIFORM_BLOCKS": 35374,
+        //     "MAX_UNIFORM_BUFFER_BINDINGS": 35375,
+        //     "MAX_UNIFORM_BLOCK_SIZE": 35376,
+        //     "MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS": 35377,
+        //     "MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS": 35379,
+        //     "UNIFORM_BUFFER_OFFSET_ALIGNMENT": 35380,
+        //     "ACTIVE_UNIFORM_BLOCKS": 35382,
+        //     "UNIFORM_TYPE": 35383,
+        //     "UNIFORM_SIZE": 35384,
+        //     "UNIFORM_BLOCK_INDEX": 35386,
+        //     "UNIFORM_OFFSET": 35387,
+        //     "UNIFORM_ARRAY_STRIDE": 35388,
+        //     "UNIFORM_MATRIX_STRIDE": 35389,
+        //     "UNIFORM_IS_ROW_MAJOR": 35390,
+        //     "UNIFORM_BLOCK_BINDING": 35391,
+        //     "UNIFORM_BLOCK_DATA_SIZE": 35392,
+        //     "UNIFORM_BLOCK_ACTIVE_UNIFORMS": 35394,
+        //     "UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES": 35395,
+        //     "UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER": 35396,
+        //     "UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER": 35398,
+        //     "INVALID_INDEX": 4294967295,
+        //     "MAX_VERTEX_OUTPUT_COMPONENTS": 37154,
+        //     "MAX_FRAGMENT_INPUT_COMPONENTS": 37157,
+        //     "MAX_SERVER_WAIT_TIMEOUT": 37137,
+        //     "OBJECT_TYPE": 37138,
+        //     "SYNC_CONDITION": 37139,
+        //     "SYNC_STATUS": 37140,
+        //     "SYNC_FLAGS": 37141,
+        //     "SYNC_FENCE": 37142,
+        //     "SYNC_GPU_COMMANDS_COMPLETE": 37143,
+        //     "UNSIGNALED": 37144,
+        //     "SIGNALED": 37145,
+        //     "ALREADY_SIGNALED": 37146,
+        //     "TIMEOUT_EXPIRED": 37147,
+        //     "CONDITION_SATISFIED": 37148,
+        //     "WAIT_FAILED": 37149,
+        //     "SYNC_FLUSH_COMMANDS_BIT": 1,
+        //     "VERTEX_ATTRIB_ARRAY_DIVISOR": 35070,
+        //     "ANY_SAMPLES_PASSED": 35887,
+        //     "ANY_SAMPLES_PASSED_CONSERVATIVE": 36202,
+        //     "SAMPLER_BINDING": 35097,
+        //     "RGB10_A2UI": 36975,
+        //     "INT_2_10_10_10_REV": 36255,
+        //     "TRANSFORM_FEEDBACK": 36386,
+        //     "TRANSFORM_FEEDBACK_PAUSED": 36387,
+        //     "TRANSFORM_FEEDBACK_ACTIVE": 36388,
+        //     "TRANSFORM_FEEDBACK_BINDING": 36389,
+        //     "TEXTURE_IMMUTABLE_FORMAT": 37167,
+        //     "MAX_ELEMENT_INDEX": 36203,
+        //     "TEXTURE_IMMUTABLE_LEVELS": 33503,
+        //     "TIMEOUT_IGNORED": -1,
+        //     "MAX_CLIENT_WAIT_TIMEOUT_WEBGL": 37447
+        // }
+
+        const glEnums = [
+            2849, 2849, 2884, 2884, 2885, 2885, 2886, 2886, 2928, 2928, 2929,
+            2929, 2930, 2930, 2931, 2931, 2932, 2932, 2960, 2960, 2961, 2961,
+            2962, 2962, 2963, 2963, 2964, 2964, 2965, 2965, 2966, 2966, 2967,
+            2967, 2968, 2968, 2978, 2978, 3024, 3024, 3042, 3042, 3088, 3088,
+            3089, 3089, 3106, 3106, 3107, 3107, 3317, 3317, 3333, 3333, 3379,
+            3386, 3408, 3408, 3410, 3411, 3412, 3413, 3414, 3415, 3415, 3415,
+            7936, 7937, 7938, 10752, 10752, 32773, 32773, 32777, 32777, 32823,
+            32823, 32824, 32824, 32873, 32873, 32883, 32883, 32936, 32936,
+            32937, 32937, 32938, 32938, 32939, 32939, 32968, 32968, 32969,
+            32969, 32970, 32970, 32971, 32971, 33170, 33170, 33901, 33902,
+            34016, 34016, 34024, 34045, 34045, 34047, 34068, 34068, 34076,
+            34467, 34467, 34816, 34816, 34817, 34817, 34818, 34818, 34819,
+            34819, 34852, 34852, 34877, 34877, 34921, 34930, 34964, 34964,
+            34965, 34965, 35071, 35071, 35076, 35076, 35077, 35077, 35371,
+            35371, 35373, 35373, 35374, 35374, 35375, 35375, 35376, 35376,
+            35377, 35377, 35379, 35379, 35380, 35380, 35657, 35657, 35658,
+            35658, 35659, 35659, 35660, 35661, 35724, 35725, 35725, 35968,
+            35968, 35978, 35978, 35979, 35979, 36003, 36003, 36004, 36004,
+            36005, 36005, 36006, 36006, 36007, 36007, 36063, 36063, 36183,
+            36183, 36347, 36348, 36349, 37154, 37154, 37157, 37157, 37440,
+            37440, 37441, 37441, 37443, 37443,
+        ];
+        const result = {
+            supportedExtensions: webglContext.getSupportedExtensions() || [],
+            contextAttributes: webglContext.getContextAttributes(),
+            maxAnisotropy: getMaxAnisotropy(webglContext),
+            params: {},
+        };
+
+        for (const glEnum of glEnums) {
+            try {
+                const parmValue = webglContext.getParameter(glEnum);
+                result.params[glEnum] = {
+                    type: parmValue ? parmValue.constructor.name : '',
+                    value: parmValue,
+                };
+            } catch (ignored) {
+                debugger;
+            }
+        }
+
+        //
+        const args = [
+            [webglContext.VERTEX_SHADER, webglContext.HIGH_FLOAT],
+            [webglContext.VERTEX_SHADER, webglContext.MEDIUM_FLOAT],
+            [webglContext.VERTEX_SHADER, webglContext.LOW_FLOAT],
+            [webglContext.VERTEX_SHADER, webglContext.HIGH_INT],
+            [webglContext.VERTEX_SHADER, webglContext.MEDIUM_INT],
+            [webglContext.VERTEX_SHADER, webglContext.LOW_INT],
+
+            [webglContext.FRAGMENT_SHADER, webglContext.HIGH_FLOAT],
+            [webglContext.FRAGMENT_SHADER, webglContext.MEDIUM_FLOAT],
+            [webglContext.FRAGMENT_SHADER, webglContext.LOW_FLOAT],
+            [webglContext.FRAGMENT_SHADER, webglContext.HIGH_INT],
+            [webglContext.FRAGMENT_SHADER, webglContext.MEDIUM_INT],
+            [webglContext.FRAGMENT_SHADER, webglContext.LOW_INT],
+        ];
+
+        result.shaderPrecisionFormats = [];
+        for (let arg of args) {
+            let [shaderType, precisionType] = arg;
+            let r = webglContext.getShaderPrecisionFormat(
+                shaderType,
+                precisionType
+            );
+
+            result.shaderPrecisionFormats.push({
+                shaderType,
+                precisionType,
+                r: {
+                    rangeMin: r.rangeMin,
+                    rangeMax: r.rangeMax,
+                    precision: r.precision,
+                },
+            });
+        }
+
+        return result;
+    };
+
+    const dumpWebGL = async () => {
+        return await dumpWebGLCore('webgl', 'experimental-webgl');
+    };
+
+    const dumpWebGL2 = async () => {
+        return await dumpWebGLCore('webgl2', 'experimental-webgl2');
+    };
+
+    // mimeTypes
+    const dumpMimeTypes = async () => {
+        const mimeTypes = [
+            'application/mp21',
+            'application/mp4',
+            'application/octet-stream',
+            'application/ogg',
+            'application/vnd.apple.mpegurl',
+            'application/vnd.ms-ss',
+            'application/vnd.ms-sstr+xml',
+            'application/x-mpegURL; codecs="avc1.42E01E"',
+            'application/x-mpegurl',
+            'audio/3gpp',
+            'audio/3gpp2',
+            'audio/aac',
+            'audio/aac; codecs="flac"',
+            'audio/ac-3',
+            'audio/ac3',
+            'audio/acc',
+            'audio/aiff',
+            'audio/amr; codecs="hvc1x"',
+            'audio/basic',
+            'audio/ec-3',
+            'audio/flac',
+            'audio/m4a',
+            'audio/mid',
+            'audio/midi',
+            'audio/mp3',
+            'audio/mp3; codecs="vp9"',
+            'audio/mp4',
+            'audio/mp4; codecs="A52"',
+            'audio/mp4; codecs="Opus"',
+            'audio/mp4; codecs="a3ds"',
+            'audio/mp4; codecs="aac"',
+            'audio/mp4; codecs="ac-3"',
+            'audio/mp4; codecs="ac-4"',
+            'audio/mp4; codecs="ac3"',
+            'audio/mp4; codecs="alac"',
+            'audio/mp4; codecs="alaw"',
+            'audio/mp4; codecs="bogus"',
+            'audio/mp4; codecs="dra1"',
+            'audio/mp4; codecs="dts+"',
+            'audio/mp4; codecs="dts-"',
+            'audio/mp4; codecs="dtsc"',
+            'audio/mp4; codecs="dtse"',
+            'audio/mp4; codecs="dtsh"',
+            'audio/mp4; codecs="dtsl"',
+            'audio/mp4; codecs="dtsx"',
+            'audio/mp4; codecs="ec-3"',
+            'audio/mp4; codecs="enca"',
+            'audio/mp4; codecs="flac"',
+            'audio/mp4; codecs="g719"',
+            'audio/mp4; codecs="g726"',
+            'audio/mp4; codecs="m4ae"',
+            'audio/mp4; codecs="mha1"',
+            'audio/mp4; codecs="mha2"',
+            'audio/mp4; codecs="mhm1"',
+            'audio/mp4; codecs="mhm2"',
+            'audio/mp4; codecs="mlpa"',
+            'audio/mp4; codecs="mp3"',
+            'audio/mp4; codecs="mp4a"',
+            'audio/mp4; codecs="mp4a.40"',
+            'audio/mp4; codecs="mp4a.40.1"',
+            'audio/mp4; codecs="mp4a.40.12"',
+            'audio/mp4; codecs="mp4a.40.13"',
+            'audio/mp4; codecs="mp4a.40.14"',
+            'audio/mp4; codecs="mp4a.40.15"',
+            'audio/mp4; codecs="mp4a.40.16"',
+            'audio/mp4; codecs="mp4a.40.17"',
+            'audio/mp4; codecs="mp4a.40.19"',
+            'audio/mp4; codecs="mp4a.40.2"',
+            'audio/mp4; codecs="mp4a.40.20"',
+            'audio/mp4; codecs="mp4a.40.21"',
+            'audio/mp4; codecs="mp4a.40.22"',
+            'audio/mp4; codecs="mp4a.40.23"',
+            'audio/mp4; codecs="mp4a.40.24"',
+            'audio/mp4; codecs="mp4a.40.25"',
+            'audio/mp4; codecs="mp4a.40.26"',
+            'audio/mp4; codecs="mp4a.40.27"',
+            'audio/mp4; codecs="mp4a.40.28"',
+            'audio/mp4; codecs="mp4a.40.29"',
+            'audio/mp4; codecs="mp4a.40.3"',
+            'audio/mp4; codecs="mp4a.40.32"',
+            'audio/mp4; codecs="mp4a.40.33"',
+            'audio/mp4; codecs="mp4a.40.34"',
+            'audio/mp4; codecs="mp4a.40.35"',
+            'audio/mp4; codecs="mp4a.40.36"',
+            'audio/mp4; codecs="mp4a.40.4"',
+            'audio/mp4; codecs="mp4a.40.5"',
+            'audio/mp4; codecs="mp4a.40.6"',
+            'audio/mp4; codecs="mp4a.40.7"',
+            'audio/mp4; codecs="mp4a.40.8"',
+            'audio/mp4; codecs="mp4a.40.9"',
+            'audio/mp4; codecs="mp4a.66"',
+            'audio/mp4; codecs="mp4a.67"',
+            'audio/mp4; codecs="mp4a.68"',
+            'audio/mp4; codecs="mp4a.69"',
+            'audio/mp4; codecs="mp4a.6B"',
+            'audio/mp4; codecs="raw"',
+            'audio/mp4; codecs="samr"',
+            'audio/mp4; codecs="sawb"',
+            'audio/mp4; codecs="sawp"',
+            'audio/mp4; codecs="sevc"',
+            'audio/mp4; codecs="sqcp"',
+            'audio/mp4; codecs="ssmv"',
+            'audio/mp4; codecs="twos"',
+            'audio/mp4; codecs="ulaw"',
+            'audio/mpeg',
+            'audio/mpeg; codecs="mp3"',
+            'audio/mpegurl',
+            'audio/ogg; codecs="flac"',
+            'audio/ogg; codecs="opus"',
+            'audio/ogg; codecs="speex"',
+            'audio/ogg; codecs="theora, opus"',
+            'audio/ogg; codecs="vorbis"',
+            'audio/vnd.rn-realaudio',
+            'audio/vnd.wave',
+            'audio/wav',
+            'audio/wav; codecs="0"',
+            'audio/wav; codecs="1"',
+            'audio/wav; codecs="2"',
+            'audio/wave',
+            'audio/wave; codecs="0"',
+            'audio/wave; codecs="1"',
+            'audio/wave; codecs="2"',
+            'audio/webm',
+            'audio/webm; codecs="opus"',
+            'audio/webm; codecs="vorbis"',
+            'audio/webm; codecs="vp8"',
+            'audio/wma',
+            'audio/x-aac',
+            'audio/x-ac3',
+            'audio/x-aiff',
+            'audio/x-flac',
+            'audio/x-m4a',
+            'audio/x-m4a; codecs="mp3"',
+            'audio/x-m4a; codecs="vp8, mp4a.40"',
+            'audio/x-m4a; codecs="vp9, mp4a.40.2"',
+            'audio/x-midi',
+            'audio/x-mpeg',
+            'audio/x-mpegurl',
+            'audio/x-pn-realaudio',
+            'audio/x-pn-realaudio-plugin',
+            'audio/x-pn-wav',
+            'audio/x-pn-wav; codecs="0"',
+            'audio/x-pn-wav; codecs="1"',
+            'audio/x-pn-wav; codecs="2"',
+            'audio/x-scpls',
+            'audio/x-wav',
+            'audio/x-wav; codecs="0"',
+            'audio/x-wav; codecs="1"',
+            'audio/x-wav; codecs="2"',
+            'video/3gpp',
+            'video/3gpp2',
+            'video/3gpp; codecs="mp4v.20.8, samr"',
+            'video/avi',
+            'video/h263',
+            'video/mp2t',
+            'video/mp2t; codecs="avc1.42E01E,mp4a.40.2"',
+            'video/mp4',
+            'video/mp4; codecs="3gvo"',
+            'video/mp4; codecs="STGS"',
+            'video/mp4; codecs="a3d1"',
+            'video/mp4; codecs="a3d2"',
+            'video/mp4; codecs="a3d3"',
+            'video/mp4; codecs="a3d4"',
+            'video/mp4; codecs="av01.0.08M.08"',
+            'video/mp4; codecs="avc1"',
+            'video/mp4; codecs="avc1.123456"',
+            'video/mp4; codecs="avc1.2c000a"',
+            'video/mp4; codecs="avc1.2c000b"',
+            'video/mp4; codecs="avc1.2c000c"',
+            'video/mp4; codecs="avc1.2c000d"',
+            'video/mp4; codecs="avc1.2c0014"',
+            'video/mp4; codecs="avc1.2c0015"',
+            'video/mp4; codecs="avc1.2c0016"',
+            'video/mp4; codecs="avc1.2c001e"',
+            'video/mp4; codecs="avc1.2c001f"',
+            'video/mp4; codecs="avc1.2c0020"',
+            'video/mp4; codecs="avc1.2c0028"',
+            'video/mp4; codecs="avc1.2c0029"',
+            'video/mp4; codecs="avc1.2c002a"',
+            'video/mp4; codecs="avc1.2c0032"',
+            'video/mp4; codecs="avc1.2c0033"',
+            'video/mp4; codecs="avc1.2c0034"',
+            'video/mp4; codecs="avc1.2c003c"',
+            'video/mp4; codecs="avc1.2c003d"',
+            'video/mp4; codecs="avc1.2c003e"',
+            'video/mp4; codecs="avc1.2c003f"',
+            'video/mp4; codecs="avc1.2c0040"',
+            'video/mp4; codecs="avc1.2c0050"',
+            'video/mp4; codecs="avc1.2c006e"',
+            'video/mp4; codecs="avc1.2c0085"',
+            'video/mp4; codecs="avc1.42000a"',
+            'video/mp4; codecs="avc1.42000b"',
+            'video/mp4; codecs="avc1.42000c"',
+            'video/mp4; codecs="avc1.42000d"',
+            'video/mp4; codecs="avc1.420014"',
+            'video/mp4; codecs="avc1.420015"',
+            'video/mp4; codecs="avc1.420016"',
+            'video/mp4; codecs="avc1.42001e"',
+            'video/mp4; codecs="avc1.42001f"',
+            'video/mp4; codecs="avc1.420020"',
+            'video/mp4; codecs="avc1.420028"',
+            'video/mp4; codecs="avc1.420029"',
+            'video/mp4; codecs="avc1.42002a"',
+            'video/mp4; codecs="avc1.420032"',
+            'video/mp4; codecs="avc1.420033"',
+            'video/mp4; codecs="avc1.420034"',
+            'video/mp4; codecs="avc1.42003c"',
+            'video/mp4; codecs="avc1.42003d"',
+            'video/mp4; codecs="avc1.42003e"',
+            'video/mp4; codecs="avc1.42003f"',
+            'video/mp4; codecs="avc1.420040"',
+            'video/mp4; codecs="avc1.420050"',
+            'video/mp4; codecs="avc1.42006e"',
+            'video/mp4; codecs="avc1.420085"',
+            'video/mp4; codecs="avc1.42400a"',
+            'video/mp4; codecs="avc1.42400b"',
+            'video/mp4; codecs="avc1.42400c"',
+            'video/mp4; codecs="avc1.42400d"',
+            'video/mp4; codecs="avc1.424014"',
+            'video/mp4; codecs="avc1.424015"',
+            'video/mp4; codecs="avc1.424016"',
+            'video/mp4; codecs="avc1.42401e"',
+            'video/mp4; codecs="avc1.42401f"',
+            'video/mp4; codecs="avc1.424020"',
+            'video/mp4; codecs="avc1.424028"',
+            'video/mp4; codecs="avc1.424029"',
+            'video/mp4; codecs="avc1.42402a"',
+            'video/mp4; codecs="avc1.424032"',
+            'video/mp4; codecs="avc1.424033"',
+            'video/mp4; codecs="avc1.424034"',
+            'video/mp4; codecs="avc1.42403c"',
+            'video/mp4; codecs="avc1.42403d"',
+            'video/mp4; codecs="avc1.42403e"',
+            'video/mp4; codecs="avc1.42403f"',
+            'video/mp4; codecs="avc1.424040"',
+            'video/mp4; codecs="avc1.424050"',
+            'video/mp4; codecs="avc1.42406e"',
+            'video/mp4; codecs="avc1.424085"',
+            'video/mp4; codecs="avc1.42E009"',
+            'video/mp4; codecs="avc1.42E01E"',
+            'video/mp4; codecs="avc1.42E01E, mp4a.40.2"',
+            'video/mp4; codecs="avc1.42E034"',
+            'video/mp4; codecs="avc1.42F01E"',
+            'video/mp4; codecs="avc1.42c00d"',
+            'video/mp4; codecs="avc1.4D001E"',
+            'video/mp4; codecs="avc1.4d000a"',
+            'video/mp4; codecs="avc1.4d000b"',
+            'video/mp4; codecs="avc1.4d000c"',
+            'video/mp4; codecs="avc1.4d000d"',
+            'video/mp4; codecs="avc1.4d0014"',
+            'video/mp4; codecs="avc1.4d0015"',
+            'video/mp4; codecs="avc1.4d0016"',
+            'video/mp4; codecs="avc1.4d001e"',
+            'video/mp4; codecs="avc1.4d001f"',
+            'video/mp4; codecs="avc1.4d0020"',
+            'video/mp4; codecs="avc1.4d0028"',
+            'video/mp4; codecs="avc1.4d0029"',
+            'video/mp4; codecs="avc1.4d002a"',
+            'video/mp4; codecs="avc1.4d0032"',
+            'video/mp4; codecs="avc1.4d0033"',
+            'video/mp4; codecs="avc1.4d0034"',
+            'video/mp4; codecs="avc1.4d003c"',
+            'video/mp4; codecs="avc1.4d003d"',
+            'video/mp4; codecs="avc1.4d003e"',
+            'video/mp4; codecs="avc1.4d003f"',
+            'video/mp4; codecs="avc1.4d0040"',
+            'video/mp4; codecs="avc1.4d0050"',
+            'video/mp4; codecs="avc1.4d006e"',
+            'video/mp4; codecs="avc1.4d0085"',
+            'video/mp4; codecs="avc1.4d400a"',
+            'video/mp4; codecs="avc1.4d400b"',
+            'video/mp4; codecs="avc1.4d400c"',
+            'video/mp4; codecs="avc1.4d400d"',
+            'video/mp4; codecs="avc1.4d4014"',
+            'video/mp4; codecs="avc1.4d4015"',
+            'video/mp4; codecs="avc1.4d4016"',
+            'video/mp4; codecs="avc1.4d401e"',
+            'video/mp4; codecs="avc1.4d401f"',
+            'video/mp4; codecs="avc1.4d4020"',
+            'video/mp4; codecs="avc1.4d4028"',
+            'video/mp4; codecs="avc1.4d4029"',
+            'video/mp4; codecs="avc1.4d402a"',
+            'video/mp4; codecs="avc1.4d4032"',
+            'video/mp4; codecs="avc1.4d4033"',
+            'video/mp4; codecs="avc1.4d4034"',
+            'video/mp4; codecs="avc1.4d403c"',
+            'video/mp4; codecs="avc1.4d403d"',
+            'video/mp4; codecs="avc1.4d403e"',
+            'video/mp4; codecs="avc1.4d403f"',
+            'video/mp4; codecs="avc1.4d4040"',
+            'video/mp4; codecs="avc1.4d4050"',
+            'video/mp4; codecs="avc1.4d406e"',
+            'video/mp4; codecs="avc1.4d4085"',
+            'video/mp4; codecs="avc1.53000a"',
+            'video/mp4; codecs="avc1.53000b"',
+            'video/mp4; codecs="avc1.53000c"',
+            'video/mp4; codecs="avc1.53000d"',
+            'video/mp4; codecs="avc1.530014"',
+            'video/mp4; codecs="avc1.530015"',
+            'video/mp4; codecs="avc1.530016"',
+            'video/mp4; codecs="avc1.53001e"',
+            'video/mp4; codecs="avc1.53001f"',
+            'video/mp4; codecs="avc1.530020"',
+            'video/mp4; codecs="avc1.530028"',
+            'video/mp4; codecs="avc1.530029"',
+            'video/mp4; codecs="avc1.53002a"',
+            'video/mp4; codecs="avc1.530032"',
+            'video/mp4; codecs="avc1.530033"',
+            'video/mp4; codecs="avc1.530034"',
+            'video/mp4; codecs="avc1.53003c"',
+            'video/mp4; codecs="avc1.53003d"',
+            'video/mp4; codecs="avc1.53003e"',
+            'video/mp4; codecs="avc1.53003f"',
+            'video/mp4; codecs="avc1.530040"',
+            'video/mp4; codecs="avc1.530050"',
+            'video/mp4; codecs="avc1.53006e"',
+            'video/mp4; codecs="avc1.530085"',
+            'video/mp4; codecs="avc1.53040a"',
+            'video/mp4; codecs="avc1.53040b"',
+            'video/mp4; codecs="avc1.53040c"',
+            'video/mp4; codecs="avc1.53040d"',
+            'video/mp4; codecs="avc1.530414"',
+            'video/mp4; codecs="avc1.530415"',
+            'video/mp4; codecs="avc1.530416"',
+            'video/mp4; codecs="avc1.53041e"',
+            'video/mp4; codecs="avc1.53041f"',
+            'video/mp4; codecs="avc1.530420"',
+            'video/mp4; codecs="avc1.530428"',
+            'video/mp4; codecs="avc1.530429"',
+            'video/mp4; codecs="avc1.53042a"',
+            'video/mp4; codecs="avc1.530432"',
+            'video/mp4; codecs="avc1.530433"',
+            'video/mp4; codecs="avc1.530434"',
+            'video/mp4; codecs="avc1.53043c"',
+            'video/mp4; codecs="avc1.53043d"',
+            'video/mp4; codecs="avc1.53043e"',
+            'video/mp4; codecs="avc1.53043f"',
+            'video/mp4; codecs="avc1.530440"',
+            'video/mp4; codecs="avc1.530450"',
+            'video/mp4; codecs="avc1.53046e"',
+            'video/mp4; codecs="avc1.530485"',
+            'video/mp4; codecs="avc1.56000a"',
+            'video/mp4; codecs="avc1.56000b"',
+            'video/mp4; codecs="avc1.56000c"',
+            'video/mp4; codecs="avc1.56000d"',
+            'video/mp4; codecs="avc1.560014"',
+            'video/mp4; codecs="avc1.560015"',
+            'video/mp4; codecs="avc1.560016"',
+            'video/mp4; codecs="avc1.56001e"',
+            'video/mp4; codecs="avc1.56001f"',
+            'video/mp4; codecs="avc1.560020"',
+            'video/mp4; codecs="avc1.560028"',
+            'video/mp4; codecs="avc1.560029"',
+            'video/mp4; codecs="avc1.56002a"',
+            'video/mp4; codecs="avc1.560032"',
+            'video/mp4; codecs="avc1.560033"',
+            'video/mp4; codecs="avc1.560034"',
+            'video/mp4; codecs="avc1.56003c"',
+            'video/mp4; codecs="avc1.56003d"',
+            'video/mp4; codecs="avc1.56003e"',
+            'video/mp4; codecs="avc1.56003f"',
+            'video/mp4; codecs="avc1.560040"',
+            'video/mp4; codecs="avc1.560050"',
+            'video/mp4; codecs="avc1.56006e"',
+            'video/mp4; codecs="avc1.560085"',
+            'video/mp4; codecs="avc1.56040a"',
+            'video/mp4; codecs="avc1.56040b"',
+            'video/mp4; codecs="avc1.56040c"',
+            'video/mp4; codecs="avc1.56040d"',
+            'video/mp4; codecs="avc1.560414"',
+            'video/mp4; codecs="avc1.560415"',
+            'video/mp4; codecs="avc1.560416"',
+            'video/mp4; codecs="avc1.56041e"',
+            'video/mp4; codecs="avc1.56041f"',
+            'video/mp4; codecs="avc1.560420"',
+            'video/mp4; codecs="avc1.560428"',
+            'video/mp4; codecs="avc1.560429"',
+            'video/mp4; codecs="avc1.56042a"',
+            'video/mp4; codecs="avc1.560432"',
+            'video/mp4; codecs="avc1.560433"',
+            'video/mp4; codecs="avc1.560434"',
+            'video/mp4; codecs="avc1.56043c"',
+            'video/mp4; codecs="avc1.56043d"',
+            'video/mp4; codecs="avc1.56043e"',
+            'video/mp4; codecs="avc1.56043f"',
+            'video/mp4; codecs="avc1.560440"',
+            'video/mp4; codecs="avc1.560450"',
+            'video/mp4; codecs="avc1.56046e"',
+            'video/mp4; codecs="avc1.560485"',
+            'video/mp4; codecs="avc1.56100a"',
+            'video/mp4; codecs="avc1.56100b"',
+            'video/mp4; codecs="avc1.56100c"',
+            'video/mp4; codecs="avc1.56100d"',
+            'video/mp4; codecs="avc1.561014"',
+            'video/mp4; codecs="avc1.561015"',
+            'video/mp4; codecs="avc1.561016"',
+            'video/mp4; codecs="avc1.56101e"',
+            'video/mp4; codecs="avc1.56101f"',
+            'video/mp4; codecs="avc1.561020"',
+            'video/mp4; codecs="avc1.561028"',
+            'video/mp4; codecs="avc1.561029"',
+            'video/mp4; codecs="avc1.56102a"',
+            'video/mp4; codecs="avc1.561032"',
+            'video/mp4; codecs="avc1.561033"',
+            'video/mp4; codecs="avc1.561034"',
+            'video/mp4; codecs="avc1.56103c"',
+            'video/mp4; codecs="avc1.56103d"',
+            'video/mp4; codecs="avc1.56103e"',
+            'video/mp4; codecs="avc1.56103f"',
+            'video/mp4; codecs="avc1.561040"',
+            'video/mp4; codecs="avc1.561050"',
+            'video/mp4; codecs="avc1.56106e"',
+            'video/mp4; codecs="avc1.561085"',
+            'video/mp4; codecs="avc1.58000a"',
+            'video/mp4; codecs="avc1.58000b"',
+            'video/mp4; codecs="avc1.58000c"',
+            'video/mp4; codecs="avc1.58000d"',
+            'video/mp4; codecs="avc1.580014"',
+            'video/mp4; codecs="avc1.580015"',
+            'video/mp4; codecs="avc1.580016"',
+            'video/mp4; codecs="avc1.58001e"',
+            'video/mp4; codecs="avc1.58001f"',
+            'video/mp4; codecs="avc1.580020"',
+            'video/mp4; codecs="avc1.580028"',
+            'video/mp4; codecs="avc1.580029"',
+            'video/mp4; codecs="avc1.58002a"',
+            'video/mp4; codecs="avc1.580032"',
+            'video/mp4; codecs="avc1.580033"',
+            'video/mp4; codecs="avc1.580034"',
+            'video/mp4; codecs="avc1.58003c"',
+            'video/mp4; codecs="avc1.58003d"',
+            'video/mp4; codecs="avc1.58003e"',
+            'video/mp4; codecs="avc1.58003f"',
+            'video/mp4; codecs="avc1.580040"',
+            'video/mp4; codecs="avc1.580050"',
+            'video/mp4; codecs="avc1.58006e"',
+            'video/mp4; codecs="avc1.580085"',
+            'video/mp4; codecs="avc1.64000a"',
+            'video/mp4; codecs="avc1.64000b"',
+            'video/mp4; codecs="avc1.64000c"',
+            'video/mp4; codecs="avc1.64000d"',
+            'video/mp4; codecs="avc1.640014"',
+            'video/mp4; codecs="avc1.640015"',
+            'video/mp4; codecs="avc1.640016"',
+            'video/mp4; codecs="avc1.64001E, mp4a.40.2"',
+            'video/mp4; codecs="avc1.64001e"',
+            'video/mp4; codecs="avc1.64001f"',
+            'video/mp4; codecs="avc1.640020"',
+            'video/mp4; codecs="avc1.640028"',
+            'video/mp4; codecs="avc1.640029"',
+            'video/mp4; codecs="avc1.64002a"',
+            'video/mp4; codecs="avc1.640032"',
+            'video/mp4; codecs="avc1.640033"',
+            'video/mp4; codecs="avc1.640034"',
+            'video/mp4; codecs="avc1.64003c"',
+            'video/mp4; codecs="avc1.64003d"',
+            'video/mp4; codecs="avc1.64003e"',
+            'video/mp4; codecs="avc1.64003f"',
+            'video/mp4; codecs="avc1.640040"',
+            'video/mp4; codecs="avc1.640050"',
+            'video/mp4; codecs="avc1.64006e"',
+            'video/mp4; codecs="avc1.640085"',
+            'video/mp4; codecs="avc1.64080a"',
+            'video/mp4; codecs="avc1.64080b"',
+            'video/mp4; codecs="avc1.64080c"',
+            'video/mp4; codecs="avc1.64080d"',
+            'video/mp4; codecs="avc1.640814"',
+            'video/mp4; codecs="avc1.640815"',
+            'video/mp4; codecs="avc1.640816"',
+            'video/mp4; codecs="avc1.64081e"',
+            'video/mp4; codecs="avc1.64081f"',
+            'video/mp4; codecs="avc1.640820"',
+            'video/mp4; codecs="avc1.640828"',
+            'video/mp4; codecs="avc1.640829"',
+            'video/mp4; codecs="avc1.64082a"',
+            'video/mp4; codecs="avc1.640832"',
+            'video/mp4; codecs="avc1.640833"',
+            'video/mp4; codecs="avc1.640834"',
+            'video/mp4; codecs="avc1.64083c"',
+            'video/mp4; codecs="avc1.64083d"',
+            'video/mp4; codecs="avc1.64083e"',
+            'video/mp4; codecs="avc1.64083f"',
+            'video/mp4; codecs="avc1.640840"',
+            'video/mp4; codecs="avc1.640850"',
+            'video/mp4; codecs="avc1.64086e"',
+            'video/mp4; codecs="avc1.640885"',
+            'video/mp4; codecs="avc1.6e000a"',
+            'video/mp4; codecs="avc1.6e000b"',
+            'video/mp4; codecs="avc1.6e000c"',
+            'video/mp4; codecs="avc1.6e000d"',
+            'video/mp4; codecs="avc1.6e0014"',
+            'video/mp4; codecs="avc1.6e0015"',
+            'video/mp4; codecs="avc1.6e0016"',
+            'video/mp4; codecs="avc1.6e001e"',
+            'video/mp4; codecs="avc1.6e001f"',
+            'video/mp4; codecs="avc1.6e0020"',
+            'video/mp4; codecs="avc1.6e0028"',
+            'video/mp4; codecs="avc1.6e0029"',
+            'video/mp4; codecs="avc1.6e002a"',
+            'video/mp4; codecs="avc1.6e0032"',
+            'video/mp4; codecs="avc1.6e0033"',
+            'video/mp4; codecs="avc1.6e0034"',
+            'video/mp4; codecs="avc1.6e003c"',
+            'video/mp4; codecs="avc1.6e003d"',
+            'video/mp4; codecs="avc1.6e003e"',
+            'video/mp4; codecs="avc1.6e003f"',
+            'video/mp4; codecs="avc1.6e0040"',
+            'video/mp4; codecs="avc1.6e0050"',
+            'video/mp4; codecs="avc1.6e006e"',
+            'video/mp4; codecs="avc1.6e0085"',
+            'video/mp4; codecs="avc1.6e100a"',
+            'video/mp4; codecs="avc1.6e100b"',
+            'video/mp4; codecs="avc1.6e100c"',
+            'video/mp4; codecs="avc1.6e100d"',
+            'video/mp4; codecs="avc1.6e1014"',
+            'video/mp4; codecs="avc1.6e1015"',
+            'video/mp4; codecs="avc1.6e1016"',
+            'video/mp4; codecs="avc1.6e101e"',
+            'video/mp4; codecs="avc1.6e101f"',
+            'video/mp4; codecs="avc1.6e1020"',
+            'video/mp4; codecs="avc1.6e1028"',
+            'video/mp4; codecs="avc1.6e1029"',
+            'video/mp4; codecs="avc1.6e102a"',
+            'video/mp4; codecs="avc1.6e1032"',
+            'video/mp4; codecs="avc1.6e1033"',
+            'video/mp4; codecs="avc1.6e1034"',
+            'video/mp4; codecs="avc1.6e103c"',
+            'video/mp4; codecs="avc1.6e103d"',
+            'video/mp4; codecs="avc1.6e103e"',
+            'video/mp4; codecs="avc1.6e103f"',
+            'video/mp4; codecs="avc1.6e1040"',
+            'video/mp4; codecs="avc1.6e1050"',
+            'video/mp4; codecs="avc1.6e106e"',
+            'video/mp4; codecs="avc1.6e1085"',
+            'video/mp4; codecs="avc1.76000a"',
+            'video/mp4; codecs="avc1.76000b"',
+            'video/mp4; codecs="avc1.76000c"',
+            'video/mp4; codecs="avc1.76000d"',
+            'video/mp4; codecs="avc1.760014"',
+            'video/mp4; codecs="avc1.760015"',
+            'video/mp4; codecs="avc1.760016"',
+            'video/mp4; codecs="avc1.76001e"',
+            'video/mp4; codecs="avc1.76001f"',
+            'video/mp4; codecs="avc1.760020"',
+            'video/mp4; codecs="avc1.760028"',
+            'video/mp4; codecs="avc1.760029"',
+            'video/mp4; codecs="avc1.76002a"',
+            'video/mp4; codecs="avc1.760032"',
+            'video/mp4; codecs="avc1.760033"',
+            'video/mp4; codecs="avc1.760034"',
+            'video/mp4; codecs="avc1.76003c"',
+            'video/mp4; codecs="avc1.76003d"',
+            'video/mp4; codecs="avc1.76003e"',
+            'video/mp4; codecs="avc1.76003f"',
+            'video/mp4; codecs="avc1.760040"',
+            'video/mp4; codecs="avc1.760050"',
+            'video/mp4; codecs="avc1.76006e"',
+            'video/mp4; codecs="avc1.760085"',
+            'video/mp4; codecs="avc1.7a000a"',
+            'video/mp4; codecs="avc1.7a000b"',
+            'video/mp4; codecs="avc1.7a000c"',
+            'video/mp4; codecs="avc1.7a000d"',
+            'video/mp4; codecs="avc1.7a0014"',
+            'video/mp4; codecs="avc1.7a0015"',
+            'video/mp4; codecs="avc1.7a0016"',
+            'video/mp4; codecs="avc1.7a001e"',
+            'video/mp4; codecs="avc1.7a001f"',
+            'video/mp4; codecs="avc1.7a0020"',
+            'video/mp4; codecs="avc1.7a0028"',
+            'video/mp4; codecs="avc1.7a0029"',
+            'video/mp4; codecs="avc1.7a002a"',
+            'video/mp4; codecs="avc1.7a0032"',
+            'video/mp4; codecs="avc1.7a0033"',
+            'video/mp4; codecs="avc1.7a0034"',
+            'video/mp4; codecs="avc1.7a003c"',
+            'video/mp4; codecs="avc1.7a003d"',
+            'video/mp4; codecs="avc1.7a003e"',
+            'video/mp4; codecs="avc1.7a003f"',
+            'video/mp4; codecs="avc1.7a0040"',
+            'video/mp4; codecs="avc1.7a0050"',
+            'video/mp4; codecs="avc1.7a006e"',
+            'video/mp4; codecs="avc1.7a0085"',
+            'video/mp4; codecs="avc1.7a100a"',
+            'video/mp4; codecs="avc1.7a100b"',
+            'video/mp4; codecs="avc1.7a100c"',
+            'video/mp4; codecs="avc1.7a100d"',
+            'video/mp4; codecs="avc1.7a1014"',
+            'video/mp4; codecs="avc1.7a1015"',
+            'video/mp4; codecs="avc1.7a1016"',
+            'video/mp4; codecs="avc1.7a101e"',
+            'video/mp4; codecs="avc1.7a101f"',
+            'video/mp4; codecs="avc1.7a1020"',
+            'video/mp4; codecs="avc1.7a1028"',
+            'video/mp4; codecs="avc1.7a1029"',
+            'video/mp4; codecs="avc1.7a102a"',
+            'video/mp4; codecs="avc1.7a1032"',
+            'video/mp4; codecs="avc1.7a1033"',
+            'video/mp4; codecs="avc1.7a1034"',
+            'video/mp4; codecs="avc1.7a103c"',
+            'video/mp4; codecs="avc1.7a103d"',
+            'video/mp4; codecs="avc1.7a103e"',
+            'video/mp4; codecs="avc1.7a103f"',
+            'video/mp4; codecs="avc1.7a1040"',
+            'video/mp4; codecs="avc1.7a1050"',
+            'video/mp4; codecs="avc1.7a106e"',
+            'video/mp4; codecs="avc1.7a1085"',
+            'video/mp4; codecs="avc1.80000a"',
+            'video/mp4; codecs="avc1.80000b"',
+            'video/mp4; codecs="avc1.80000c"',
+            'video/mp4; codecs="avc1.80000d"',
+            'video/mp4; codecs="avc1.800014"',
+            'video/mp4; codecs="avc1.800015"',
+            'video/mp4; codecs="avc1.800016"',
+            'video/mp4; codecs="avc1.80001e"',
+            'video/mp4; codecs="avc1.80001f"',
+            'video/mp4; codecs="avc1.800020"',
+            'video/mp4; codecs="avc1.800028"',
+            'video/mp4; codecs="avc1.800029"',
+            'video/mp4; codecs="avc1.80002a"',
+            'video/mp4; codecs="avc1.800032"',
+            'video/mp4; codecs="avc1.800033"',
+            'video/mp4; codecs="avc1.800034"',
+            'video/mp4; codecs="avc1.80003c"',
+            'video/mp4; codecs="avc1.80003d"',
+            'video/mp4; codecs="avc1.80003e"',
+            'video/mp4; codecs="avc1.80003f"',
+            'video/mp4; codecs="avc1.800040"',
+            'video/mp4; codecs="avc1.800050"',
+            'video/mp4; codecs="avc1.80006e"',
+            'video/mp4; codecs="avc1.800085"',
+            'video/mp4; codecs="avc1.8a000a"',
+            'video/mp4; codecs="avc1.8a000b"',
+            'video/mp4; codecs="avc1.8a000c"',
+            'video/mp4; codecs="avc1.8a000d"',
+            'video/mp4; codecs="avc1.8a0014"',
+            'video/mp4; codecs="avc1.8a0015"',
+            'video/mp4; codecs="avc1.8a0016"',
+            'video/mp4; codecs="avc1.8a001e"',
+            'video/mp4; codecs="avc1.8a001f"',
+            'video/mp4; codecs="avc1.8a0020"',
+            'video/mp4; codecs="avc1.8a0028"',
+            'video/mp4; codecs="avc1.8a0029"',
+            'video/mp4; codecs="avc1.8a002a"',
+            'video/mp4; codecs="avc1.8a0032"',
+            'video/mp4; codecs="avc1.8a0033"',
+            'video/mp4; codecs="avc1.8a0034"',
+            'video/mp4; codecs="avc1.8a003c"',
+            'video/mp4; codecs="avc1.8a003d"',
+            'video/mp4; codecs="avc1.8a003e"',
+            'video/mp4; codecs="avc1.8a003f"',
+            'video/mp4; codecs="avc1.8a0040"',
+            'video/mp4; codecs="avc1.8a0050"',
+            'video/mp4; codecs="avc1.8a006e"',
+            'video/mp4; codecs="avc1.8a0085"',
+            'video/mp4; codecs="avc1.f4000a"',
+            'video/mp4; codecs="avc1.f4000b"',
+            'video/mp4; codecs="avc1.f4000c"',
+            'video/mp4; codecs="avc1.f4000d"',
+            'video/mp4; codecs="avc1.f40014"',
+            'video/mp4; codecs="avc1.f40015"',
+            'video/mp4; codecs="avc1.f40016"',
+            'video/mp4; codecs="avc1.f4001e"',
+            'video/mp4; codecs="avc1.f4001f"',
+            'video/mp4; codecs="avc1.f40020"',
+            'video/mp4; codecs="avc1.f40028"',
+            'video/mp4; codecs="avc1.f40029"',
+            'video/mp4; codecs="avc1.f4002a"',
+            'video/mp4; codecs="avc1.f40032"',
+            'video/mp4; codecs="avc1.f40033"',
+            'video/mp4; codecs="avc1.f40034"',
+            'video/mp4; codecs="avc1.f4003c"',
+            'video/mp4; codecs="avc1.f4003d"',
+            'video/mp4; codecs="avc1.f4003e"',
+            'video/mp4; codecs="avc1.f4003f"',
+            'video/mp4; codecs="avc1.f40040"',
+            'video/mp4; codecs="avc1.f40050"',
+            'video/mp4; codecs="avc1.f4006e"',
+            'video/mp4; codecs="avc1.f40085"',
+            'video/mp4; codecs="avc1.f4100a"',
+            'video/mp4; codecs="avc1.f4100b"',
+            'video/mp4; codecs="avc1.f4100c"',
+            'video/mp4; codecs="avc1.f4100d"',
+            'video/mp4; codecs="avc1.f41014"',
+            'video/mp4; codecs="avc1.f41015"',
+            'video/mp4; codecs="avc1.f41016"',
+            'video/mp4; codecs="avc1.f4101e"',
+            'video/mp4; codecs="avc1.f4101f"',
+            'video/mp4; codecs="avc1.f41020"',
+            'video/mp4; codecs="avc1.f41028"',
+            'video/mp4; codecs="avc1.f41029"',
+            'video/mp4; codecs="avc1.f4102a"',
+            'video/mp4; codecs="avc1.f41032"',
+            'video/mp4; codecs="avc1.f41033"',
+            'video/mp4; codecs="avc1.f41034"',
+            'video/mp4; codecs="avc1.f4103c"',
+            'video/mp4; codecs="avc1.f4103d"',
+            'video/mp4; codecs="avc1.f4103e"',
+            'video/mp4; codecs="avc1.f4103f"',
+            'video/mp4; codecs="avc1.f41040"',
+            'video/mp4; codecs="avc1.f41050"',
+            'video/mp4; codecs="avc1.f4106e"',
+            'video/mp4; codecs="avc1.f41085"',
+            'video/mp4; codecs="avc1x"',
+            'video/mp4; codecs="avc2"',
+            'video/mp4; codecs="avc3"',
+            'video/mp4; codecs="avc3.42001E"',
+            'video/mp4; codecs="avc4"',
+            'video/mp4; codecs="avcp"',
+            'video/mp4; codecs="bogus"',
+            'video/mp4; codecs="drac"',
+            'video/mp4; codecs="dvav"',
+            'video/mp4; codecs="dvhe"',
+            'video/mp4; codecs="encf"',
+            'video/mp4; codecs="encm"',
+            'video/mp4; codecs="encs"',
+            'video/mp4; codecs="enct"',
+            'video/mp4; codecs="encv"',
+            'video/mp4; codecs="fdp "',
+            'video/mp4; codecs="flac"',
+            'video/mp4; codecs="hev1"',
+            'video/mp4; codecs="hev1.1.6.L93.90"',
+            'video/mp4; codecs="hev1.1.6.L93.B0"',
+            'video/mp4; codecs="hvc1"',
+            'video/mp4; codecs="hvc1.1.6.L93.90"',
+            'video/mp4; codecs="hvc1.1.6.L93.B0"',
+            'video/mp4; codecs="hvt1"',
+            'video/mp4; codecs="ixse"',
+            'video/mp4; codecs="lavc1337"',
+            'video/mp4; codecs="lhe1"',
+            'video/mp4; codecs="lht1"',
+            'video/mp4; codecs="lhv1"',
+            'video/mp4; codecs="m2ts"',
+            'video/mp4; codecs="mett"',
+            'video/mp4; codecs="metx"',
+            'video/mp4; codecs="mjp2"',
+            'video/mp4; codecs="mlix"',
+            'video/mp4; codecs="mp4a.40.02"',
+            'video/mp4; codecs="mp4a.40.2"',
+            'video/mp4; codecs="mp4a.40.29"',
+            'video/mp4; codecs="mp4a.40.5"',
+            'video/mp4; codecs="mp4a.67"',
+            'video/mp4; codecs="mp4s"',
+            'video/mp4; codecs="mp4v"',
+            'video/mp4; codecs="mp4v.20.240, mp4a.40.2"',
+            'video/mp4; codecs="mp4v.20.8, mp4a.40.2"',
+            'video/mp4; codecs="mvc1"',
+            'video/mp4; codecs="mvc2"',
+            'video/mp4; codecs="mvc3"',
+            'video/mp4; codecs="mvc4"',
+            'video/mp4; codecs="mvd1"',
+            'video/mp4; codecs="mvd2"',
+            'video/mp4; codecs="mvd3"',
+            'video/mp4; codecs="mvd4"',
+            'video/mp4; codecs="oksd"',
+            'video/mp4; codecs="pm2t"',
+            'video/mp4; codecs="prtp"',
+            'video/mp4; codecs="resv"',
+            'video/mp4; codecs="rm2t"',
+            'video/mp4; codecs="rrtp"',
+            'video/mp4; codecs="rsrp"',
+            'video/mp4; codecs="rtmd"',
+            'video/mp4; codecs="rtp "',
+            'video/mp4; codecs="s263"',
+            'video/mp4; codecs="sm2t"',
+            'video/mp4; codecs="srtp"',
+            'video/mp4; codecs="stpp"',
+            'video/mp4; codecs="svc1"',
+            'video/mp4; codecs="svc2"',
+            'video/mp4; codecs="svcM"',
+            'video/mp4; codecs="tc64"',
+            'video/mp4; codecs="tmcd"',
+            'video/mp4; codecs="tx3g"',
+            'video/mp4; codecs="unid"',
+            'video/mp4; codecs="urim"',
+            'video/mp4; codecs="vc-1"',
+            'video/mp4; codecs="vp08"',
+            'video/mp4; codecs="vp09"',
+            'video/mp4; codecs="vp09.00.10.08"',
+            'video/mp4; codecs="vp09.00.50.08"',
+            'video/mp4; codecs="vp09.01.20.08.01"',
+            'video/mp4; codecs="vp09.01.20.08.01.01.01.01.00"',
+            'video/mp4; codecs="vp09.02.10.10.01.09.16.09.01"',
+            'video/mp4; codecs="wvtt"',
+            'video/mpeg',
+            'video/mpeg2',
+            'video/mpeg4',
+            'video/msvideo',
+            'video/ogg',
+            'video/ogg; codecs="dirac, flac"',
+            'video/ogg; codecs="dirac, vorbis"',
+            'video/ogg; codecs="flac"',
+            'video/ogg; codecs="opus"',
+            'video/ogg; codecs="speex"',
+            'video/ogg; codecs="theora"',
+            'video/ogg; codecs="theora, flac"',
+            'video/ogg; codecs="theora, speex"',
+            'video/ogg; codecs="theora, vorbis"',
+            'video/ogg; codecs="vp8"',
+            'video/quicktime',
+            'video/vnd.rn-realvideo',
+            'video/wavelet',
+            'video/webm',
+            'video/webm; codecs="av01.0.04M.08"',
+            'video/webm; codecs="vorbis"',
+            'video/webm; codecs="vorbis,vp9"',
+            'video/webm; codecs="vp09.02.10.08"',
+            'video/webm; codecs="vp8"',
+            'video/webm; codecs="vp8, opus"',
+            'video/webm; codecs="vp8, vorbis"',
+            'video/webm; codecs="vp8.0"',
+            'video/webm; codecs="vp8.0, vorbis"',
+            'video/webm; codecs="vp9"',
+            'video/webm; codecs="vp9, opus"',
+            'video/webm; codecs="vp9, vorbis"',
+            'video/x-dv; codecs="avc3.12345"',
+            'video/x-flv',
+            'video/x-la-asf',
+            'video/x-m4v',
+            'video/x-m4v; codecs="avc1.42AC23"',
+            'video/x-matroska',
+            'video/x-matroska; codecs="theora"',
+            'video/x-matroska; codecs="theora, vorbis"',
+            'video/x-mkv',
+            'video/x-mng',
+            'video/x-mpeg',
+            'video/x-mpeg2',
+            'video/x-ms-wmv',
+            'video/x-msvideo',
+            'video/x-theora',
+        ];
+        const result = [];
+        const videoEl = document.createElement('video');
+        const audioEl = new Audio();
+        const isMediaRecorderSupported = 'MediaRecorder' in window;
+
+        await smoothForeach(mimeTypes, 15, (type) => {
+            try {
+                const data = {
+                    mimeType: type,
+                };
+
+                const audioPlayType = audioEl.canPlayType(type);
+                const videoPlayType = videoEl.canPlayType(type);
+                const mediaSource = MediaSource.isTypeSupported(type);
+
+                // noinspection JSUnresolvedVariable
+                const mediaRecorder = isMediaRecorderSupported
+                    ? MediaRecorder.isTypeSupported(type)
+                    : false;
+
+                if (audioPlayType) {
+                    data.audioPlayType = audioPlayType;
+                }
+
+                if (videoPlayType) {
+                    data.videoPlayType = videoPlayType;
+                }
+
+                if (mediaSource) {
+                    data.mediaSource = mediaSource;
+                }
+
+                if (mediaRecorder) {
+                    data.mediaRecorder = mediaRecorder;
+                }
+
+                if (
+                    data.audioPlayType ||
+                    data.videoPlayType ||
+                    data.mediaSource ||
+                    data.mediaRecorder
+                ) {
+                    result.push(data);
+                }
+            } catch (_) {}
+        });
+
+        return result;
+    };
+
+    // mediaDevices
+    const dumpMediaDevices = async () => {
+        try {
+            return await navigator.mediaDevices.enumerateDevices();
+        } catch (_) {}
+
+        return null;
+    };
+
+    // battery
+    const dumpBattery = () => {
+        return new Promise(function (resolve) {
+            'getBattery' in navigator
+                ? navigator.getBattery().then(function (battery) {
+                      resolve({
+                          charging: battery.charging,
+                          chargingTime: battery.chargingTime,
+                          dischargingTime: battery.dischargingTime,
+                          level: battery.level,
+                      });
+                  })
+                : resolve({});
+        });
+    };
+
+    // rtcip
+    const dumpWebRTC = () => {
+        let _RTCPeerConnection =
+            window.RTCPeerConnection ||
+            window.mozRTCPeerConnection ||
+            window.webkitRTCPeerConnection;
+
+        return new Promise(function (resolve) {
+            const result = {};
+            setTimeout(function () {
+                resolve(result);
+            }, 3000);
+
+            try {
+                if (_RTCPeerConnection) {
+                    // get connection
+                    // noinspection JSUnusedLocalSymbols
+                    let connection = new _RTCPeerConnection({
+                        iceServers: [
+                            {
+                                urls: 'stun:stun.l.google.com:19302?transport=udp',
+                            },
+                        ],
+                    });
+
+                    // create channel
+                    connection.createDataChannel('google');
+
+                    // set local description
+                    connection
+                        .createOffer()
+                        .then((offer) => {
+                            connection.setLocalDescription(offer);
+
+                            // capabilities of RTCRtpSender / RTCRtpReceiver
+                            result.capabilities = {
+                                ...result.capabilities,
+                                sender: {
+                                    audio: JSON.parse(
+                                        JSON.stringify(
+                                            RTCRtpSender.getCapabilities(
+                                                'audio'
+                                            )
+                                        )
+                                    ),
+                                    video: JSON.parse(
+                                        JSON.stringify(
+                                            RTCRtpSender.getCapabilities(
+                                                'video'
+                                            )
+                                        )
+                                    ),
+                                },
+                                receiver: {
+                                    audio: JSON.parse(
+                                        JSON.stringify(
+                                            RTCRtpReceiver.getCapabilities(
+                                                'audio'
+                                            )
+                                        )
+                                    ),
+                                    video: JSON.parse(
+                                        JSON.stringify(
+                                            RTCRtpReceiver.getCapabilities(
+                                                'video'
+                                            )
+                                        )
+                                    ),
+                                },
+                            };
+                        })
+                        .catch((e) => e);
+
+                    // sdp
+                    connection
+                        .createOffer({
+                            offerToReceiveAudio: 1,
+                            offerToReceiveVideo: 1,
+                        })
+                        .then(
+                            (offer) =>
+                                (result.capabilities = {
+                                    ...result.capabilities,
+                                    sdp: JSON.parse(JSON.stringify(offer)),
+                                })
+                        )
+                        .catch((e) => e);
+
+                    connection.onicecandidate = (e) => {
+                        if (!e.candidate) {
+                            return;
+                        }
+
+                        result.localDescription = JSON.parse(
+                            JSON.stringify(e.target.localDescription)
+                        );
+
+                        // e.candidate
+                        result.candidate = {};
+
+                        for (const key in e.candidate) {
+                            const value = e.candidate[key];
+
+                            if (
+                                'string' === typeof value ||
+                                'number' === typeof value
+                            ) {
+                                result.candidate[key] = value;
+                            }
+                        }
+                    };
+                }
+            } catch (ignored) {}
+        });
+    };
+
+    // window.speechSynthesis.getVoices
+    const dumpVoices = () => {
+        return new Promise(async (resolve) => {
+            try {
+                const win = window;
+                const supported = 'speechSynthesis' in win;
+                supported && speechSynthesis.getVoices(); // warm up
+
+                // noinspection JSCheckFunctionSignatures
+                await new Promise(setTimeout).catch((e) => e);
+
+                if (!supported) {
+                    return resolve([]);
+                }
+
+                // inspired by https://github.com/abrahamjuliot/creepjs/blob/master/creep.js
+                let success = false;
+                const getVoices = () => {
+                    const data = win.speechSynthesis.getVoices();
+                    if (!data || !data.length) {
+                        return;
+                    }
+
+                    success = true;
+
+                    const voices = data.map((e) => ({
+                        default: e.default,
+                        lang: e.lang,
+                        localService: e.localService,
+                        name: e.name,
+                        voiceURI: e.voiceURI,
+                    }));
+
+                    return resolve(voices);
+                };
+
+                getVoices();
+                win.speechSynthesis.onvoiceschanged = getVoices; // Chrome support
+
+                // handle pending resolve
+                const wait = 1000;
+                setTimeout(() => {
+                    if (success) {
+                        return;
+                    }
+
+                    return resolve([]);
+                }, wait);
+            } catch (error) {
+                return resolve([]);
+            }
+        });
+    };
+
+    // default ComputedStyle
+    const dumpDefaultCS = async () => {
+        const frame = document.createElement('iframe');
+
+        // noinspection JSCheckFunctionSignatures
+        document.body.appendChild(frame);
+
+        const result = {};
+        const cs = frame.contentWindow.getComputedStyle(
+            frame.contentDocument.body
+        );
+        for (const key in cs) {
+            result[key] = cs[key];
+        }
+
+        frame.remove();
+
+        return result;
+    };
+
+    // keyboard
+    const dumpKeyboard = async () => {
+        if (!('keyboard' in navigator && navigator.keyboard)) {
+            return [];
+        }
+
+        const keys = [
+            'Sleep',
+            'WakeUp',
+            'KeyA',
+            'KeyB',
+            'KeyC',
+            'KeyD',
+            'KeyE',
+            'KeyF',
+            'KeyG',
+            'KeyH',
+            'KeyI',
+            'KeyJ',
+            'KeyK',
+            'KeyL',
+            'KeyM',
+            'KeyN',
+            'KeyO',
+            'KeyP',
+            'KeyQ',
+            'KeyR',
+            'KeyS',
+            'KeyT',
+            'KeyU',
+            'KeyV',
+            'KeyW',
+            'KeyX',
+            'KeyY',
+            'KeyZ',
+            'Digit1',
+            'Digit2',
+            'Digit3',
+            'Digit4',
+            'Digit5',
+            'Digit6',
+            'Digit7',
+            'Digit8',
+            'Digit9',
+            'Digit0',
+            'Enter',
+            'Escape',
+            'Backspace',
+            'Tab',
+            'Space',
+            'Minus',
+            'Equal',
+            'BracketLeft',
+            'BracketRight',
+            'Backslash',
+            'Semicolon',
+            'Quote',
+            'Backquote',
+            'Comma',
+            'Period',
+            'Slash',
+            'CapsLock',
+            'F1',
+            'F2',
+            'F3',
+            'F4',
+            'F5',
+            'F6',
+            'F7',
+            'F8',
+            'F9',
+            'F10',
+            'F11',
+            'F12',
+            'F13',
+            'F14',
+            'F15',
+            'F16',
+            'F17',
+            'F18',
+            'F19',
+            'F20',
+            'F21',
+            'F22',
+            'F23',
+            'F24',
+            'PrintScreen',
+            'ScrollLock',
+            'Pause',
+            'Insert',
+            'Home',
+            'PageUp',
+            'Delete',
+            'End',
+            'PageDown',
+            'ArrowRight',
+            'ArrowLeft',
+            'ArrowDown',
+            'ArrowUp',
+            'NumLock',
+            'Numpad1',
+            'Numpad2',
+            'Numpad3',
+            'Numpad4',
+            'Numpad5',
+            'Numpad6',
+            'Numpad7',
+            'Numpad8',
+            'Numpad9',
+            'Numpad0',
+            'NumpadDivide',
+            'NumpadMultiply',
+            'NumpadSubtract',
+            'NumpadAdd',
+            'NumpadEnter',
+            'NumpadDecimal',
+            'NumpadEqual',
+            'NumpadParenLeft',
+            'NumpadParenRight',
+            'IntlBackslash',
+            'ContextMenu',
+            'Power',
+            'Help',
+            'Undo',
+            'Cut',
+            'Copy',
+            'Paste',
+            'AudioVolumeMute',
+            'AudioVolumeUp',
+            'AudioVolumeDown',
+            'NumpadComma',
+            'IntlRo',
+            'KanaMode',
+            'IntlYen',
+            'Convert',
+            'NonConvert',
+            'Lang1',
+            'Lang2',
+            'Lang3',
+            'Lang4',
+            'ControlLeft',
+            'ShiftLeft',
+            'AltLeft',
+            'MetaLeft',
+            'ControlRight',
+            'ShiftRight',
+            'AltRight',
+            'MetaRight',
+            'MediaTrackNext',
+            'MediaTrackPrevious',
+            'MediaStop',
+            'Eject',
+            'MediaPlayPause',
+            'MediaSelect',
+            'LaunchMail',
+            'LaunchApp2',
+            'LaunchApp1',
+            'BrowserSearch',
+            'BrowserHome',
+            'BrowserBack',
+            'BrowserForward',
+            'BrowserStop',
+            'BrowserRefresh',
+            'BrowserFavorites',
+        ];
+        const keyboardLayoutMap = await navigator.keyboard.getLayoutMap();
+        return keys.reduce((acc, key) => {
+            acc[key] = keyboardLayoutMap.get(key);
+            return acc;
+        }, {});
+    };
+
+    // windowVersion
+    const dumpWindowVersion = async () => {
+        return Object.getOwnPropertyNames(window).filter(
+            (key) => !/_|\d{3,}/.test(key)
+        );
+    };
+
+    // htmlElementVersion
+    const dumpHtmlElementVersion = async () => {
+        const result = [];
+        for (const key in document.documentElement) {
+            result.push(key);
+        }
+
+        return result;
+    };
+
+    // permissions
+    const dumpPermissions = async () => {
+        // https://source.chromium.org/chromium/chromium/src/+/master:third_party/blink/renderer/modules/permissions/permission_descriptor.idl
+        const permissions = [
+            'storage-access',
+            'push',
+            'speaker',
+            'device-info',
+            'bluetooth',
+            'midi',
+            'background-fetch',
+            'background-sync',
+            'accelerometer',
+            'gyroscope',
+            'magnetometer',
+            'screen-wake-lock',
+            'clipboard',
+            'clipboard-read',
+            'clipboard-write',
+            'payment-handler',
+            'periodic-background-sync',
+            'geolocation',
+            'notifications',
+            'camera',
+            'microphone',
+            'display-capture',
+            'persistent-storage',
+            'ambient-light-sensor',
+            'accessibility-events',
+            'nfc',
+            'idle-detection',
+            'system-wake-lock',
+            'window-placement',
+            'font-access',
+        ];
+
+        const result = {};
+
+        await Promise.all(
+            permissions.map(
+                (e) =>
+                    new Promise((resolve) => {
+                        // noinspection JSCheckFunctionSignatures
+                        navigator.permissions
+                            .query({ name: e })
+                            .then(({ state }) => {
+                                result[e] = { state };
+                                resolve();
+                            })
+                            .catch((ex) => {
+                                result[e] = {
+                                    exType: ex.constructor.name,
+                                    msg: ex.message,
+                                };
+                                resolve();
+                            });
+                    })
+            )
+        );
+
+        return result;
+    };
+    
+
+
+    const dumpHighEntropyValues = async () => {
+        // Calls await navigator.userAgentData.getHighEntropyValues(['architecture','bitness','platformVersion','mobile','brands','fullVersionList'])
+        // Expected output sample
+        // {"architecture":"arm","bitness":"64","brands":[{"brand":"Chromium","version":"116"},{"brand":"Not)A;Brand","version":"24"},{"brand":"Google Chrome","version":"116"}],"fullVersionList":[{"brand":"Chromium","version":"116.0.5845.96"},{"brand":"Not)A;Brand","version":"24.0.0.0"},{"brand":"Google Chrome","version":"116.0.5845.96"}],"mobile":false,"platform":"macOS","platformVersion":"13.3.1"}
+        
+        if (!('userAgentData' in navigator && navigator.userAgentData)) {
+            return {};
+        }
+
+        const result = {};
+
+        try {
+            const data = await navigator.userAgentData.getHighEntropyValues([
+                'architecture',
+                'bitness',
+                'platformVersion',
+                'mobile',
+                'brands',
+                'fullVersionList',
+            ]);
+            for (const key in data) {
+                result[key] = data[key];
+            }
+        }
+        catch (e) {
+            console.warn(e);
+        }
+
+        return result;
+
+    }
+    // TODO: Audio fingerprint
+
+    // TODO: emoji fingerprint
+
+    // TODO: unicode fingerprint
+
+    // device descriptor
+    const dd = {};
+    await Promise.all([
+        setDDProp(dd, 'plugins', dumpPlugins),
+        setDDProp(dd, 'allFonts', dumpAllFonts),
+        setDDProp(dd, 'gpu', dumpGpu),
+        setDDProp(dd, 'navigator', dumpNavigatorProps),
+        setDDProp(dd, 'window', dumpWindowProps),
+        setDDProp(dd, 'document', dumpDocumentProps),
+        setDDProp(dd, 'screen', dumpScreenProps),
+        setDDProp(dd, 'webgl', dumpWebGL),
+        setDDProp(dd, 'webgl2', dumpWebGL2),
+        setDDProp(dd, 'mimeTypes', dumpMimeTypes),
+        setDDProp(dd, 'mediaDevices', dumpMediaDevices),
+        setDDProp(dd, 'defaultCS', dumpDefaultCS),
+        setDDProp(dd, 'battery', dumpBattery),
+        setDDProp(dd, 'voices', dumpVoices),
+        setDDProp(dd, 'webRTC', dumpWebRTC),
+        setDDProp(dd, 'keyboard', dumpKeyboard),
+        setDDProp(dd, 'windowVersion', dumpWindowVersion),
+        setDDProp(dd, 'htmlElementVersion', dumpHtmlElementVersion),
+        setDDProp(dd, 'permissions', dumpPermissions),
+        setDDProp(dd, 'highEntropyValues', dumpHighEntropyValues),
+    ]);
+
+    // upload fp
+    return JSON.stringify(dd);
+};
diff --git a/fingerprinting/evasions/BUILD.gn b/fingerprinting/evasions/BUILD.gn
new file mode 100644
index 0000000000..df33fd7feb
--- /dev/null
+++ b/fingerprinting/evasions/BUILD.gn
@@ -0,0 +1,25 @@
+import("//build/config/chrome_build.gni")
+
+source_set("evasions"){
+  output_name = "fingerprinting_evasions"
+  sources = [
+    "hook.h",
+    "hook.cc",
+    "hooks/webgl.cc",
+    "packer.h",
+    "packer.cc",
+    "export.h",
+    "v8.h",
+    "v8.cc"
+  ]
+
+  defines = [
+    "FINGERPRINTING_EVASIONS_IMPLEMENTATION",
+  ]
+
+  deps = [
+    "//base"
+    "//fingerprinting/utilities:v8"
+    "//v8"
+  ]
+}
diff --git a/fingerprinting/evasions/README.md b/fingerprinting/evasions/README.md
new file mode 100644
index 0000000000..d375960fbf
--- /dev/null
+++ b/fingerprinting/evasions/README.md
@@ -0,0 +1,35 @@
+## Definition 
+
+Evasions are monkey-patches targeting a specific JavaScript API feature (eg WebGL, WebAudio, etc). They are inspired to puppeteer-extra-plugin-stealth/evasions*
+
+
+
+## Implementation
+
+Each evasion is a `Hook`. In JavaScript terms, it translates to a callable [function].
+
+An isolated V8 script execution context is created in which the monkey-patching process executes. This ensures that our patch utilities are not exposed to the global context
+
+
+## Workflow for deploying the patch
+
+
+- **Establish a new v8::Context**: Create a new, isolated V8 context for your private scope where you can expose native functions.
+  
+- **Create an ObjectTemplate**: Define a v8::ObjectTemplate to represent the sandboxed global object for the new context.
+
+- **Bind PatchValue to the Object**: Attach `PatchValue` to the object template so that it can be accessed within the isolated context, but no association is created with the global scope.
+
+- **Instantiate the Context with Object**: Initialize the new v8::Context with the object template.
+
+- **Engage Scoped Context Execution**: Use `v8::Context::Scope` to enter the local context before executing any JavaScript.
+
+- **Introduce Native Function**:
+  - Use `v8::FunctionTemplate::New(isolate, PatchValue)` to expose the native `PatchValue` function to JavaScript in this private scope.
+  
+- **Wrap and Inject JavaScript Code**: Compile and execute the JavaScript code within this new context ensuring it calls `PatchValue` appropriately.
+
+- **Execute Script in Context**: Compile and run your JavaScript code within the newly created context where `PatchValue` is visible.
+
+
+
diff --git a/fingerprinting/evasions/export.h b/fingerprinting/evasions/export.h
new file mode 100644
index 0000000000..d5bf7ef361
--- /dev/null
+++ b/fingerprinting/evasions/export.h
@@ -0,0 +1,26 @@
+#ifndef FINGERPRINTING_EVASIONS_EXPORT_H_
+#define FINGERPRINTING_EVASIONS_EXPORT_H_
+
+// Existing Class Export Logic
+#if defined(COMPONENT_BUILD)
+#if defined(WIN32)
+
+#if defined(FINGERPRINTING_EVASIONS_IMPLEMENTATION)
+#define FINGERPRINTING_EVASIONS_EXPORT __declspec(dllexport)
+#else
+#define FINGERPRINTING_EVASIONS_EXPORT __declspec(dllimport)
+#endif  // defined(FINGERPRINTING_EVASIONS_IMPLEMENTATION)
+
+#else  // defined(WIN32)
+#if defined(FINGERPRINTING_EVASIONS_IMPLEMENTATION)
+#define FINGERPRINTING_EVASIONS_EXPORT __attribute__((visibility("default")))
+#else
+#define FINGERPRINTING_EVASIONS_EXPORT
+#endif
+
+#endif
+#else  // defined(COMPONENT_BUILD)
+#define FINGERPRINTING_EVASIONS_EXPORT
+#endif
+
+#endif  // FINGERPRINTING_EVASIONS_EXPORT_H_
diff --git a/fingerprinting/evasions/hook.cc b/fingerprinting/evasions/hook.cc
new file mode 100644
index 0000000000..4039675050
--- /dev/null
+++ b/fingerprinting/evasions/hook.cc
@@ -0,0 +1,40 @@
+#include "fingerprinting/evasions/hook.h"
+#include "v8/include/v8-context.h"
+namespace fingerprinting {
+namespace evasions {
+
+
+typedef std::function<std::unique_ptr<Hook>> HookConstructor;
+
+std::string Hook::get_definition() {
+  /*
+   * Geneerates the JavaScript definition of the "hook" function
+   * A random name will be generated for
+   */
+  return std::format("{} = function(){{ {} }};", this->signature,
+                     this->get_impl());
+}
+
+std::string Hook::get_iife() {
+  return std::format("({})()", this->get_definition());
+}
+
+std::unique_ptr<Hook> HookFactory::Create(const std::string& key) {
+  auto it = GetRegistry().find(key);
+  if (it != GetRegistry().end()) {
+    return it->second();
+  }
+  return nullptr;
+}
+
+void HookFactory::Register(const std::string& key, HookConstructor constructor) {
+    GetRegistry()[key] = constructor;
+}
+std::map<std::string, HookConstructor>& HookFactory::GetRegistry() {
+    static std::map<std::string, HookConstructor> registry;
+    return registry;
+}
+
+
+}  // namespace evasions
+}  // namespace fingerprinting
diff --git a/fingerprinting/evasions/hook.h b/fingerprinting/evasions/hook.h
new file mode 100644
index 0000000000..c98ba552ad
--- /dev/null
+++ b/fingerprinting/evasions/hook.h
@@ -0,0 +1,99 @@
+#ifndef FINGERPRINTING_EVASIONS_HOOK_H_
+#define FINGERPRINTING_EVASIONS_HOOK_H_
+
+#include <format>
+#include <random>
+#include <string>
+#include <map>
+#include "v8/include/v8.h"
+
+namespace fingerprinting {
+namespace evasions {
+
+
+enum HookTargetType {
+  PAGE,
+  WORKER,
+  SHARED_WORKER,
+};
+
+struct HookTarget {
+  // Where the hook will inject / bound
+  HookTargetType type;
+
+  // We are safe to store a reference since this is ephemeral
+  v8::Local<v8::Context> context;
+
+  HookTarget(HookTargetType type, v8::Local<v8::Context> context) {
+    this->type = type;
+    this->context = context;
+  }
+};
+
+class Hook {
+  /*
+   * Each hook represents a patch for a specific JS feature API
+   * (e.g. WebGL, Canvas, etc.) A hook instance binds with a
+   * specific target (e.g. Worker, Window, etc.)
+   */
+ public:
+
+  explicit Hook(HookTarget target)
+      : signature("f" + std::to_string(rand() % 1000000000000 + 100000000000)),
+        target(target) {}
+  Hook() = default;
+  /*
+   * An ephemeral function name that will represent the hook
+   * No parameters are defined: in JavaScript, arguments can be referenced via
+   * builtin `arguments` variable (e.g. arguments[0], arguments[1], etc.)
+   */
+  std::string signature;
+
+  HookTarget target;
+
+  // Returns the definition, but not the invocation
+  std::string get_definition();
+
+
+  // Returns immediately-invoked function expression (IIFE)
+  std::string get_iife();
+
+  virtual std::string codename();
+
+  /*
+   * The implementation [body inner part] of the the hook function definition
+   * (aka routine) This is where the actual patch logic is defined by
+   * implementors of `Hook` (subclasses)
+   */
+  virtual std::string get_impl();
+};
+
+
+typedef std::function<std::unique_ptr<Hook>()> HookConstructor;
+
+
+/*
+ * HookFactory is a factory class that creates Hook instances
+ * based on a given key (e.g. "webgl", "canvas", etc.)
+ * The key is used to lookup the registry of Hook constructors
+ * (i.e. HookFactory::GetRegistry())
+ * Yeah, I mixed factory & model in the same file, so what?
+ */
+class HookFactory {
+public:
+
+    static void Register(const std::string& key, HookConstructor constructor);
+    static std::unique_ptr<Hook> Create(const std::string& key);
+    static std::map<std::string, HookConstructor>& GetRegistry();
+
+};
+// Macro to define a self-registering hook
+#define REGISTER_HOOK(name, type) \
+    static bool _hook_##name##_registered = \
+        (HookFactory::Register(#name, []{ return std::make_unique<type>(); }), true);
+
+
+}  // namespace evasions
+}  // namespace fingerprinting
+
+#endif  // FINGERPRINTING_EVASIONS_HOOK_H_
diff --git a/fingerprinting/evasions/hooks/webgl.cc b/fingerprinting/evasions/hooks/webgl.cc
new file mode 100644
index 0000000000..f26b0fd04c
--- /dev/null
+++ b/fingerprinting/evasions/hooks/webgl.cc
@@ -0,0 +1,23 @@
+#ifndef WEBGL_HOOK
+#define WEBGL_HOOK
+
+#include "fingerprinting/evasions/hook.h"
+namespace fingerprinting {
+namespace evasions {
+
+class hWebGL final : public Hook {
+  using Hook::Hook;
+  std::string codename() override { return "webgl"; }
+  std::string get_impl() override {
+    return R"(
+        console.info("WebGL patch enabled for target. Argumets: ", arguments);
+    )";
+  }
+};
+
+REGISTER_HOOK(webgl, hWebGL)
+
+
+}  // namespace evasions
+}  // namespace fingerprinting
+#endif  // WEBGL_HOOK
diff --git a/fingerprinting/evasions/packer.cc b/fingerprinting/evasions/packer.cc
new file mode 100644
index 0000000000..6cf690633c
--- /dev/null
+++ b/fingerprinting/evasions/packer.cc
@@ -0,0 +1,40 @@
+#include "fingerprinting/evasions/packer.h"
+#include <vector>
+#include "fingerprinting/evasions/hook.h"
+#include "fingerprinting/evasions/hooks/utilities.cc"
+#include "fingerprinting/evasions/hooks/webgl.cc"
+#include "fingerprinting/utilities/v8.h"
+#include "v8/include/v8.h"
+
+namespace fingerprinting {
+namespace evasions {
+
+std::unique_ptr<Package> Package::Pack(HookTargetType target, std::set<std::string>& filters) {
+  // Returns a compiled, ready-to-inject JS function string
+  // Filters are the evasions to disable
+  auto pack = std::make_unique<Package>(target);
+
+  for (auto& hook_descriptor : HookFactory::GetRegistry()) {
+    const std::string& name = hook_descriptor.first;
+
+    if (filters.find(name) != filters.end()) {
+      // Skip disabled evasions
+      continue;
+    }
+
+    std::unique_ptr<Hook> hook = HookFactory::Create(name);
+
+    if (hook == nullptr) {
+      continue;
+    }
+    
+    pack->Register(hook);
+  }
+
+  return pack;
+}
+
+
+}  // namespace evasions
+
+}  // namespace fingerprinting
diff --git a/fingerprinting/evasions/packer.h b/fingerprinting/evasions/packer.h
new file mode 100644
index 0000000000..effaf39120
--- /dev/null
+++ b/fingerprinting/evasions/packer.h
@@ -0,0 +1,24 @@
+#include <set>
+#include <string>
+#include "fingerprinting/evasions/export.h"
+#include "fingerprinting/evasions/hook.h"
+namespace fingerprinting {
+namespace evasions {
+
+class FINGERPRINTING_EVASIONS_EXPORT Package {
+  /*
+   * Represents a packed collection of evasions ready to run as-a-script
+   */
+
+ public:
+  HookTarget target;
+  explicit Package(HookTargetType target);
+  void Register(std::unique_ptr<Hook> hook);
+  void Inject(v8::Local<v8::Context> context);
+
+  static std::unique_ptr<Package> Pack(HookTargetType target,
+                                       std::set<std::string>& filters);
+};
+
+}  // namespace evasions
+}  // namespace fingerprinting
diff --git a/fingerprinting/export.h b/fingerprinting/export.h
new file mode 100644
index 0000000000..bfff0a7273
--- /dev/null
+++ b/fingerprinting/export.h
@@ -0,0 +1,22 @@
+#ifndef FINGERPRINTING_EXPORT_H_
+#define FINGERPRINTING_EXPORT_H_
+
+// Existing Class Export Logic
+#if defined(WIN32)
+
+#if defined(FINGERPRINTING_IMPLEMENTATION)
+#define FINGERPRINTING_EXPORT __declspec(dllexport)
+#else
+#define FINGERPRINTING_EXPORT __declspec(dllimport)
+#endif  // defined(FINGERPRINTING_IMPLEMENTATION)
+
+#else  // defined(WIN32)
+#if defined(FINGERPRINTING_IMPLEMENTATION)
+#define FINGERPRINTING_EXPORT __attribute__((visibility("default")))
+#else
+#define FINGERPRINTING_EXPORT
+#endif
+
+#endif
+
+#endif  // FINGERPRINTING_EXPORT_H_
diff --git a/fingerprinting/fingerprint.h b/fingerprinting/fingerprint.h
new file mode 100644
index 0000000000..5ec5060248
--- /dev/null
+++ b/fingerprinting/fingerprint.h
@@ -0,0 +1,28 @@
+#ifndef FINGERPRINTING_FINGERPRINT_H_
+#define FINGERPRINTING_FINGERPRINT_H_
+
+#include <map>
+#include <vector>
+
+#include "base/values.h"
+
+
+#include "third_party/abseil-cpp/absl/types/optional.h"
+
+#include "fingerprinting/export.h"
+
+namespace fingerprinting {
+
+using Val = base::Value;
+
+class FINGERPRINTING_EXPORT IFingerprint {
+ public:
+
+  virtual bool Find(std::vector<std::string>&& keys, Val*& out) = 0;
+  virtual bool Find(std::vector<std::string>&& keys) = 0;
+
+};
+
+}  // namespace fingerprinting
+
+#endif  // FINGERPRINTING_FINGERPRINT_H_
diff --git a/fingerprinting/fingerprint_impl.cc b/fingerprinting/fingerprint_impl.cc
new file mode 100644
index 0000000000..24eded8b15
--- /dev/null
+++ b/fingerprinting/fingerprint_impl.cc
@@ -0,0 +1,121 @@
+#include <vector>
+#include "base/json/json_reader.h"
+#include "base/logging.h"
+
+#include "fingerprinting/fingerprint_impl.h"
+
+namespace fingerprinting{
+
+
+
+  Fingerprint::Fingerprint(Fingerprint&& other) = default;
+  Fingerprint& Fingerprint::operator=(Fingerprint&& other) {
+      if (this != &other) {
+          IFingerprint::operator=(std::move(other));  // Move-assign the virtual base
+          // Move-assign other members here, e.g.,
+          value_ = std::move(other.value_);
+          cache_ = std::move(other.cache_);
+      }
+      return *this;
+  }
+  // Destructor
+  Fingerprint::~Fingerprint() = default;
+  Fingerprint::Fingerprint(Val& value) { value_ = std::move(value); }
+
+  Fingerprint::Fingerprint(Val&& value) { value_ = std::move(value); }
+  bool Fingerprint::Find(std::vector<std::string>&& keys) {
+    /** Only checks for existency */
+    Val* out = nullptr;
+    return Find(std::move(keys), out);
+  }
+
+
+  bool Fingerprint::Find(std::vector<std::string>&& keys, Val*& out) {
+    /**
+     * Utility to search for nested JSON values in the Fingerprint dictionary.
+     * Usage:
+     *
+     * Val* out = nullptr;
+    */
+    std::size_t hash = hash_keys(keys);
+
+    if (find_in_cache(hash, out)) {
+      LOG(ERROR) << "Got from cache";
+      return true;
+    }
+
+    LOG(ERROR) << "Not in cache";
+
+    // Iterate through the dictionary tree
+    Val* cursor = &value_;
+    if (!find_(keys, cursor)) {
+      return false;
+    }
+    cache_.emplace(std::make_pair(hash, cursor));
+    out = cursor;
+    return true;
+  }
+
+  std::size_t Fingerprint::hash_keys(std::vector<std::string>& keys) {
+    std::size_t hash = 0;
+    for (const auto& key : keys) {
+      hash ^= std::hash<std::string>{}(key) + 0x9e3779b9 + (hash << 6) +
+              (hash >> 2);
+    }
+    return hash;
+  }
+
+  bool Fingerprint::find_in_cache(const std::size_t& hash, Val*& out) {
+    auto it = cache_.find(hash);
+    if (it != cache_.end()) {
+      // out should point to it->second's address
+      out = it->second;
+      return true;
+    }
+    return false;
+  }
+
+
+  bool Fingerprint::find_(std::vector<std::string>& keys, Val*& cur) {
+    if (cur == nullptr) {
+      return false;
+    }
+
+    if (keys.empty()) {
+      return true;
+    }
+
+    std::string key = keys.front();
+    keys.erase(keys.begin());
+
+    if (!cur->is_dict()) {
+      // We have found a non-dictionary object in the tree, hence we can't
+      // iterate over it.
+      cur = nullptr;
+      return false;
+    }
+
+    Val::Dict& dict = cur->GetDict();
+
+    cur = dict.Find(key);  // Change to appropriate find method
+
+    return find_(keys, cur);
+  }
+
+
+
+  bool Fingerprint::FromString(const std::string& fingerprint_str, std::unique_ptr<Fingerprint>& out ) {
+    absl::optional<Val> fp_maybe = base::JSONReader::Read(fingerprint_str);
+
+
+    if (!fp_maybe.has_value()) {
+      return false;
+    }
+
+    Val& fp_val = fp_maybe.value();
+
+    out = std::make_unique<Fingerprint>(std::move(fp_val));
+
+    return true;
+  }
+}
diff --git a/fingerprinting/fingerprint_impl.h b/fingerprinting/fingerprint_impl.h
new file mode 100644
index 0000000000..9b81a92198
--- /dev/null
+++ b/fingerprinting/fingerprint_impl.h
@@ -0,0 +1,51 @@
+#ifndef FINGERPRINTING_FINGERPRINT_IMPL_H_
+#define FINGERPRINTING_FINGERPRINT_IMPL_H_
+
+#include <vector>
+
+#include "base/values.h"
+
+#include "fingerprinting/export.h"
+
+#include "fingerprinting/fingerprint.h"
+#include "fingerprinting/mixins/user-agent.h"
+
+namespace fingerprinting {
+
+
+class FINGERPRINTING_EXPORT Fingerprint final : public UAMixin,
+                                          protected virtual IFingerprint {
+  public:
+
+
+
+  Fingerprint& operator=(Fingerprint&& other);
+  Fingerprint(Fingerprint&& other);
+
+  // Destructor
+  ~Fingerprint();
+  Fingerprint(Val& value);
+
+  Fingerprint(Val&& value);
+
+
+  bool Find(std::vector<std::string>&& keys, Val*& out) override;
+  bool Find(std::vector<std::string>&& keys) override;
+  static bool FromString(const std::string& fingerprint_str, std::unique_ptr<Fingerprint>& out );
+
+
+
+ private:
+  Val value_;
+  std::unordered_map<std::size_t, Val*> cache_;
+
+  std::size_t hash_keys(std::vector<std::string>& keys);
+
+  bool find_in_cache(const std::size_t& hash, Val*& out);
+
+  bool find_(std::vector<std::string>& keys, Val*&);
+};
+
+}  // namespace fingerprinting
+
+#endif  // FINGERPRINTING_FINGERPRINT_IMPL_H_
diff --git a/fingerprinting/fp.json b/fingerprinting/fp.json
new file mode 100644
index 0000000000..44a9cbfd42
--- /dev/null
+++ b/fingerprinting/fp.json
@@ -0,0 +1 @@
+{"gpu": {"vendor": "Google Inc. (Apple)", "renderer": "ANGLE (Apple, Apple M2 Pro, OpenGL 4.1)"}, "webgl": {"params": {"2849": {"type": "Number", "value": 1}, "2884": {"type": "", "value": false}, "2885": {"type": "Number", "value": 1029}, "2886": {"type": "Number", "value": 2305}, "2928": {"type": "Float32Array", "value": {"0": 0, "1": 1}}, "2929": {"type": "", "value": false}, "2930": {"type": "Boolean", "value": true}, "2931": {"type": "Number", "value": 1}, "2932": {"type": "Number", "value": 513}, "2960": {"type": "", "value": false}, "2961": {"type": "", "value": 0}, "2962": {"type": "Number", "value": 519}, "2963": {"type": "Number", "value": 2147483647}, "2964": {"type": "Number", "value": 7680}, "2965": {"type": "Number", "value": 7680}, "2966": {"type": "Number", "value": 7680}, "2967": {"type": "", "value": 0}, "2968": {"type": "Number", "value": 2147483647}, "2978": {"type": "Int32Array", "value": {"0": 0, "1": 0, "2": 300, "3": 150}}, "3024": {"type": "Boolean", "value": true}, "3042": {"type": "", "value": false}, "3088": {"type": "Int32Array", "value": {"0": 0, "1": 0, "2": 300, "3": 150}}, "3089": {"type": "", "value": false}, "3106": {"type": "Float32Array", "value": {"0": 0, "1": 0, "2": 0, "3": 0}}, "3107": {"type": "Array", "value": [true, true, true, true]}, "3317": {"type": "Number", "value": 4}, "3333": {"type": "Number", "value": 4}, "3379": {"type": "Number", "value": 16384}, "3386": {"type": "Int32Array", "value": {"0": 16384, "1": 16384}}, "3408": {"type": "Number", "value": 4}, "3410": {"type": "Number", "value": 8}, "3411": {"type": "Number", "value": 8}, "3412": {"type": "Number", "value": 8}, "3413": {"type": "Number", "value": 8}, "3414": {"type": "Number", "value": 24}, "3415": {"type": "", "value": 0}, "7936": {"type": "String", "value": "WebKit"}, "7937": {"type": "String", "value": "WebKit WebGL"}, "7938": {"type": "String", "value": "WebGL 1.0 (OpenGL ES 2.0 Chromium)"}, "10752": {"type": "", "value": 0}, "32773": {"type": "Float32Array", "value": {"0": 0, "1": 0, "2": 0, "3": 0}}, "32777": {"type": "Number", "value": 32774}, "32823": {"type": "", "value": false}, "32824": {"type": "", "value": 0}, "32873": {"type": "", "value": null}, "32883": {"type": "", "value": null}, "32936": {"type": "Number", "value": 1}, "32937": {"type": "Number", "value": 4}, "32938": {"type": "Number", "value": 1}, "32939": {"type": "", "value": false}, "32968": {"type": "", "value": 0}, "32969": {"type": "Number", "value": 1}, "32970": {"type": "", "value": 0}, "32971": {"type": "Number", "value": 1}, "33170": {"type": "Number", "value": 4352}, "33901": {"type": "Float32Array", "value": {"0": 1, "1": 64}}, "33902": {"type": "Float32Array", "value": {"0": 1, "1": 1}}, "34016": {"type": "Number", "value": 33984}, "34024": {"type": "Number", "value": 16384}, "34045": {"type": "", "value": null}, "34047": {"type": "Number", "value": 16}, "34068": {"type": "", "value": null}, "34076": {"type": "Number", "value": 16384}, "34467": {"type": "Uint32Array", "value": {}}, "34816": {"type": "Number", "value": 519}, "34817": {"type": "Number", "value": 7680}, "34818": {"type": "Number", "value": 7680}, "34819": {"type": "Number", "value": 7680}, "34852": {"type": "", "value": null}, "34877": {"type": "Number", "value": 32774}, "34921": {"type": "Number", "value": 16}, "34930": {"type": "Number", "value": 16}, "34964": {"type": "", "value": null}, "34965": {"type": "", "value": null}, "35071": {"type": "", "value": null}, "35076": {"type": "", "value": null}, "35077": {"type": "", "value": null}, "35371": {"type": "", "value": null}, "35373": {"type": "", "value": null}, "35374": {"type": "", "value": null}, "35375": {"type": "", "value": null}, "35376": {"type": "", "value": null}, "35377": {"type": "", "value": null}, "35379": {"type": "", "value": null}, "35380": {"type": "", "value": null}, "35657": {"type": "", "value": null}, "35658": {"type": "", "value": null}, "35659": {"type": "", "value": null}, "35660": {"type": "Number", "value": 16}, "35661": {"type": "Number", "value": 32}, "35724": {"type": "String", "value": "WebGL GLSL ES 1.0 (OpenGL ES GLSL ES 1.0 Chromium)"}, "35725": {"type": "", "value": null}, "35968": {"type": "", "value": null}, "35978": {"type": "", "value": null}, "35979": {"type": "", "value": null}, "36003": {"type": "", "value": 0}, "36004": {"type": "Number", "value": 2147483647}, "36005": {"type": "Number", "value": 2147483647}, "36006": {"type": "", "value": null}, "36007": {"type": "", "value": null}, "36063": {"type": "", "value": null}, "36183": {"type": "", "value": null}, "36347": {"type": "Number", "value": 1024}, "36348": {"type": "Number", "value": 31}, "36349": {"type": "Number", "value": 1024}, "37154": {"type": "", "value": null}, "37157": {"type": "", "value": null}, "37440": {"type": "", "value": false}, "37441": {"type": "", "value": false}, "37443": {"type": "Number", "value": 37444}}, "maxAnisotropy": 16, "contextAttributes": {"alpha": true, "depth": true, "stencil": false, "antialias": true, "xrCompatible": false, "desynchronized": false, "powerPreference": "default", "premultipliedAlpha": true, "preserveDrawingBuffer": false, "failIfMajorPerformanceCaveat": false}, "supportedExtensions": ["ANGLE_instanced_arrays", "EXT_blend_minmax", "EXT_color_buffer_half_float", "EXT_disjoint_timer_query", "EXT_float_blend", "EXT_frag_depth", "EXT_shader_texture_lod", "EXT_texture_compression_rgtc", "EXT_texture_filter_anisotropic", "EXT_sRGB", "KHR_parallel_shader_compile", "OES_element_index_uint", "OES_fbo_render_mipmap", "OES_standard_derivatives", "OES_texture_float", "OES_texture_float_linear", "OES_texture_half_float", "OES_texture_half_float_linear", "OES_vertex_array_object", "WEBGL_color_buffer_float", "WEBGL_compressed_texture_s3tc", "WEBGL_compressed_texture_s3tc_srgb", "WEBGL_debug_renderer_info", "WEBGL_debug_shaders", "WEBGL_depth_texture", "WEBGL_draw_buffers", "WEBGL_lose_context", "WEBGL_multi_draw"], "shaderPrecisionFormats": [{"r": {"rangeMax": 127, "rangeMin": 127, "precision": 23}, "shaderType": 35633, "precisionType": 36338}, {"r": {"rangeMax": 127, "rangeMin": 127, "precision": 23}, "shaderType": 35633, "precisionType": 36337}, {"r": {"rangeMax": 127, "rangeMin": 127, "precision": 23}, "shaderType": 35633, "precisionType": 36336}, {"r": {"rangeMax": 30, "rangeMin": 31, "precision": 0}, "shaderType": 35633, "precisionType": 36341}, {"r": {"rangeMax": 30, "rangeMin": 31, "precision": 0}, "shaderType": 35633, "precisionType": 36340}, {"r": {"rangeMax": 30, "rangeMin": 31, "precision": 0}, "shaderType": 35633, "precisionType": 36339}, {"r": {"rangeMax": 127, "rangeMin": 127, "precision": 23}, "shaderType": 35632, "precisionType": 36338}, {"r": {"rangeMax": 127, "rangeMin": 127, "precision": 23}, "shaderType": 35632, "precisionType": 36337}, {"r": {"rangeMax": 127, "rangeMin": 127, "precision": 23}, "shaderType": 35632, "precisionType": 36336}, {"r": {"rangeMax": 30, "rangeMin": 31, "precision": 0}, "shaderType": 35632, "precisionType": 36341}, {"r": {"rangeMax": 30, "rangeMin": 31, "precision": 0}, "shaderType": 35632, "precisionType": 36340}, {"r": {"rangeMax": 30, "rangeMin": 31, "precision": 0}, "shaderType": 35632, "precisionType": 36339}]}, "screen": {"width": 1728, "height": 1117, "availTop": 38, "availLeft": 0, "availWidth": 1728, "colorDepth": 30, "pixelDepth": 30, "availHeight": 1079}, "voices": [{"lang": "en-GB", "name": "Daniel", "default": true, "voiceURI": "Daniel", "localService": true}, {"lang": "en-US", "name": "Albert", "default": false, "voiceURI": "Albert", "localService": true}, {"lang": "it-IT", "name": "Alice", "default": false, "voiceURI": "Alice", "localService": true}, {"lang": "sv-SE", "name": "Alva", "default": false, "voiceURI": "Alva", "localService": true}, {"lang": "fr-CA", "name": "Amélie", "default": false, "voiceURI": "Amélie", "localService": true}, {"lang": "ms-MY", "name": "Amira", "default": false, "voiceURI": "Amira", "localService": true}, {"lang": "de-DE", "name": "Anna", "default": false, "voiceURI": "Anna", "localService": true}, {"lang": "en-US", "name": "Bad News", "default": false, "voiceURI": "Bad News", "localService": true}, {"lang": "en-US", "name": "Bahh", "default": false, "voiceURI": "Bahh", "localService": true}, {"lang": "en-US", "name": "Bells", "default": false, "voiceURI": "Bells", "localService": true}, {"lang": "en-US", "name": "Boing", "default": false, "voiceURI": "Boing", "localService": true}, {"lang": "en-US", "name": "Bubbles", "default": false, "voiceURI": "Bubbles", "localService": true}, {"lang": "he-IL", "name": "Carmit", "default": false, "voiceURI": "Carmit", "localService": true}, {"lang": "en-US", "name": "Cellos", "default": false, "voiceURI": "Cellos", "localService": true}, {"lang": "id-ID", "name": "Damayanti", "default": false, "voiceURI": "Damayanti", "localService": true}, {"lang": "bg-BG", "name": "Daria", "default": false, "voiceURI": "Daria", "localService": true}, {"lang": "en-US", "name": "Wobble", "default": false, "voiceURI": "Wobble", "localService": true}, {"lang": "de-DE", "name": "Eddy (German (Germany))", "default": false, "voiceURI": "Eddy (German (Germany))", "localService": true}, {"lang": "en-GB", "name": "Eddy (English (UK))", "default": false, "voiceURI": "Eddy (English (UK))", "localService": true}, {"lang": "en-US", "name": "Eddy (English (US))", "default": false, "voiceURI": "Eddy (English (US))", "localService": true}, {"lang": "es-ES", "name": "Eddy (Spanish (Spain))", "default": false, "voiceURI": "Eddy (Spanish (Spain))", "localService": true}, {"lang": "es-MX", "name": "Eddy (Spanish (Mexico))", "default": false, "voiceURI": "Eddy (Spanish (Mexico))", "localService": true}, {"lang": "fi-FI", "name": "Eddy (Finnish (Finland))", "default": false, "voiceURI": "Eddy (Finnish (Finland))", "localService": true}, {"lang": "fr-CA", "name": "Eddy (French (Canada))", "default": false, "voiceURI": "Eddy (French (Canada))", "localService": true}, {"lang": "fr-FR", "name": "Eddy (French (France))", "default": false, "voiceURI": "Eddy (French (France))", "localService": true}, {"lang": "it-IT", "name": "Eddy (Italian (Italy))", "default": false, "voiceURI": "Eddy (Italian (Italy))", "localService": true}, {"lang": "pt-BR", "name": "Eddy (Portuguese (Brazil))", "default": false, "voiceURI": "Eddy (Portuguese (Brazil))", "localService": true}, {"lang": "nl-BE", "name": "Ellen", "default": false, "voiceURI": "Ellen", "localService": true}, {"lang": "de-DE", "name": "Flo (German (Germany))", "default": false, "voiceURI": "Flo (German (Germany))", "localService": true}, {"lang": "en-GB", "name": "Flo (English (UK))", "default": false, "voiceURI": "Flo (English (UK))", "localService": true}, {"lang": "en-US", "name": "Flo (English (US))", "default": false, "voiceURI": "Flo (English (US))", "localService": true}, {"lang": "es-ES", "name": "Flo (Spanish (Spain))", "default": false, "voiceURI": "Flo (Spanish (Spain))", "localService": true}, {"lang": "es-MX", "name": "Flo (Spanish (Mexico))", "default": false, "voiceURI": "Flo (Spanish (Mexico))", "localService": true}, {"lang": "fi-FI", "name": "Flo (Finnish (Finland))", "default": false, "voiceURI": "Flo (Finnish (Finland))", "localService": true}, {"lang": "fr-CA", "name": "Flo (French (Canada))", "default": false, "voiceURI": "Flo (French (Canada))", "localService": true}, {"lang": "fr-FR", "name": "Flo (French (France))", "default": false, "voiceURI": "Flo (French (France))", "localService": true}, {"lang": "it-IT", "name": "Flo (Italian (Italy))", "default": false, "voiceURI": "Flo (Italian (Italy))", "localService": true}, {"lang": "pt-BR", "name": "Flo (Portuguese (Brazil))", "default": false, "voiceURI": "Flo (Portuguese (Brazil))", "localService": true}, {"lang": "en-US", "name": "Fred", "default": false, "voiceURI": "Fred", "localService": true}, {"lang": "en-US", "name": "Good News", "default": false, "voiceURI": "Good News", "localService": true}, {"lang": "de-DE", "name": "Grandma (German (Germany))", "default": false, "voiceURI": "Grandma (German (Germany))", "localService": true}, {"lang": "en-GB", "name": "Grandma (English (UK))", "default": false, "voiceURI": "Grandma (English (UK))", "localService": true}, {"lang": "en-US", "name": "Grandma (English (US))", "default": false, "voiceURI": "Grandma (English (US))", "localService": true}, {"lang": "es-ES", "name": "Grandma (Spanish (Spain))", "default": false, "voiceURI": "Grandma (Spanish (Spain))", "localService": true}, {"lang": "es-MX", "name": "Grandma (Spanish (Mexico))", "default": false, "voiceURI": "Grandma (Spanish (Mexico))", "localService": true}, {"lang": "fi-FI", "name": "Grandma (Finnish (Finland))", "default": false, "voiceURI": "Grandma (Finnish (Finland))", "localService": true}, {"lang": "fr-CA", "name": "Grandma (French (Canada))", "default": false, "voiceURI": "Grandma (French (Canada))", "localService": true}, {"lang": "fr-FR", "name": "Grandma (French (France))", "default": false, "voiceURI": "Grandma (French (France))", "localService": true}, {"lang": "it-IT", "name": "Grandma (Italian (Italy))", "default": false, "voiceURI": "Grandma (Italian (Italy))", "localService": true}, {"lang": "pt-BR", "name": "Grandma (Portuguese (Brazil))", "default": false, "voiceURI": "Grandma (Portuguese (Brazil))", "localService": true}, {"lang": "de-DE", "name": "Grandpa (German (Germany))", "default": false, "voiceURI": "Grandpa (German (Germany))", "localService": true}, {"lang": "en-GB", "name": "Grandpa (English (UK))", "default": false, "voiceURI": "Grandpa (English (UK))", "localService": true}, {"lang": "en-US", "name": "Grandpa (English (US))", "default": false, "voiceURI": "Grandpa (English (US))", "localService": true}, {"lang": "es-ES", "name": "Grandpa (Spanish (Spain))", "default": false, "voiceURI": "Grandpa (Spanish (Spain))", "localService": true}, {"lang": "es-MX", "name": "Grandpa (Spanish (Mexico))", "default": false, "voiceURI": "Grandpa (Spanish (Mexico))", "localService": true}, {"lang": "fi-FI", "name": "Grandpa (Finnish (Finland))", "default": false, "voiceURI": "Grandpa (Finnish (Finland))", "localService": true}, {"lang": "fr-CA", "name": "Grandpa (French (Canada))", "default": false, "voiceURI": "Grandpa (French (Canada))", "localService": true}, {"lang": "fr-FR", "name": "Grandpa (French (France))", "default": false, "voiceURI": "Grandpa (French (France))", "localService": true}, {"lang": "it-IT", "name": "Grandpa (Italian (Italy))", "default": false, "voiceURI": "Grandpa (Italian (Italy))", "localService": true}, {"lang": "pt-BR", "name": "Grandpa (Portuguese (Brazil))", "default": false, "voiceURI": "Grandpa (Portuguese (Brazil))", "localService": true}, {"lang": "en-US", "name": "Jester", "default": false, "voiceURI": "Jester", "localService": true}, {"lang": "ro-RO", "name": "Ioana", "default": false, "voiceURI": "Ioana", "localService": true}, {"lang": "fr-FR", "name": "Jacques", "default": false, "voiceURI": "Jacques", "localService": true}, {"lang": "pt-PT", "name": "Joana", "default": false, "voiceURI": "Joana", "localService": true}, {"lang": "en-US", "name": "Junior", "default": false, "voiceURI": "Junior", "localService": true}, {"lang": "th-TH", "name": "Kanya", "default": false, "voiceURI": "Kanya", "localService": true}, {"lang": "en-AU", "name": "Karen", "default": false, "voiceURI": "Karen", "localService": true}, {"lang": "en-US", "name": "Kathy", "default": false, "voiceURI": "Kathy", "localService": true}, {"lang": "ja-JP", "name": "Kyoko", "default": false, "voiceURI": "Kyoko", "localService": true}, {"lang": "hr-HR", "name": "Lana", "default": false, "voiceURI": "Lana", "localService": true}, {"lang": "sk-SK", "name": "Laura", "default": false, "voiceURI": "Laura", "localService": true}, {"lang": "hi-IN", "name": "Lekha", "default": false, "voiceURI": "Lekha", "localService": true}, {"lang": "uk-UA", "name": "Lesya", "default": false, "voiceURI": "Lesya", "localService": true}, {"lang": "vi-VN", "name": "Linh", "default": false, "voiceURI": "Linh", "localService": true}, {"lang": "pt-BR", "name": "Luciana", "default": false, "voiceURI": "Luciana", "localService": true}, {"lang": "ar-001", "name": "Majed", "default": false, "voiceURI": "Majed", "localService": true}, {"lang": "hu-HU", "name": "Tünde", "default": false, "voiceURI": "Tünde", "localService": true}, {"lang": "zh-TW", "name": "Meijia", "default": false, "voiceURI": "Meijia", "localService": true}, {"lang": "el-GR", "name": "Melina", "default": false, "voiceURI": "Melina", "localService": true}, {"lang": "ru-RU", "name": "Milena", "default": false, "voiceURI": "Milena", "localService": true}, {"lang": "en-IE", "name": "Moira", "default": false, "voiceURI": "Moira", "localService": true}, {"lang": "es-ES", "name": "Mónica", "default": false, "voiceURI": "Mónica", "localService": true}, {"lang": "ca-ES", "name": "Montse", "default": false, "voiceURI": "Montse", "localService": true}, {"lang": "nb-NO", "name": "Nora", "default": false, "voiceURI": "Nora", "localService": true}, {"lang": "en-US", "name": "Organ", "default": false, "voiceURI": "Organ", "localService": true}, {"lang": "es-MX", "name": "Paulina", "default": false, "voiceURI": "Paulina", "localService": true}, {"lang": "en-US", "name": "Superstar", "default": false, "voiceURI": "Superstar", "localService": true}, {"lang": "en-US", "name": "Ralph", "default": false, "voiceURI": "Ralph", "localService": true}, {"lang": "de-DE", "name": "Reed (German (Germany))", "default": false, "voiceURI": "Reed (German (Germany))", "localService": true}, {"lang": "en-GB", "name": "Reed (English (UK))", "default": false, "voiceURI": "Reed (English (UK))", "localService": true}, {"lang": "en-US", "name": "Reed (English (US))", "default": false, "voiceURI": "Reed (English (US))", "localService": true}, {"lang": "es-ES", "name": "Reed (Spanish (Spain))", "default": false, "voiceURI": "Reed (Spanish (Spain))", "localService": true}, {"lang": "es-MX", "name": "Reed (Spanish (Mexico))", "default": false, "voiceURI": "Reed (Spanish (Mexico))", "localService": true}, {"lang": "fi-FI", "name": "Reed (Finnish (Finland))", "default": false, "voiceURI": "Reed (Finnish (Finland))", "localService": true}, {"lang": "fr-CA", "name": "Reed (French (Canada))", "default": false, "voiceURI": "Reed (French (Canada))", "localService": true}, {"lang": "it-IT", "name": "Reed (Italian (Italy))", "default": false, "voiceURI": "Reed (Italian (Italy))", "localService": true}, {"lang": "pt-BR", "name": "Reed (Portuguese (Brazil))", "default": false, "voiceURI": "Reed (Portuguese (Brazil))", "localService": true}, {"lang": "en-IN", "name": "Rishi", "default": false, "voiceURI": "Rishi", "localService": true}, {"lang": "de-DE", "name": "Rocko (German (Germany))", "default": false, "voiceURI": "Rocko (German (Germany))", "localService": true}, {"lang": "en-GB", "name": "Rocko (English (UK))", "default": false, "voiceURI": "Rocko (English (UK))", "localService": true}, {"lang": "en-US", "name": "Rocko (English (US))", "default": false, "voiceURI": "Rocko (English (US))", "localService": true}, {"lang": "es-ES", "name": "Rocko (Spanish (Spain))", "default": false, "voiceURI": "Rocko (Spanish (Spain))", "localService": true}, {"lang": "es-MX", "name": "Rocko (Spanish (Mexico))", "default": false, "voiceURI": "Rocko (Spanish (Mexico))", "localService": true}, {"lang": "fi-FI", "name": "Rocko (Finnish (Finland))", "default": false, "voiceURI": "Rocko (Finnish (Finland))", "localService": true}, {"lang": "fr-CA", "name": "Rocko (French (Canada))", "default": false, "voiceURI": "Rocko (French (Canada))", "localService": true}, {"lang": "fr-FR", "name": "Rocko (French (France))", "default": false, "voiceURI": "Rocko (French (France))", "localService": true}, {"lang": "it-IT", "name": "Rocko (Italian (Italy))", "default": false, "voiceURI": "Rocko (Italian (Italy))", "localService": true}, {"lang": "pt-BR", "name": "Rocko (Portuguese (Brazil))", "default": false, "voiceURI": "Rocko (Portuguese (Brazil))", "localService": true}, {"lang": "en-US", "name": "Samantha", "default": false, "voiceURI": "Samantha", "localService": true}, {"lang": "de-DE", "name": "Sandy (German (Germany))", "default": false, "voiceURI": "Sandy (German (Germany))", "localService": true}, {"lang": "en-GB", "name": "Sandy (English (UK))", "default": false, "voiceURI": "Sandy (English (UK))", "localService": true}, {"lang": "en-US", "name": "Sandy (English (US))", "default": false, "voiceURI": "Sandy (English (US))", "localService": true}, {"lang": "es-ES", "name": "Sandy (Spanish (Spain))", "default": false, "voiceURI": "Sandy (Spanish (Spain))", "localService": true}, {"lang": "es-MX", "name": "Sandy (Spanish (Mexico))", "default": false, "voiceURI": "Sandy (Spanish (Mexico))", "localService": true}, {"lang": "fi-FI", "name": "Sandy (Finnish (Finland))", "default": false, "voiceURI": "Sandy (Finnish (Finland))", "localService": true}, {"lang": "fr-CA", "name": "Sandy (French (Canada))", "default": false, "voiceURI": "Sandy (French (Canada))", "localService": true}, {"lang": "fr-FR", "name": "Sandy (French (France))", "default": false, "voiceURI": "Sandy (French (France))", "localService": true}, {"lang": "it-IT", "name": "Sandy (Italian (Italy))", "default": false, "voiceURI": "Sandy (Italian (Italy))", "localService": true}, {"lang": "pt-BR", "name": "Sandy (Portuguese (Brazil))", "default": false, "voiceURI": "Sandy (Portuguese (Brazil))", "localService": true}, {"lang": "da-DK", "name": "Sara", "default": false, "voiceURI": "Sara", "localService": true}, {"lang": "fi-FI", "name": "Satu", "default": false, "voiceURI": "Satu", "localService": true}, {"lang": "de-DE", "name": "Shelley (German (Germany))", "default": false, "voiceURI": "Shelley (German (Germany))", "localService": true}, {"lang": "en-GB", "name": "Shelley (English (UK))", "default": false, "voiceURI": "Shelley (English (UK))", "localService": true}, {"lang": "en-US", "name": "Shelley (English (US))", "default": false, "voiceURI": "Shelley (English (US))", "localService": true}, {"lang": "es-ES", "name": "Shelley (Spanish (Spain))", "default": false, "voiceURI": "Shelley (Spanish (Spain))", "localService": true}, {"lang": "es-MX", "name": "Shelley (Spanish (Mexico))", "default": false, "voiceURI": "Shelley (Spanish (Mexico))", "localService": true}, {"lang": "fi-FI", "name": "Shelley (Finnish (Finland))", "default": false, "voiceURI": "Shelley (Finnish (Finland))", "localService": true}, {"lang": "fr-CA", "name": "Shelley (French (Canada))", "default": false, "voiceURI": "Shelley (French (Canada))", "localService": true}, {"lang": "fr-FR", "name": "Shelley (French (France))", "default": false, "voiceURI": "Shelley (French (France))", "localService": true}, {"lang": "it-IT", "name": "Shelley (Italian (Italy))", "default": false, "voiceURI": "Shelley (Italian (Italy))", "localService": true}, {"lang": "pt-BR", "name": "Shelley (Portuguese (Brazil))", "default": false, "voiceURI": "Shelley (Portuguese (Brazil))", "localService": true}, {"lang": "zh-HK", "name": "Sinji", "default": false, "voiceURI": "Sinji", "localService": true}, {"lang": "en-ZA", "name": "Tessa", "default": false, "voiceURI": "Tessa", "localService": true}, {"lang": "fr-FR", "name": "Thomas", "default": false, "voiceURI": "Thomas", "localService": true}, {"lang": "zh-CN", "name": "Tingting", "default": false, "voiceURI": "Tingting", "localService": true}, {"lang": "en-US", "name": "Trinoids", "default": false, "voiceURI": "Trinoids", "localService": true}, {"lang": "en-US", "name": "Whisper", "default": false, "voiceURI": "Whisper", "localService": true}, {"lang": "nl-NL", "name": "Xander", "default": false, "voiceURI": "Xander", "localService": true}, {"lang": "tr-TR", "name": "Yelda", "default": false, "voiceURI": "Yelda", "localService": true}, {"lang": "ko-KR", "name": "Yuna", "default": false, "voiceURI": "Yuna", "localService": true}, {"lang": "en-US", "name": "Zarvox", "default": false, "voiceURI": "Zarvox", "localService": true}, {"lang": "pl-PL", "name": "Zosia", "default": false, "voiceURI": "Zosia", "localService": true}, {"lang": "cs-CZ", "name": "Zuzana", "default": false, "voiceURI": "Zuzana", "localService": true}, {"lang": "de-DE", "name": "Google Deutsch", "default": false, "voiceURI": "Google Deutsch", "localService": false}, {"lang": "en-US", "name": "Google US English", "default": false, "voiceURI": "Google US English", "localService": false}, {"lang": "en-GB", "name": "Google UK English Female", "default": false, "voiceURI": "Google UK English Female", "localService": false}, {"lang": "en-GB", "name": "Google UK English Male", "default": false, "voiceURI": "Google UK English Male", "localService": false}, {"lang": "es-ES", "name": "Google español", "default": false, "voiceURI": "Google español", "localService": false}, {"lang": "es-US", "name": "Google español de Estados Unidos", "default": false, "voiceURI": "Google español de Estados Unidos", "localService": false}, {"lang": "fr-FR", "name": "Google français", "default": false, "voiceURI": "Google français", "localService": false}, {"lang": "hi-IN", "name": "Google हिन्दी", "default": false, "voiceURI": "Google हिन्दी", "localService": false}, {"lang": "id-ID", "name": "Google Bahasa Indonesia", "default": false, "voiceURI": "Google Bahasa Indonesia", "localService": false}, {"lang": "it-IT", "name": "Google italiano", "default": false, "voiceURI": "Google italiano", "localService": false}, {"lang": "ja-JP", "name": "Google 日本語", "default": false, "voiceURI": "Google 日本語", "localService": false}, {"lang": "ko-KR", "name": "Google 한국의", "default": false, "voiceURI": "Google 한국의", "localService": false}, {"lang": "nl-NL", "name": "Google Nederlands", "default": false, "voiceURI": "Google Nederlands", "localService": false}, {"lang": "pl-PL", "name": "Google polski", "default": false, "voiceURI": "Google polski", "localService": false}, {"lang": "pt-BR", "name": "Google português do Brasil", "default": false, "voiceURI": "Google português do Brasil", "localService": false}, {"lang": "ru-RU", "name": "Google русский", "default": false, "voiceURI": "Google русский", "localService": false}, {"lang": "zh-CN", "name": "Google 普通话（中国大陆）", "default": false, "voiceURI": "Google 普通话（中国大陆）", "localService": false}, {"lang": "zh-HK", "name": "Google 粤語（香港）", "default": false, "voiceURI": "Google 粤語（香港）", "localService": false}, {"lang": "zh-TW", "name": "Google 國語（臺灣）", "default": false, "voiceURI": "Google 國語（臺灣）", "localService": false}], "webRTC": {}, "webgl2": {"params": {"2849": {"type": "Number", "value": 1}, "2884": {"type": "", "value": false}, "2885": {"type": "Number", "value": 1029}, "2886": {"type": "Number", "value": 2305}, "2928": {"type": "Float32Array", "value": {"0": 0, "1": 1}}, "2929": {"type": "", "value": false}, "2930": {"type": "Boolean", "value": true}, "2931": {"type": "Number", "value": 1}, "2932": {"type": "Number", "value": 513}, "2960": {"type": "", "value": false}, "2961": {"type": "", "value": 0}, "2962": {"type": "Number", "value": 519}, "2963": {"type": "Number", "value": 2147483647}, "2964": {"type": "Number", "value": 7680}, "2965": {"type": "Number", "value": 7680}, "2966": {"type": "Number", "value": 7680}, "2967": {"type": "", "value": 0}, "2968": {"type": "Number", "value": 2147483647}, "2978": {"type": "Int32Array", "value": {"0": 0, "1": 0, "2": 300, "3": 150}}, "3024": {"type": "Boolean", "value": true}, "3042": {"type": "", "value": false}, "3088": {"type": "Int32Array", "value": {"0": 0, "1": 0, "2": 300, "3": 150}}, "3089": {"type": "", "value": false}, "3106": {"type": "Float32Array", "value": {"0": 0, "1": 0, "2": 0, "3": 0}}, "3107": {"type": "Array", "value": [true, true, true, true]}, "3317": {"type": "Number", "value": 4}, "3333": {"type": "Number", "value": 4}, "3379": {"type": "Number", "value": 16384}, "3386": {"type": "Int32Array", "value": {"0": 16384, "1": 16384}}, "3408": {"type": "Number", "value": 4}, "3410": {"type": "Number", "value": 8}, "3411": {"type": "Number", "value": 8}, "3412": {"type": "Number", "value": 8}, "3413": {"type": "Number", "value": 8}, "3414": {"type": "Number", "value": 24}, "3415": {"type": "", "value": 0}, "7936": {"type": "String", "value": "WebKit"}, "7937": {"type": "String", "value": "WebKit WebGL"}, "7938": {"type": "String", "value": "WebGL 2.0 (OpenGL ES 3.0 Chromium)"}, "10752": {"type": "", "value": 0}, "32773": {"type": "Float32Array", "value": {"0": 0, "1": 0, "2": 0, "3": 0}}, "32777": {"type": "Number", "value": 32774}, "32823": {"type": "", "value": false}, "32824": {"type": "", "value": 0}, "32873": {"type": "", "value": null}, "32883": {"type": "Number", "value": 2048}, "32936": {"type": "Number", "value": 1}, "32937": {"type": "Number", "value": 4}, "32938": {"type": "Number", "value": 1}, "32939": {"type": "", "value": false}, "32968": {"type": "", "value": 0}, "32969": {"type": "Number", "value": 1}, "32970": {"type": "", "value": 0}, "32971": {"type": "Number", "value": 1}, "33170": {"type": "Number", "value": 4352}, "33901": {"type": "Float32Array", "value": {"0": 1, "1": 64}}, "33902": {"type": "Float32Array", "value": {"0": 1, "1": 1}}, "34016": {"type": "Number", "value": 33984}, "34024": {"type": "Number", "value": 16384}, "34045": {"type": "Number", "value": 16}, "34047": {"type": "Number", "value": 16}, "34068": {"type": "", "value": null}, "34076": {"type": "Number", "value": 16384}, "34467": {"type": "Uint32Array", "value": {}}, "34816": {"type": "Number", "value": 519}, "34817": {"type": "Number", "value": 7680}, "34818": {"type": "Number", "value": 7680}, "34819": {"type": "Number", "value": 7680}, "34852": {"type": "Number", "value": 8}, "34877": {"type": "Number", "value": 32774}, "34921": {"type": "Number", "value": 16}, "34930": {"type": "Number", "value": 16}, "34964": {"type": "", "value": null}, "34965": {"type": "", "value": null}, "35071": {"type": "Number", "value": 2048}, "35076": {"type": "Number", "value": -8}, "35077": {"type": "Number", "value": 7}, "35371": {"type": "Number", "value": 16}, "35373": {"type": "Number", "value": 16}, "35374": {"type": "Number", "value": 32}, "35375": {"type": "Number", "value": 72}, "35376": {"type": "Number", "value": 65536}, "35377": {"type": "Number", "value": 266240}, "35379": {"type": "Number", "value": 266240}, "35380": {"type": "Number", "value": 256}, "35657": {"type": "Number", "value": 4096}, "35658": {"type": "Number", "value": 4096}, "35659": {"type": "Number", "value": 124}, "35660": {"type": "Number", "value": 16}, "35661": {"type": "Number", "value": 32}, "35724": {"type": "String", "value": "WebGL GLSL ES 3.00 (OpenGL ES GLSL ES 3.0 Chromium)"}, "35725": {"type": "", "value": null}, "35968": {"type": "Number", "value": 4}, "35978": {"type": "Number", "value": 64}, "35979": {"type": "Number", "value": 4}, "36003": {"type": "", "value": 0}, "36004": {"type": "Number", "value": 2147483647}, "36005": {"type": "Number", "value": 2147483647}, "36006": {"type": "", "value": null}, "36007": {"type": "", "value": null}, "36063": {"type": "Number", "value": 8}, "36183": {"type": "Number", "value": 4}, "36347": {"type": "Number", "value": 1024}, "36348": {"type": "Number", "value": 31}, "36349": {"type": "Number", "value": 1024}, "37154": {"type": "Number", "value": 64}, "37157": {"type": "Number", "value": 128}, "37440": {"type": "", "value": false}, "37441": {"type": "", "value": false}, "37443": {"type": "Number", "value": 37444}}, "maxAnisotropy": 16, "contextAttributes": {"alpha": true, "depth": true, "stencil": false, "antialias": true, "xrCompatible": false, "desynchronized": false, "powerPreference": "default", "premultipliedAlpha": true, "preserveDrawingBuffer": false, "failIfMajorPerformanceCaveat": false}, "supportedExtensions": ["EXT_color_buffer_float", "EXT_color_buffer_half_float", "EXT_disjoint_timer_query_webgl2", "EXT_float_blend", "EXT_texture_compression_rgtc", "EXT_texture_filter_anisotropic", "EXT_texture_norm16", "KHR_parallel_shader_compile", "OES_draw_buffers_indexed", "OES_texture_float_linear", "WEBGL_compressed_texture_s3tc", "WEBGL_compressed_texture_s3tc_srgb", "WEBGL_debug_renderer_info", "WEBGL_debug_shaders", "WEBGL_lose_context", "WEBGL_multi_draw", "WEBGL_provoking_vertex"], "shaderPrecisionFormats": [{"r": {"rangeMax": 127, "rangeMin": 127, "precision": 23}, "shaderType": 35633, "precisionType": 36338}, {"r": {"rangeMax": 127, "rangeMin": 127, "precision": 23}, "shaderType": 35633, "precisionType": 36337}, {"r": {"rangeMax": 127, "rangeMin": 127, "precision": 23}, "shaderType": 35633, "precisionType": 36336}, {"r": {"rangeMax": 30, "rangeMin": 31, "precision": 0}, "shaderType": 35633, "precisionType": 36341}, {"r": {"rangeMax": 30, "rangeMin": 31, "precision": 0}, "shaderType": 35633, "precisionType": 36340}, {"r": {"rangeMax": 30, "rangeMin": 31, "precision": 0}, "shaderType": 35633, "precisionType": 36339}, {"r": {"rangeMax": 127, "rangeMin": 127, "precision": 23}, "shaderType": 35632, "precisionType": 36338}, {"r": {"rangeMax": 127, "rangeMin": 127, "precision": 23}, "shaderType": 35632, "precisionType": 36337}, {"r": {"rangeMax": 127, "rangeMin": 127, "precision": 23}, "shaderType": 35632, "precisionType": 36336}, {"r": {"rangeMax": 30, "rangeMin": 31, "precision": 0}, "shaderType": 35632, "precisionType": 36341}, {"r": {"rangeMax": 30, "rangeMin": 31, "precision": 0}, "shaderType": 35632, "precisionType": 36340}, {"r": {"rangeMax": 30, "rangeMin": 31, "precision": 0}, "shaderType": 35632, "precisionType": 36339}]}, "window": {"Image": "_$obj!_//+_", "indexDB": "_$obj!_undefined_//+_", "screenX": 0, "screenY": 38, "toolbar": "_$obj!_//+_", "external": "_$obj!_//+_", "netscape": "_$obj!_undefined_//+_", "innerWidth": 1728, "outerWidth": 1728, "innerHeight": 962, "locationbar": "_$obj!_//+_", "outerHeight": 1079, "pageXOffset": 0, "pageYOffset": 0, "postMessage": "_$obj!_//+_", "localStorage": "_$obj!_//+_", "ActiveXObject": "_$obj!_undefined_//+_", "BluetoothUUID": "_$obj!_//+_", "sessionStorage": "_$obj!_//+_", "BarcodeDetector": "_$obj!_//+_", "isSecureContext": true, "devicePixelRatio": 2, "mozRTCPeerConnection": "_$obj!_undefined_//+_", "webkitRequestAnimationFrame": "_$obj!_//+_"}, "battery": {"level": 1, "charging": false, "chargingTime": null, "dischargingTime": 48120}, "plugins": {"plugins": [{"name": "PDF Viewer", "filename": "internal-pdf-viewer", "__mimeTypes": ["application/pdf", "text/pdf"], "description": "Portable Document Format"}, {"name": "Chrome PDF Viewer", "filename": "internal-pdf-viewer", "__mimeTypes": ["application/pdf", "text/pdf"], "description": "Portable Document Format"}, {"name": "Chromium PDF Viewer", "filename": "internal-pdf-viewer", "__mimeTypes": ["application/pdf", "text/pdf"], "description": "Portable Document Format"}, {"name": "Microsoft Edge PDF Viewer", "filename": "internal-pdf-viewer", "__mimeTypes": ["application/pdf", "text/pdf"], "description": "Portable Document Format"}, {"name": "WebKit built-in PDF", "filename": "internal-pdf-viewer", "__mimeTypes": ["application/pdf", "text/pdf"], "description": "Portable Document Format"}], "mimeTypes": [{"type": "application/pdf", "suffixes": "pdf", "description": "Portable Document Format", "__pluginName": "PDF Viewer"}, {"type": "text/pdf", "suffixes": "pdf", "description": "Portable Document Format", "__pluginName": "PDF Viewer"}]}, "document": {"images": "_$obj!_//+_", "layers": "_$obj!_undefined_//+_", "compatMode": "CSS1Compat", "characterSet": "UTF-8", "documentMode": "_$obj!_undefined_//+_"}, "keyboard": {"KeyA": "a", "KeyB": "b", "KeyC": "c", "KeyD": "d", "KeyE": "e", "KeyF": "f", "KeyG": "g", "KeyH": "h", "KeyI": "i", "KeyJ": "j", "KeyK": "k", "KeyL": "l", "KeyM": "m", "KeyN": "n", "KeyO": "o", "KeyP": "p", "KeyQ": "q", "KeyR": "r", "KeyS": "s", "KeyT": "t", "KeyU": "u", "KeyV": "v", "KeyW": "w", "KeyX": "x", "KeyY": "y", "KeyZ": "z", "Comma": ",", "Equal": "=", "Minus": "-", "Quote": "'", "Slash": "/", "Digit0": "0", "Digit1": "1", "Digit2": "2", "Digit3": "3", "Digit4": "4", "Digit5": "5", "Digit6": "6", "Digit7": "7", "Digit8": "8", "Digit9": "9", "Period": ".", "Backquote": "`", "Backslash": "\\", "Semicolon": ";", "BracketLeft": "[", "BracketRight": "]", "IntlBackslash": "§"}, "mimeTypes": [{"mimeType": "application/ogg", "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "audio/aac", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "audio/flac", "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "audio/mp3", "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "audio/mp4", "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "audio/mp4; codecs=\"Opus\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "audio/mp4; codecs=\"flac\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "audio/mp4; codecs=\"mp3\"", "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "audio/mp4; codecs=\"mp4a.40\"", "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "audio/mp4; codecs=\"mp4a.40.2\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "audio/mp4; codecs=\"mp4a.40.29\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "audio/mp4; codecs=\"mp4a.40.5\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "audio/mp4; codecs=\"mp4a.66\"", "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "audio/mp4; codecs=\"mp4a.67\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "audio/mp4; codecs=\"mp4a.68\"", "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "audio/mp4; codecs=\"mp4a.69\"", "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "audio/mp4; codecs=\"mp4a.6B\"", "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "audio/mpeg", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "audio/mpeg; codecs=\"mp3\"", "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "audio/ogg; codecs=\"flac\"", "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "audio/ogg; codecs=\"opus\"", "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "audio/ogg; codecs=\"vorbis\"", "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "audio/wav", "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "audio/wav; codecs=\"1\"", "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "audio/webm", "audioPlayType": "maybe", "mediaRecorder": true, "videoPlayType": "maybe"}, {"mimeType": "audio/webm; codecs=\"opus\"", "mediaSource": true, "audioPlayType": "probably", "mediaRecorder": true, "videoPlayType": "probably"}, {"mimeType": "audio/webm; codecs=\"vorbis\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "audio/x-m4a", "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "audio/x-wav", "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "audio/x-wav; codecs=\"1\"", "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/3gpp", "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4", "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"av01.0.08M.08\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1\"", "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.42000a\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.42000b\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.42000c\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.42000d\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.420014\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.420015\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.420016\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.42001e\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.42001f\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.420020\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.420028\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.420029\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.42002a\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.420032\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.420033\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.420034\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.42003c\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.42003d\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.42003e\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.42003f\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.420040\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.420050\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.42006e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.420085\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.42400a\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.42400b\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.42400c\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.42400d\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.424014\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.424015\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.424016\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.42401e\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.42401f\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.424020\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.424028\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.424029\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.42402a\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.424032\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.424033\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.424034\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.42403c\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.42403d\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.42403e\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.42403f\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.424040\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.424050\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.42406e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.424085\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.42E009\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.42E01E\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.42E034\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.42F01E\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.42c00d\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4D001E\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4d000a\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4d000b\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4d000c\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4d000d\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4d0014\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4d0015\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4d0016\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4d001e\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4d001f\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4d0020\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4d0028\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4d0029\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4d002a\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4d0032\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4d0033\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4d0034\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4d003c\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4d003d\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4d003e\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4d003f\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.4d0040\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.4d0050\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.4d006e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.4d0085\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.4d400a\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4d400b\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4d400c\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4d400d\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4d4014\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4d4015\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4d4016\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4d401e\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4d401f\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4d4020\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4d4028\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4d4029\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4d402a\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4d4032\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4d4033\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4d4034\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4d403c\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4d403d\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4d403e\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.4d403f\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.4d4040\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.4d4050\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.4d406e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.4d4085\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.53000a\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.53000b\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.53000c\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.53000d\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.530014\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.530015\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.530016\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.53001e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.53001f\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.530020\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.530028\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.530029\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.53002a\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.530032\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.530033\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.530034\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.53003c\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.53003d\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.53003e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.53003f\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.530040\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.530050\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.53006e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.530085\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.53040a\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.53040b\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.53040c\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.53040d\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.530414\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.530415\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.530416\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.53041e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.53041f\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.530420\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.530428\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.530429\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.53042a\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.530432\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.530433\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.530434\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.53043c\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.53043d\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.53043e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.53043f\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.530440\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.530450\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.53046e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.530485\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.56000a\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.56000b\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.56000c\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.56000d\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.560014\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.560015\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.560016\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.56001e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.56001f\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.560020\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.560028\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.560029\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.56002a\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.560032\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.560033\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.560034\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.56003c\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.56003d\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.56003e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.56003f\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.560040\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.560050\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.56006e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.560085\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.56040a\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.56040b\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.56040c\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.56040d\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.560414\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.560415\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.560416\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.56041e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.56041f\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.560420\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.560428\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.560429\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.56042a\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.560432\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.560433\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.560434\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.56043c\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.56043d\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.56043e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.56043f\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.560440\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.560450\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.56046e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.560485\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.56100a\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.56100b\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.56100c\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.56100d\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.561014\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.561015\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.561016\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.56101e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.56101f\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.561020\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.561028\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.561029\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.56102a\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.561032\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.561033\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.561034\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.56103c\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.56103d\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.56103e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.56103f\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.561040\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.561050\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.56106e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.561085\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.58000a\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.58000b\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.58000c\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.58000d\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.580014\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.580015\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.580016\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.58001e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.58001f\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.580020\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.580028\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.580029\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.58002a\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.580032\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.580033\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.580034\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.58003c\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.58003d\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.58003e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.58003f\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.580040\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.580050\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.58006e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.580085\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.64000a\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.64000b\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.64000c\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.64000d\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.640014\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.640015\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.640016\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.64001E, mp4a.40.2\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.64001e\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.64001f\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.640020\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.640028\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.640029\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.64002a\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.640032\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.640033\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.640034\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.64003c\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.64003d\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.64003e\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.64003f\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.640040\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.640050\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.64006e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.640085\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.64080a\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.64080b\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.64080c\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.64080d\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.640814\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.640815\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.640816\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.64081e\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.64081f\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.640820\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.640828\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.640829\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.64082a\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.640832\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.640833\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.640834\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.64083c\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.64083d\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.64083e\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.64083f\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.640840\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.640850\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.64086e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.640885\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.6e000a\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.6e000b\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.6e000c\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.6e000d\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.6e0014\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.6e0015\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.6e0016\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.6e001e\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.6e001f\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.6e0020\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.6e0028\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.6e0029\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.6e002a\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.6e0032\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.6e0033\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.6e0034\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.6e003c\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.6e003d\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.6e003e\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.6e003f\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.6e0040\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.6e0050\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.6e006e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.6e0085\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.6e100a\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.6e100b\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.6e100c\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.6e100d\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.6e1014\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.6e1015\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.6e1016\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.6e101e\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.6e101f\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.6e1020\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.6e1028\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.6e1029\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.6e102a\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.6e1032\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.6e1033\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.6e1034\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.6e103c\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.6e103d\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.6e103e\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"avc1.6e103f\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.6e1040\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.6e1050\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.6e106e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.6e1085\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.76000a\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.76000b\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.76000c\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.76000d\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.760014\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.760015\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.760016\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.76001e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.76001f\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.760020\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.760028\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.760029\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.76002a\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.760032\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.760033\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.760034\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.76003c\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.76003d\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.76003e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.76003f\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.760040\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.760050\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.76006e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.760085\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a000a\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a000b\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a000c\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a000d\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a0014\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a0015\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a0016\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a001e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a001f\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a0020\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a0028\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a0029\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a002a\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a0032\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a0033\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a0034\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a003c\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a003d\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a003e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a003f\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a0040\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a0050\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a006e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a0085\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a100a\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a100b\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a100c\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a100d\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a1014\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a1015\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a1016\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a101e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a101f\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a1020\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a1028\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a1029\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a102a\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a1032\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a1033\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a1034\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a103c\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a103d\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a103e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a103f\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a1040\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a1050\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a106e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.7a1085\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.80000a\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.80000b\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.80000c\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.80000d\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.800014\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.800015\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.800016\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.80001e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.80001f\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.800020\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.800028\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.800029\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.80002a\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.800032\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.800033\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.800034\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.80003c\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.80003d\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.80003e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.80003f\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.800040\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.800050\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.80006e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.800085\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f4000a\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f4000b\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f4000c\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f4000d\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f40014\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f40015\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f40016\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f4001e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f4001f\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f40020\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f40028\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f40029\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f4002a\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f40032\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f40033\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f40034\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f4003c\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f4003d\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f4003e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f4003f\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f40040\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f40050\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f4006e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f40085\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f4100a\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f4100b\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f4100c\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f4100d\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f41014\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f41015\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f41016\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f4101e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f4101f\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f41020\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f41028\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f41029\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f4102a\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f41032\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f41033\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f41034\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f4103c\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f4103d\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f4103e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f4103f\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f41040\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f41050\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f4106e\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc1.f41085\"", "mediaSource": true, "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc3\"", "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/mp4; codecs=\"avc3.42001E\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"flac\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"hev1.1.6.L93.90\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"hev1.1.6.L93.B0\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"hvc1.1.6.L93.90\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"hvc1.1.6.L93.B0\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"mp4a.40.02\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"mp4a.40.2\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"mp4a.40.29\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"mp4a.40.5\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"mp4a.67\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"vp09.00.10.08\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"vp09.00.50.08\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"vp09.01.20.08.01\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"vp09.01.20.08.01.01.01.01.00\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/mp4; codecs=\"vp09.02.10.10.01.09.16.09.01\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/ogg", "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/ogg; codecs=\"flac\"", "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/ogg; codecs=\"opus\"", "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/ogg; codecs=\"theora\"", "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/ogg; codecs=\"theora, flac\"", "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/ogg; codecs=\"theora, vorbis\"", "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/ogg; codecs=\"vp8\"", "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/webm", "audioPlayType": "maybe", "mediaRecorder": true, "videoPlayType": "maybe"}, {"mimeType": "video/webm; codecs=\"av01.0.04M.08\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/webm; codecs=\"vorbis\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/webm; codecs=\"vorbis,vp9\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/webm; codecs=\"vp09.02.10.08\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/webm; codecs=\"vp8\"", "mediaSource": true, "audioPlayType": "probably", "mediaRecorder": true, "videoPlayType": "probably"}, {"mimeType": "video/webm; codecs=\"vp8, opus\"", "mediaSource": true, "audioPlayType": "probably", "mediaRecorder": true, "videoPlayType": "probably"}, {"mimeType": "video/webm; codecs=\"vp8, vorbis\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/webm; codecs=\"vp8.0\"", "audioPlayType": "probably", "mediaRecorder": true, "videoPlayType": "probably"}, {"mimeType": "video/webm; codecs=\"vp8.0, vorbis\"", "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/webm; codecs=\"vp9\"", "mediaSource": true, "audioPlayType": "probably", "mediaRecorder": true, "videoPlayType": "probably"}, {"mimeType": "video/webm; codecs=\"vp9, opus\"", "mediaSource": true, "audioPlayType": "probably", "mediaRecorder": true, "videoPlayType": "probably"}, {"mimeType": "video/webm; codecs=\"vp9, vorbis\"", "mediaSource": true, "audioPlayType": "probably", "videoPlayType": "probably"}, {"mimeType": "video/x-m4v", "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/x-m4v; codecs=\"avc1.42AC23\"", "audioPlayType": "maybe", "videoPlayType": "maybe"}, {"mimeType": "video/x-matroska", "mediaRecorder": true}], "navigator": {"oscpu": "_$obj!_undefined_//+_", "vendor": "Google Inc.", "appName": "Netscape", "buildID": "_$obj!_undefined_//+_", "product": "Gecko", "storage": "_$obj!_//+_", "vibrate": "_$obj!_//+_", "cpuClass": "_$obj!_undefined_//+_", "language": "en-US", "platform": "MacIntel", "bluetooth": "_$obj!_//+_", "languages": ["en-US"], "userAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36", "vendorSub": "", "appVersion": "5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36", "doNotTrack": null, "productSub": "20030107", "appCodeName": "Mozilla", "credentials": "_$obj!_//+_", "deviceMemory": 8, "msDoNotTrack": "_$obj!_undefined_//+_", "userLanguage": "_$obj!_undefined_//+_", "maxTouchPoints": 0, "systemLanguage": "_$obj!_undefined_//+_", "appMinorVersion": "_$obj!_undefined_//+_", "pdfViewerEnabled": true, "hardwareConcurrency": 12, "requestMediaKeySystemAccess": "_$obj!_//+_"}, "permissions": {"nfc": {"msg": "Failed to execute 'query' on 'Permissions': Web NFC is not enabled.", "exType": "TypeError"}, "midi": {"state": "granted"}, "push": {"msg": "Failed to execute 'query' on 'Permissions': Push Permission without userVisibleOnly:true isn't supported yet.", "exType": "DOMException"}, "camera": {"state": "prompt"}, "speaker": {"msg": "Failed to execute 'query' on 'Permissions': Failed to read the 'name' property from 'PermissionDescriptor': The provided value 'speaker' is not a valid enum value of type PermissionName.", "exType": "TypeError"}, "bluetooth": {"msg": "Failed to execute 'query' on 'Permissions': Failed to read the 'name' property from 'PermissionDescriptor': The provided value 'bluetooth' is not a valid enum value of type PermissionName.", "exType": "TypeError"}, "clipboard": {"msg": "Failed to execute 'query' on 'Permissions': Failed to read the 'name' property from 'PermissionDescriptor': The provided value 'clipboard' is not a valid enum value of type PermissionName.", "exType": "TypeError"}, "gyroscope": {"state": "granted"}, "microphone": {"state": "prompt"}, "device-info": {"msg": "Failed to execute 'query' on 'Permissions': Failed to read the 'name' property from 'PermissionDescriptor': The provided value 'device-info' is not a valid enum value of type PermissionName.", "exType": "TypeError"}, "font-access": {"msg": "Failed to execute 'query' on 'Permissions': Failed to read the 'name' property from 'PermissionDescriptor': The provided value 'font-access' is not a valid enum value of type PermissionName.", "exType": "TypeError"}, "geolocation": {"state": "prompt"}, "magnetometer": {"state": "granted"}, "accelerometer": {"state": "granted"}, "notifications": {"state": "prompt"}, "clipboard-read": {"state": "prompt"}, "idle-detection": {"state": "prompt"}, "storage-access": {"msg": "Failed to execute 'query' on 'Permissions': The Storage Access API is not enabled.", "exType": "TypeError"}, "background-sync": {"state": "granted"}, "clipboard-write": {"state": "granted"}, "display-capture": {"state": "prompt"}, "payment-handler": {"state": "granted"}, "background-fetch": {"state": "granted"}, "screen-wake-lock": {"state": "granted"}, "system-wake-lock": {"msg": "Failed to execute 'query' on 'Permissions': System Wake Lock is not enabled.", "exType": "TypeError"}, "window-placement": {"state": "prompt"}, "persistent-storage": {"state": "prompt"}, "accessibility-events": {"msg": "Failed to execute 'query' on 'Permissions': Accessibility Object Model is not enabled.", "exType": "TypeError"}, "ambient-light-sensor": {"msg": "Failed to execute 'query' on 'Permissions': GenericSensorExtraClasses flag is not enabled.", "exType": "TypeError"}, "periodic-background-sync": {"state": "denied"}}, "mediaDevices": [{"kind": "audioinput", "label": "", "groupId": "", "deviceId": ""}, {"kind": "videoinput", "label": "", "groupId": "", "deviceId": ""}, {"kind": "audiooutput", "label": "", "groupId": "", "deviceId": ""}], "windowVersion": ["Object", "Function", "Array", "Number", "parseFloat", "parseInt", "Infinity", "NaN", "undefined", "Boolean", "String", "Symbol", "Date", "Promise", "RegExp", "Error", "AggregateError", "EvalError", "RangeError", "ReferenceError", "SyntaxError", "TypeError", "URIError", "globalThis", "JSON", "Math", "Intl", "ArrayBuffer", "Atomics", "Uint8Array", "Int8Array", "Uint16Array", "Int16Array", "Uint32Array", "Int32Array", "Float32Array", "Float64Array", "Uint8ClampedArray", "BigUint64Array", "BigInt64Array", "DataView", "Map", "BigInt", "Set", "WeakMap", "WeakSet", "Proxy", "Reflect", "FinalizationRegistry", "WeakRef", "decodeURI", "decodeURIComponent", "encodeURI", "encodeURIComponent", "escape", "unescape", "eval", "isFinite", "isNaN", "console", "Option", "Image", "Audio", "webkitURL", "webkitRTCPeerConnection", "webkitMediaStream", "WebKitMutationObserver", "WebKitCSSMatrix", "XSLTProcessor", "XPathResult", "XPathExpression", "XPathEvaluator", "XMLSerializer", "XMLHttpRequestUpload", "XMLHttpRequestEventTarget", "XMLHttpRequest", "XMLDocument", "WritableStreamDefaultWriter", "WritableStreamDefaultController", "WritableStream", "Worker", "Window", "WheelEvent", "WebSocket", "WebGLVertexArrayObject", "WebGLUniformLocation", "WebGLTransformFeedback", "WebGLTexture", "WebGLSync", "WebGLShaderPrecisionFormat", "WebGLShader", "WebGLSampler", "WebGLRenderingContext", "WebGLRenderbuffer", "WebGLQuery", "WebGLProgram", "WebGLFramebuffer", "WebGLContextEvent", "WebGLBuffer", "WebGLActiveInfo", "WebGL2RenderingContext", "WaveShaperNode", "VisualViewport", "VirtualKeyboardGeometryChangeEvent", "ValidityState", "VTTCue", "UserActivation", "URLSearchParams", "URLPattern", "URL", "UIEvent", "TrustedTypePolicyFactory", "TrustedTypePolicy", "TrustedScriptURL", "TrustedScript", "TrustedHTML", "TreeWalker", "TransitionEvent", "TransformStreamDefaultController", "TransformStream", "TrackEvent", "TouchList", "TouchEvent", "Touch", "TimeRanges", "TextTrackList", "TextTrackCueList", "TextTrackCue", "TextTrack", "TextMetrics", "TextEvent", "TextEncoderStream", "TextEncoder", "TextDecoderStream", "TextDecoder", "Text", "TaskSignal", "TaskPriorityChangeEvent", "TaskController", "TaskAttributionTiming", "SyncManager", "SubmitEvent", "StyleSheetList", "StyleSheet", "StylePropertyMapReadOnly", "StylePropertyMap", "StorageEvent", "Storage", "StereoPannerNode", "StaticRange", "SourceBufferList", "SourceBuffer", "ShadowRoot", "Selection", "SecurityPolicyViolationEvent", "ScriptProcessorNode", "ScreenOrientation", "Screen", "Scheduling", "Scheduler", "SVGViewElement", "SVGUseElement", "SVGUnitTypes", "SVGTransformList", "SVGTransform", "SVGTitleElement", "SVGTextPositioningElement", "SVGTextPathElement", "SVGTextElement", "SVGTextContentElement", "SVGTSpanElement", "SVGSymbolElement", "SVGSwitchElement", "SVGStyleElement", "SVGStringList", "SVGStopElement", "SVGSetElement", "SVGScriptElement", "SVGSVGElement", "SVGRectElement", "SVGRect", "SVGRadialGradientElement", "SVGPreserveAspectRatio", "SVGPolylineElement", "SVGPolygonElement", "SVGPointList", "SVGPoint", "SVGPatternElement", "SVGPathElement", "SVGNumberList", "SVGNumber", "SVGMetadataElement", "SVGMatrix", "SVGMaskElement", "SVGMarkerElement", "SVGMPathElement", "SVGLinearGradientElement", "SVGLineElement", "SVGLengthList", "SVGLength", "SVGImageElement", "SVGGraphicsElement", "SVGGradientElement", "SVGGeometryElement", "SVGGElement", "SVGForeignObjectElement", "SVGFilterElement", "SVGFETurbulenceElement", "SVGFETileElement", "SVGFESpotLightElement", "SVGFESpecularLightingElement", "SVGFEPointLightElement", "SVGFEOffsetElement", "SVGFEMorphologyElement", "SVGFEMergeNodeElement", "SVGFEMergeElement", "SVGFEImageElement", "SVGFEGaussianBlurElement", "SVGFEFuncRElement", "SVGFEFuncGElement", "SVGFEFuncBElement", "SVGFEFuncAElement", "SVGFEFloodElement", "SVGFEDropShadowElement", "SVGFEDistantLightElement", "SVGFEDisplacementMapElement", "SVGFEDiffuseLightingElement", "SVGFEConvolveMatrixElement", "SVGFECompositeElement", "SVGFEComponentTransferElement", "SVGFEColorMatrixElement", "SVGFEBlendElement", "SVGEllipseElement", "SVGElement", "SVGDescElement", "SVGDefsElement", "SVGComponentTransferFunctionElement", "SVGClipPathElement", "SVGCircleElement", "SVGAnimationElement", "SVGAnimatedTransformList", "SVGAnimatedString", "SVGAnimatedRect", "SVGAnimatedPreserveAspectRatio", "SVGAnimatedNumberList", "SVGAnimatedNumber", "SVGAnimatedLengthList", "SVGAnimatedLength", "SVGAnimatedInteger", "SVGAnimatedEnumeration", "SVGAnimatedBoolean", "SVGAnimatedAngle", "SVGAnimateTransformElement", "SVGAnimateMotionElement", "SVGAnimateElement", "SVGAngle", "SVGAElement", "Response", "ResizeObserverSize", "ResizeObserverEntry", "ResizeObserver", "Request", "ReportingObserver", "ReadableStreamDefaultReader", "ReadableStreamDefaultController", "ReadableStreamBYOBRequest", "ReadableStreamBYOBReader", "ReadableStream", "ReadableByteStreamController", "Range", "RadioNodeList", "RTCTrackEvent", "RTCStatsReport", "RTCSessionDescription", "RTCSctpTransport", "RTCRtpTransceiver", "RTCRtpSender", "RTCRtpReceiver", "RTCPeerConnectionIceEvent", "RTCPeerConnectionIceErrorEvent", "RTCPeerConnection", "RTCIceTransport", "RTCIceCandidate", "RTCErrorEvent", "RTCError", "RTCEncodedVideoFrame", "RTCEncodedAudioFrame", "RTCDtlsTransport", "RTCDataChannelEvent", "RTCDataChannel", "RTCDTMFToneChangeEvent", "RTCDTMFSender", "RTCCertificate", "PromiseRejectionEvent", "ProgressEvent", "Profiler", "ProcessingInstruction", "PopStateEvent", "PointerEvent", "PluginArray", "Plugin", "PictureInPictureWindow", "PictureInPictureEvent", "PeriodicWave", "PerformanceTiming", "PerformanceServerTiming", "PerformanceResourceTiming", "PerformancePaintTiming", "PerformanceObserverEntryList", "PerformanceObserver", "PerformanceNavigationTiming", "PerformanceNavigation", "PerformanceMeasure", "PerformanceMark", "PerformanceLongTaskTiming", "PerformanceEventTiming", "PerformanceEntry", "PerformanceElementTiming", "Performance", "Path2D", "PannerNode", "PageTransitionEvent", "OverconstrainedError", "OscillatorNode", "OffscreenCanvasRenderingContext2D", "OffscreenCanvas", "OfflineAudioContext", "OfflineAudioCompletionEvent", "NodeList", "NodeIterator", "NodeFilter", "Node", "NetworkInformation", "Navigator", "NavigationTransition", "NavigationHistoryEntry", "NavigationDestination", "NavigationCurrentEntryChangeEvent", "Navigation", "NavigateEvent", "NamedNodeMap", "MutationRecord", "MutationObserver", "MouseEvent", "MimeTypeArray", "MimeType", "MessagePort", "MessageEvent", "MessageChannel", "MediaStreamTrackProcessor", "MediaStreamTrackGenerator", "MediaStreamTrackEvent", "MediaStreamTrack", "MediaStreamEvent", "MediaStreamAudioSourceNode", "MediaStreamAudioDestinationNode", "MediaStream", "MediaSourceHandle", "MediaSource", "MediaRecorder", "MediaQueryListEvent", "MediaQueryList", "MediaList", "MediaError", "MediaEncryptedEvent", "MediaElementAudioSourceNode", "MediaCapabilities", "Location", "LayoutShiftAttribution", "LayoutShift", "LargestContentfulPaint", "KeyframeEffect", "KeyboardEvent", "IntersectionObserverEntry", "IntersectionObserver", "InputEvent", "InputDeviceInfo", "InputDeviceCapabilities", "ImageData", "ImageCapture", "ImageBitmapRenderingContext", "ImageBitmap", "IdleDeadline", "IIRFilterNode", "IDBVersionChangeEvent", "IDBTransaction", "IDBRequest", "IDBOpenDBRequest", "IDBObjectStore", "IDBKeyRange", "IDBIndex", "IDBFactory", "IDBDatabase", "IDBCursorWithValue", "IDBCursor", "History", "Headers", "HashChangeEvent", "HTMLVideoElement", "HTMLUnknownElement", "HTMLUListElement", "HTMLTrackElement", "HTMLTitleElement", "HTMLTimeElement", "HTMLTextAreaElement", "HTMLTemplateElement", "HTMLTableSectionElement", "HTMLTableRowElement", "HTMLTableElement", "HTMLTableColElement", "HTMLTableCellElement", "HTMLTableCaptionElement", "HTMLStyleElement", "HTMLSpanElement", "HTMLSourceElement", "HTMLSlotElement", "HTMLSelectElement", "HTMLScriptElement", "HTMLQuoteElement", "HTMLProgressElement", "HTMLPreElement", "HTMLPictureElement", "HTMLParamElement", "HTMLParagraphElement", "HTMLOutputElement", "HTMLOptionsCollection", "HTMLOptionElement", "HTMLOptGroupElement", "HTMLObjectElement", "HTMLOListElement", "HTMLModElement", "HTMLMeterElement", "HTMLMetaElement", "HTMLMenuElement", "HTMLMediaElement", "HTMLMarqueeElement", "HTMLMapElement", "HTMLLinkElement", "HTMLLegendElement", "HTMLLabelElement", "HTMLLIElement", "HTMLInputElement", "HTMLImageElement", "HTMLIFrameElement", "HTMLHtmlElement", "HTMLHeadingElement", "HTMLHeadElement", "HTMLHRElement", "HTMLFrameSetElement", "HTMLFrameElement", "HTMLFormElement", "HTMLFormControlsCollection", "HTMLFontElement", "HTMLFieldSetElement", "HTMLEmbedElement", "HTMLElement", "HTMLDocument", "HTMLDivElement", "HTMLDirectoryElement", "HTMLDialogElement", "HTMLDetailsElement", "HTMLDataListElement", "HTMLDataElement", "HTMLDListElement", "HTMLCollection", "HTMLCanvasElement", "HTMLButtonElement", "HTMLBodyElement", "HTMLBaseElement", "HTMLBRElement", "HTMLAudioElement", "HTMLAreaElement", "HTMLAnchorElement", "HTMLAllCollection", "GeolocationPositionError", "GeolocationPosition", "GeolocationCoordinates", "Geolocation", "GamepadHapticActuator", "GamepadEvent", "GamepadButton", "Gamepad", "GainNode", "FormDataEvent", "FormData", "FontFaceSetLoadEvent", "FontFace", "FocusEvent", "FileReader", "FileList", "File", "FeaturePolicy", "External", "EventTarget", "EventSource", "EventCounts", "Event", "ErrorEvent", "ElementInternals", "Element", "DynamicsCompressorNode", "DragEvent", "DocumentType", "DocumentFragment", "Document", "DelayNode", "DecompressionStream", "DataTransferItemList", "DataTransferItem", "DataTransfer", "DOMTokenList", "DOMStringMap", "DOMStringList", "DOMRectReadOnly", "DOMRectList", "DOMRect", "DOMQuad", "DOMPointReadOnly", "DOMPoint", "DOMParser", "DOMMatrixReadOnly", "DOMMatrix", "DOMImplementation", "DOMException", "DOMError", "CustomStateSet", "CustomEvent", "CustomElementRegistry", "Crypto", "CountQueuingStrategy", "ConvolverNode", "ConstantSourceNode", "CompressionStream", "CompositionEvent", "Comment", "CloseEvent", "ClipboardEvent", "CharacterData", "ChannelSplitterNode", "ChannelMergerNode", "CanvasRenderingContext2D", "CanvasPattern", "CanvasGradient", "CanvasCaptureMediaStreamTrack", "CSSVariableReferenceValue", "CSSUnparsedValue", "CSSUnitValue", "CSSTranslate", "CSSTransformValue", "CSSTransformComponent", "CSSSupportsRule", "CSSStyleValue", "CSSStyleSheet", "CSSStyleRule", "CSSStyleDeclaration", "CSSSkewY", "CSSSkewX", "CSSSkew", "CSSScale", "CSSRuleList", "CSSRule", "CSSRotate", "CSSPropertyRule", "CSSPositionValue", "CSSPerspective", "CSSPageRule", "CSSNumericValue", "CSSNumericArray", "CSSNamespaceRule", "CSSMediaRule", "CSSMatrixComponent", "CSSMathValue", "CSSMathSum", "CSSMathProduct", "CSSMathNegate", "CSSMathMin", "CSSMathMax", "CSSMathInvert", "CSSMathClamp", "CSSLayerStatementRule", "CSSLayerBlockRule", "CSSKeywordValue", "CSSKeyframesRule", "CSSKeyframeRule", "CSSImportRule", "CSSImageValue", "CSSGroupingRule", "CSSFontPaletteValuesRule", "CSSFontFaceRule", "CSSCounterStyleRule", "CSSContainerRule", "CSSConditionRule", "CSS", "CDATASection", "ByteLengthQueuingStrategy", "BroadcastChannel", "BlobEvent", "Blob", "BiquadFilterNode", "BeforeUnloadEvent", "BeforeInstallPromptEvent", "BaseAudioContext", "BarProp", "AudioWorkletNode", "AudioSinkInfo", "AudioScheduledSourceNode", "AudioProcessingEvent", "AudioParamMap", "AudioParam", "AudioNode", "AudioListener", "AudioDestinationNode", "AudioContext", "AudioBufferSourceNode", "AudioBuffer", "Attr", "AnimationEvent", "AnimationEffect", "Animation", "AnalyserNode", "AbstractRange", "AbortSignal", "AbortController", "window", "self", "document", "name", "location", "customElements", "history", "navigation", "locationbar", "menubar", "personalbar", "scrollbars", "statusbar", "toolbar", "status", "closed", "frames", "length", "top", "opener", "parent", "frameElement", "navigator", "origin", "external", "screen", "innerWidth", "innerHeight", "scrollX", "pageXOffset", "scrollY", "pageYOffset", "visualViewport", "screenX", "screenY", "outerWidth", "outerHeight", "devicePixelRatio", "event", "clientInformation", "offscreenBuffering", "screenLeft", "screenTop", "styleMedia", "onsearch", "isSecureContext", "trustedTypes", "performance", "onappinstalled", "onbeforeinstallprompt", "crypto", "indexedDB", "sessionStorage", "localStorage", "onbeforexrselect", "onabort", "onbeforeinput", "onblur", "oncancel", "oncanplay", "oncanplaythrough", "onchange", "onclick", "onclose", "oncontextlost", "oncontextmenu", "oncontextrestored", "oncuechange", "ondblclick", "ondrag", "ondragend", "ondragenter", "ondragleave", "ondragover", "ondragstart", "ondrop", "ondurationchange", "onemptied", "onended", "onerror", "onfocus", "onformdata", "oninput", "oninvalid", "onkeydown", "onkeypress", "onkeyup", "onload", "onloadeddata", "onloadedmetadata", "onloadstart", "onmousedown", "onmouseenter", "onmouseleave", "onmousemove", "onmouseout", "onmouseover", "onmouseup", "onmousewheel", "onpause", "onplay", "onplaying", "onprogress", "onratechange", "onreset", "onresize", "onscroll", "onsecuritypolicyviolation", "onseeked", "onseeking", "onselect", "onslotchange", "onstalled", "onsubmit", "onsuspend", "ontimeupdate", "ontoggle", "onvolumechange", "onwaiting", "onwebkitanimationend", "onwebkitanimationiteration", "onwebkitanimationstart", "onwebkittransitionend", "onwheel", "onauxclick", "ongotpointercapture", "onlostpointercapture", "onpointerdown", "onpointermove", "onpointerrawupdate", "onpointerup", "onpointercancel", "onpointerover", "onpointerout", "onpointerenter", "onpointerleave", "onselectstart", "onselectionchange", "onanimationend", "onanimationiteration", "onanimationstart", "ontransitionrun", "ontransitionstart", "ontransitionend", "ontransitioncancel", "onafterprint", "onbeforeprint", "onbeforeunload", "onhashchange", "onlanguagechange", "onmessage", "onmessageerror", "onoffline", "ononline", "onpagehide", "onpageshow", "onpopstate", "onrejectionhandled", "onstorage", "onunhandledrejection", "onunload", "crossOriginIsolated", "scheduler", "alert", "atob", "blur", "btoa", "cancelAnimationFrame", "cancelIdleCallback", "captureEvents", "clearInterval", "clearTimeout", "close", "confirm", "createImageBitmap", "fetch", "find", "focus", "getComputedStyle", "getSelection", "matchMedia", "moveBy", "moveTo", "open", "postMessage", "print", "prompt", "queueMicrotask", "releaseEvents", "reportError", "requestAnimationFrame", "requestIdleCallback", "resizeBy", "resizeTo", "scroll", "scrollBy", "scrollTo", "setInterval", "setTimeout", "stop", "structuredClone", "webkitCancelAnimationFrame", "webkitRequestAnimationFrame", "chrome", "WebAssembly", "caches", "cookieStore", "ondevicemotion", "ondeviceorientation", "ondeviceorientationabsolute", "documentPictureInPicture", "launchQueue", "onbeforematch", "onbeforetoggle", "AbsoluteOrientationSensor", "Accelerometer", "AudioWorklet", "BatteryManager", "Cache", "CacheStorage", "Clipboard", "ClipboardItem", "CookieChangeEvent", "CookieStore", "CookieStoreManager", "Credential", "CredentialsContainer", "CryptoKey", "DeviceMotionEvent", "DeviceMotionEventAcceleration", "DeviceMotionEventRotationRate", "DeviceOrientationEvent", "FederatedCredential", "GravitySensor", "Gyroscope", "Keyboard", "KeyboardLayoutMap", "LinearAccelerationSensor", "Lock", "LockManager", "MIDIAccess", "MIDIConnectionEvent", "MIDIInput", "MIDIInputMap", "MIDIMessageEvent", "MIDIOutput", "MIDIOutputMap", "MIDIPort", "MediaDeviceInfo", "MediaDevices", "MediaKeyMessageEvent", "MediaKeySession", "MediaKeyStatusMap", "MediaKeySystemAccess", "MediaKeys", "NavigationPreloadManager", "NavigatorManagedData", "OrientationSensor", "PasswordCredential", "RelativeOrientationSensor", "Sanitizer", "ScreenDetailed", "ScreenDetails", "Sensor", "SensorErrorEvent", "ServiceWorker", "ServiceWorkerContainer", "ServiceWorkerRegistration", "StorageManager", "SubtleCrypto", "VirtualKeyboard", "WebTransport", "WebTransportBidirectionalStream", "WebTransportDatagramDuplexStream", "WebTransportError", "Worklet", "XRDOMOverlayState", "XRLayer", "XRWebGLBinding", "AudioData", "EncodedAudioChunk", "EncodedVideoChunk", "ImageTrack", "ImageTrackList", "VideoColorSpace", "VideoFrame", "AudioDecoder", "AudioEncoder", "ImageDecoder", "VideoDecoder", "VideoEncoder", "AuthenticatorAssertionResponse", "AuthenticatorAttestationResponse", "AuthenticatorResponse", "PublicKeyCredential", "BarcodeDetector", "Bluetooth", "BluetoothCharacteristicProperties", "BluetoothDevice", "BluetoothRemoteGATTCharacteristic", "BluetoothRemoteGATTDescriptor", "BluetoothRemoteGATTServer", "BluetoothRemoteGATTService", "CaptureController", "DocumentPictureInPicture", "EyeDropper", "FileSystemDirectoryHandle", "FileSystemFileHandle", "FileSystemHandle", "FileSystemWritableFileStream", "FontData", "FragmentDirective", "GPU", "GPUAdapter", "GPUAdapterInfo", "GPUBindGroup", "GPUBindGroupLayout", "GPUBuffer", "GPUBufferUsage", "GPUCanvasContext", "GPUColorWrite", "GPUCommandBuffer", "GPUCommandEncoder", "GPUCompilationInfo", "GPUCompilationMessage", "GPUComputePassEncoder", "GPUComputePipeline", "GPUDevice", "GPUDeviceLostInfo", "GPUError", "GPUExternalTexture", "GPUInternalError", "GPUMapMode", "GPUOutOfMemoryError", "GPUPipelineError", "GPUPipelineLayout", "GPUQuerySet", "GPUQueue", "GPURenderBundle", "GPURenderBundleEncoder", "GPURenderPassEncoder", "GPURenderPipeline", "GPUSampler", "GPUShaderModule", "GPUShaderStage", "GPUSupportedFeatures", "GPUSupportedLimits", "GPUTexture", "GPUTextureUsage", "GPUTextureView", "GPUUncapturedErrorEvent", "GPUValidationError", "WGSLLanguageFeatures", "HID", "HIDConnectionEvent", "HIDDevice", "HIDInputReportEvent", "IdentityCredential", "IdentityProvider", "IdleDetector", "LaunchParams", "LaunchQueue", "OTPCredential", "PaymentAddress", "PaymentRequest", "PaymentResponse", "PaymentMethodChangeEvent", "Presentation", "PresentationAvailability", "PresentationConnection", "PresentationConnectionAvailableEvent", "PresentationConnectionCloseEvent", "PresentationConnectionList", "PresentationReceiver", "PresentationRequest", "Serial", "SerialPort", "ToggleEvent", "USB", "USBAlternateInterface", "USBConfiguration", "USBConnectionEvent", "USBDevice", "USBEndpoint", "USBInTransferResult", "USBInterface", "USBIsochronousInTransferPacket", "USBIsochronousInTransferResult", "USBIsochronousOutTransferPacket", "USBIsochronousOutTransferResult", "USBOutTransferResult", "WakeLock", "WakeLockSentinel", "WindowControlsOverlay", "WindowControlsOverlayGeometryChangeEvent", "XRAnchor", "XRAnchorSet", "XRBoundedReferenceSpace", "XRCPUDepthInformation", "XRCamera", "XRDepthInformation", "XRFrame", "XRHitTestResult", "XRHitTestSource", "XRInputSource", "XRInputSourceArray", "XRInputSourceEvent", "XRInputSourcesChangeEvent", "XRLightEstimate", "XRLightProbe", "XRPose", "XRRay", "XRReferenceSpace", "XRReferenceSpaceEvent", "XRRenderState", "XRRigidTransform", "XRSession", "XRSessionEvent", "XRSpace", "XRSystem", "XRTransientInputHitTestResult", "XRTransientInputHitTestSource", "XRView", "XRViewerPose", "XRViewport", "XRWebGLDepthInformation", "XRWebGLLayer", "getScreenDetails", "queryLocalFonts", "showDirectoryPicker", "showOpenFilePicker", "showSaveFilePicker", "originAgentCluster", "credentialless", "speechSynthesis", "oncontentvisibilityautostatechange", "onscrollend", "AnimationPlaybackEvent", "AnimationTimeline", "CSSAnimation", "CSSTransition", "DocumentTimeline", "BackgroundFetchManager", "BackgroundFetchRecord", "BackgroundFetchRegistration", "BluetoothUUID", "BrowserCaptureMediaStreamTrack", "CropTarget", "ContentVisibilityAutoStateChangeEvent", "DelegatedInkTrailPresenter", "Ink", "DocumentPictureInPictureEvent", "Highlight", "HighlightRegistry", "MathMLElement", "MediaMetadata", "MediaSession", "MutationEvent", "NavigatorUAData", "Notification", "PaymentManager", "PaymentRequestUpdateEvent", "PeriodicSyncManager", "PermissionStatus", "Permissions", "PushManager", "PushSubscription", "PushSubscriptionOptions", "RemotePlayback", "ScrollTimeline", "ViewTimeline", "SharedWorker", "SpeechSynthesisErrorEvent", "SpeechSynthesisEvent", "SpeechSynthesisUtterance", "VideoPlaybackQuality", "ViewTransition", "VisibilityStateEntry", "webkitSpeechGrammar", "webkitSpeechGrammarList", "webkitSpeechRecognition", "webkitSpeechRecognitionError", "webkitSpeechRecognitionEvent", "openDatabase", "webkitRequestFileSystem", "webkitResolveLocalFileSystemURL", "initialTimestamps", "thunderboltTag", "thunderboltVersion", "fedops", "e", "r", "viewerModel", "fetchDynamicModel", "dynamicModelPromise", "commonConfig"], "highEntropyValues": {"brands": [{"brand": "Chromium", "version": "116"}, {"brand": "Not)A;Brand", "version": "24"}, {"brand": "Google Chrome", "version": "116"}], "mobile": false, "bitness": "64", "platform": "macOS", "architecture": "arm", "fullVersionList": [{"brand": "Chromium", "version": "116.0.5845.110"}, {"brand": "Not)A;Brand", "version": "24.0.0.0"}, {"brand": "Google Chrome", "version": "116.0.5845.110"}], "platformVersion": "13.3.1"}, "htmlElementVersion": ["version", "title", "lang", "translate", "dir", "hidden", "accessKey", "draggable", "spellcheck", "autocapitalize", "contentEditable", "enterKeyHint", "isContentEditable", "inputMode", "virtualKeyboardPolicy", "offsetParent", "offsetTop", "offsetLeft", "offsetWidth", "offsetHeight", "innerText", "outerText", "onbeforexrselect", "onabort", "onbeforeinput", "onblur", "oncancel", "oncanplay", "oncanplaythrough", "onchange", "onclick", "onclose", "oncontextlost", "oncontextmenu", "oncontextrestored", "oncuechange", "ondblclick", "ondrag", "ondragend", "ondragenter", "ondragleave", "ondragover", "ondragstart", "ondrop", "ondurationchange", "onemptied", "onended", "onerror", "onfocus", "onformdata", "oninput", "oninvalid", "onkeydown", "onkeypress", "onkeyup", "onload", "onloadeddata", "onloadedmetadata", "onloadstart", "onmousedown", "onmouseenter", "onmouseleave", "onmousemove", "onmouseout", "onmouseover", "onmouseup", "onmousewheel", "onpause", "onplay", "onplaying", "onprogress", "onratechange", "onreset", "onresize", "onscroll", "onsecuritypolicyviolation", "onseeked", "onseeking", "onselect", "onslotchange", "onstalled", "onsubmit", "onsuspend", "ontimeupdate", "ontoggle", "onvolumechange", "onwaiting", "onwebkitanimationend", "onwebkitanimationiteration", "onwebkitanimationstart", "onwebkittransitionend", "onwheel", "onauxclick", "ongotpointercapture", "onlostpointercapture", "onpointerdown", "onpointermove", "onpointerrawupdate", "onpointerup", "onpointercancel", "onpointerover", "onpointerout", "onpointerenter", "onpointerleave", "onselectstart", "onselectionchange", "onanimationend", "onanimationiteration", "onanimationstart", "ontransitionrun", "ontransitionstart", "ontransitionend", "ontransitioncancel", "oncopy", "oncut", "onpaste", "dataset", "nonce", "autofocus", "tabIndex", "style", "attributeStyleMap", "attachInternals", "blur", "click", "focus", "inert", "oncontentvisibilityautostatechange", "onscrollend", "popover", "onbeforetoggle", "onbeforematch", "hidePopover", "showPopover", "togglePopover", "namespaceURI", "prefix", "localName", "tagName", "id", "className", "classList", "slot", "attributes", "shadowRoot", "part", "assignedSlot", "innerHTML", "outerHTML", "scrollTop", "scrollLeft", "scrollWidth", "scrollHeight", "clientTop", "clientLeft", "clientWidth", "clientHeight", "onbeforecopy", "onbeforecut", "onbeforepaste", "onsearch", "elementTiming", "onfullscreenchange", "onfullscreenerror", "onwebkitfullscreenchange", "onwebkitfullscreenerror", "role", "ariaAtomic", "ariaAutoComplete", "ariaBusy", "ariaBrailleLabel", "ariaBrailleRoleDescription", "ariaChecked", "ariaColCount", "ariaColIndex", "ariaColSpan", "ariaCurrent", "ariaDescription", "ariaDisabled", "ariaExpanded", "ariaHasPopup", "ariaHidden", "ariaInvalid", "ariaKeyShortcuts", "ariaLabel", "ariaLevel", "ariaLive", "ariaModal", "ariaMultiLine", "ariaMultiSelectable", "ariaOrientation", "ariaPlaceholder", "ariaPosInSet", "ariaPressed", "ariaReadOnly", "ariaRelevant", "ariaRequired", "ariaRoleDescription", "ariaRowCount", "ariaRowIndex", "ariaRowSpan", "ariaSelected", "ariaSetSize", "ariaSort", "ariaValueMax", "ariaValueMin", "ariaValueNow", "ariaValueText", "children", "firstElementChild", "lastElementChild", "childElementCount", "previousElementSibling", "nextElementSibling", "after", "animate", "append", "attachShadow", "before", "closest", "computedStyleMap", "getAttribute", "getAttributeNS", "getAttributeNames", "getAttributeNode", "getAttributeNodeNS", "getBoundingClientRect", "getClientRects", "getElementsByClassName", "getElementsByTagName", "getElementsByTagNameNS", "getInnerHTML", "hasAttribute", "hasAttributeNS", "hasAttributes", "hasPointerCapture", "insertAdjacentElement", "insertAdjacentHTML", "insertAdjacentText", "matches", "prepend", "querySelector", "querySelectorAll", "releasePointerCapture", "remove", "removeAttribute", "removeAttributeNS", "removeAttributeNode", "replaceChildren", "replaceWith", "requestFullscreen", "requestPointerLock", "scroll", "scrollBy", "scrollIntoView", "scrollIntoViewIfNeeded", "scrollTo", "setAttribute", "setAttributeNS", "setAttributeNode", "setAttributeNodeNS", "setPointerCapture", "toggleAttribute", "webkitMatchesSelector", "webkitRequestFullScreen", "webkitRequestFullscreen", "checkVisibility", "getAnimations", "setHTML", "nodeType", "nodeName", "baseURI", "isConnected", "ownerDocument", "parentNode", "parentElement", "childNodes", "firstChild", "lastChild", "previousSibling", "nextSibling", "nodeValue", "textContent", "ELEMENT_NODE", "ATTRIBUTE_NODE", "TEXT_NODE", "CDATA_SECTION_NODE", "ENTITY_REFERENCE_NODE", "ENTITY_NODE", "PROCESSING_INSTRUCTION_NODE", "COMMENT_NODE", "DOCUMENT_NODE", "DOCUMENT_TYPE_NODE", "DOCUMENT_FRAGMENT_NODE", "NOTATION_NODE", "DOCUMENT_POSITION_DISCONNECTED", "DOCUMENT_POSITION_PRECEDING", "DOCUMENT_POSITION_FOLLOWING", "DOCUMENT_POSITION_CONTAINS", "DOCUMENT_POSITION_CONTAINED_BY", "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC", "appendChild", "cloneNode", "compareDocumentPosition", "contains", "getRootNode", "hasChildNodes", "insertBefore", "isDefaultNamespace", "isEqualNode", "isSameNode", "lookupNamespaceURI", "lookupPrefix", "normalize", "removeChild", "replaceChild", "addEventListener", "dispatchEvent", "removeEventListener"]}
diff --git a/fingerprinting/fp_chrome.json b/fingerprinting/fp_chrome.json
new file mode 100644
index 0000000000..af32b893f3
--- /dev/null
+++ b/fingerprinting/fp_chrome.json
@@ -0,0 +1,7400 @@
+{
+  "plugins": {
+    "mimeTypes": [
+      {
+        "type": "application/pdf",
+        "suffixes": "pdf",
+        "description": "Portable Document Format",
+        "__pluginName": "PDF Viewer"
+      },
+      {
+        "type": "text/pdf",
+        "suffixes": "pdf",
+        "description": "Portable Document Format",
+        "__pluginName": "PDF Viewer"
+      }
+    ],
+    "plugins": [
+      {
+        "name": "PDF Viewer",
+        "filename": "internal-pdf-viewer",
+        "description": "Portable Document Format",
+        "__mimeTypes": [
+          "application/pdf",
+          "text/pdf"
+        ]
+      },
+      {
+        "name": "Chrome PDF Viewer",
+        "filename": "internal-pdf-viewer",
+        "description": "Portable Document Format",
+        "__mimeTypes": [
+          "application/pdf",
+          "text/pdf"
+        ]
+      },
+      {
+        "name": "Chromium PDF Viewer",
+        "filename": "internal-pdf-viewer",
+        "description": "Portable Document Format",
+        "__mimeTypes": [
+          "application/pdf",
+          "text/pdf"
+        ]
+      },
+      {
+        "name": "Microsoft Edge PDF Viewer",
+        "filename": "internal-pdf-viewer",
+        "description": "Portable Document Format",
+        "__mimeTypes": [
+          "application/pdf",
+          "text/pdf"
+        ]
+      },
+      {
+        "name": "WebKit built-in PDF",
+        "filename": "internal-pdf-viewer",
+        "description": "Portable Document Format",
+        "__mimeTypes": [
+          "application/pdf",
+          "text/pdf"
+        ]
+      }
+    ]
+  },
+  "gpu": {
+    "vendor": "Google Inc. (Apple)",
+    "renderer": "ANGLE (Apple, Apple M2 Pro, OpenGL 4.1)"
+  },
+  "windowVersion": [
+    "Object",
+    "Function",
+    "Array",
+    "Number",
+    "parseFloat",
+    "parseInt",
+    "Infinity",
+    "NaN",
+    "undefined",
+    "Boolean",
+    "String",
+    "Symbol",
+    "Date",
+    "Promise",
+    "RegExp",
+    "Error",
+    "AggregateError",
+    "EvalError",
+    "RangeError",
+    "ReferenceError",
+    "SyntaxError",
+    "TypeError",
+    "URIError",
+    "globalThis",
+    "JSON",
+    "Math",
+    "Intl",
+    "ArrayBuffer",
+    "Atomics",
+    "Uint8Array",
+    "Int8Array",
+    "Uint16Array",
+    "Int16Array",
+    "Uint32Array",
+    "Int32Array",
+    "Float32Array",
+    "Float64Array",
+    "Uint8ClampedArray",
+    "BigUint64Array",
+    "BigInt64Array",
+    "DataView",
+    "Map",
+    "BigInt",
+    "Set",
+    "WeakMap",
+    "WeakSet",
+    "Proxy",
+    "Reflect",
+    "FinalizationRegistry",
+    "WeakRef",
+    "decodeURI",
+    "decodeURIComponent",
+    "encodeURI",
+    "encodeURIComponent",
+    "escape",
+    "unescape",
+    "eval",
+    "isFinite",
+    "isNaN",
+    "console",
+    "Option",
+    "Image",
+    "Audio",
+    "webkitURL",
+    "webkitRTCPeerConnection",
+    "webkitMediaStream",
+    "WebKitMutationObserver",
+    "WebKitCSSMatrix",
+    "XSLTProcessor",
+    "XPathResult",
+    "XPathExpression",
+    "XPathEvaluator",
+    "XMLSerializer",
+    "XMLHttpRequestUpload",
+    "XMLHttpRequestEventTarget",
+    "XMLHttpRequest",
+    "XMLDocument",
+    "WritableStreamDefaultWriter",
+    "WritableStreamDefaultController",
+    "WritableStream",
+    "Worker",
+    "Window",
+    "WheelEvent",
+    "WebSocket",
+    "WebGLVertexArrayObject",
+    "WebGLUniformLocation",
+    "WebGLTransformFeedback",
+    "WebGLTexture",
+    "WebGLSync",
+    "WebGLShaderPrecisionFormat",
+    "WebGLShader",
+    "WebGLSampler",
+    "WebGLRenderingContext",
+    "WebGLRenderbuffer",
+    "WebGLQuery",
+    "WebGLProgram",
+    "WebGLFramebuffer",
+    "WebGLContextEvent",
+    "WebGLBuffer",
+    "WebGLActiveInfo",
+    "WebGL2RenderingContext",
+    "WaveShaperNode",
+    "VisualViewport",
+    "VirtualKeyboardGeometryChangeEvent",
+    "ValidityState",
+    "VTTCue",
+    "UserActivation",
+    "URLSearchParams",
+    "URLPattern",
+    "URL",
+    "UIEvent",
+    "TrustedTypePolicyFactory",
+    "TrustedTypePolicy",
+    "TrustedScriptURL",
+    "TrustedScript",
+    "TrustedHTML",
+    "TreeWalker",
+    "TransitionEvent",
+    "TransformStreamDefaultController",
+    "TransformStream",
+    "TrackEvent",
+    "TouchList",
+    "TouchEvent",
+    "Touch",
+    "TimeRanges",
+    "TextTrackList",
+    "TextTrackCueList",
+    "TextTrackCue",
+    "TextTrack",
+    "TextMetrics",
+    "TextEvent",
+    "TextEncoderStream",
+    "TextEncoder",
+    "TextDecoderStream",
+    "TextDecoder",
+    "Text",
+    "TaskSignal",
+    "TaskPriorityChangeEvent",
+    "TaskController",
+    "TaskAttributionTiming",
+    "SyncManager",
+    "SubmitEvent",
+    "StyleSheetList",
+    "StyleSheet",
+    "StylePropertyMapReadOnly",
+    "StylePropertyMap",
+    "StorageEvent",
+    "Storage",
+    "StereoPannerNode",
+    "StaticRange",
+    "SourceBufferList",
+    "SourceBuffer",
+    "ShadowRoot",
+    "Selection",
+    "SecurityPolicyViolationEvent",
+    "ScriptProcessorNode",
+    "ScreenOrientation",
+    "Screen",
+    "Scheduling",
+    "Scheduler",
+    "SVGViewElement",
+    "SVGUseElement",
+    "SVGUnitTypes",
+    "SVGTransformList",
+    "SVGTransform",
+    "SVGTitleElement",
+    "SVGTextPositioningElement",
+    "SVGTextPathElement",
+    "SVGTextElement",
+    "SVGTextContentElement",
+    "SVGTSpanElement",
+    "SVGSymbolElement",
+    "SVGSwitchElement",
+    "SVGStyleElement",
+    "SVGStringList",
+    "SVGStopElement",
+    "SVGSetElement",
+    "SVGScriptElement",
+    "SVGSVGElement",
+    "SVGRectElement",
+    "SVGRect",
+    "SVGRadialGradientElement",
+    "SVGPreserveAspectRatio",
+    "SVGPolylineElement",
+    "SVGPolygonElement",
+    "SVGPointList",
+    "SVGPoint",
+    "SVGPatternElement",
+    "SVGPathElement",
+    "SVGNumberList",
+    "SVGNumber",
+    "SVGMetadataElement",
+    "SVGMatrix",
+    "SVGMaskElement",
+    "SVGMarkerElement",
+    "SVGMPathElement",
+    "SVGLinearGradientElement",
+    "SVGLineElement",
+    "SVGLengthList",
+    "SVGLength",
+    "SVGImageElement",
+    "SVGGraphicsElement",
+    "SVGGradientElement",
+    "SVGGeometryElement",
+    "SVGGElement",
+    "SVGForeignObjectElement",
+    "SVGFilterElement",
+    "SVGFETurbulenceElement",
+    "SVGFETileElement",
+    "SVGFESpotLightElement",
+    "SVGFESpecularLightingElement",
+    "SVGFEPointLightElement",
+    "SVGFEOffsetElement",
+    "SVGFEMorphologyElement",
+    "SVGFEMergeNodeElement",
+    "SVGFEMergeElement",
+    "SVGFEImageElement",
+    "SVGFEGaussianBlurElement",
+    "SVGFEFuncRElement",
+    "SVGFEFuncGElement",
+    "SVGFEFuncBElement",
+    "SVGFEFuncAElement",
+    "SVGFEFloodElement",
+    "SVGFEDropShadowElement",
+    "SVGFEDistantLightElement",
+    "SVGFEDisplacementMapElement",
+    "SVGFEDiffuseLightingElement",
+    "SVGFEConvolveMatrixElement",
+    "SVGFECompositeElement",
+    "SVGFEComponentTransferElement",
+    "SVGFEColorMatrixElement",
+    "SVGFEBlendElement",
+    "SVGEllipseElement",
+    "SVGElement",
+    "SVGDescElement",
+    "SVGDefsElement",
+    "SVGComponentTransferFunctionElement",
+    "SVGClipPathElement",
+    "SVGCircleElement",
+    "SVGAnimationElement",
+    "SVGAnimatedTransformList",
+    "SVGAnimatedString",
+    "SVGAnimatedRect",
+    "SVGAnimatedPreserveAspectRatio",
+    "SVGAnimatedNumberList",
+    "SVGAnimatedNumber",
+    "SVGAnimatedLengthList",
+    "SVGAnimatedLength",
+    "SVGAnimatedInteger",
+    "SVGAnimatedEnumeration",
+    "SVGAnimatedBoolean",
+    "SVGAnimatedAngle",
+    "SVGAnimateTransformElement",
+    "SVGAnimateMotionElement",
+    "SVGAnimateElement",
+    "SVGAngle",
+    "SVGAElement",
+    "Response",
+    "ResizeObserverSize",
+    "ResizeObserverEntry",
+    "ResizeObserver",
+    "Request",
+    "ReportingObserver",
+    "ReadableStreamDefaultReader",
+    "ReadableStreamDefaultController",
+    "ReadableStreamBYOBRequest",
+    "ReadableStreamBYOBReader",
+    "ReadableStream",
+    "ReadableByteStreamController",
+    "Range",
+    "RadioNodeList",
+    "RTCTrackEvent",
+    "RTCStatsReport",
+    "RTCSessionDescription",
+    "RTCSctpTransport",
+    "RTCRtpTransceiver",
+    "RTCRtpSender",
+    "RTCRtpReceiver",
+    "RTCPeerConnectionIceEvent",
+    "RTCPeerConnectionIceErrorEvent",
+    "RTCPeerConnection",
+    "RTCIceTransport",
+    "RTCIceCandidate",
+    "RTCErrorEvent",
+    "RTCError",
+    "RTCEncodedVideoFrame",
+    "RTCEncodedAudioFrame",
+    "RTCDtlsTransport",
+    "RTCDataChannelEvent",
+    "RTCDataChannel",
+    "RTCDTMFToneChangeEvent",
+    "RTCDTMFSender",
+    "RTCCertificate",
+    "PromiseRejectionEvent",
+    "ProgressEvent",
+    "Profiler",
+    "ProcessingInstruction",
+    "PopStateEvent",
+    "PointerEvent",
+    "PluginArray",
+    "Plugin",
+    "PictureInPictureWindow",
+    "PictureInPictureEvent",
+    "PeriodicWave",
+    "PerformanceTiming",
+    "PerformanceServerTiming",
+    "PerformanceResourceTiming",
+    "PerformancePaintTiming",
+    "PerformanceObserverEntryList",
+    "PerformanceObserver",
+    "PerformanceNavigationTiming",
+    "PerformanceNavigation",
+    "PerformanceMeasure",
+    "PerformanceMark",
+    "PerformanceLongTaskTiming",
+    "PerformanceEventTiming",
+    "PerformanceEntry",
+    "PerformanceElementTiming",
+    "Performance",
+    "Path2D",
+    "PannerNode",
+    "PageTransitionEvent",
+    "OverconstrainedError",
+    "OscillatorNode",
+    "OffscreenCanvasRenderingContext2D",
+    "OffscreenCanvas",
+    "OfflineAudioContext",
+    "OfflineAudioCompletionEvent",
+    "NodeList",
+    "NodeIterator",
+    "NodeFilter",
+    "Node",
+    "NetworkInformation",
+    "Navigator",
+    "NavigationTransition",
+    "NavigationHistoryEntry",
+    "NavigationDestination",
+    "NavigationCurrentEntryChangeEvent",
+    "Navigation",
+    "NavigateEvent",
+    "NamedNodeMap",
+    "MutationRecord",
+    "MutationObserver",
+    "MouseEvent",
+    "MimeTypeArray",
+    "MimeType",
+    "MessagePort",
+    "MessageEvent",
+    "MessageChannel",
+    "MediaStreamTrackProcessor",
+    "MediaStreamTrackGenerator",
+    "MediaStreamTrackEvent",
+    "MediaStreamTrack",
+    "MediaStreamEvent",
+    "MediaStreamAudioSourceNode",
+    "MediaStreamAudioDestinationNode",
+    "MediaStream",
+    "MediaSourceHandle",
+    "MediaSource",
+    "MediaRecorder",
+    "MediaQueryListEvent",
+    "MediaQueryList",
+    "MediaList",
+    "MediaError",
+    "MediaEncryptedEvent",
+    "MediaElementAudioSourceNode",
+    "MediaCapabilities",
+    "Location",
+    "LayoutShiftAttribution",
+    "LayoutShift",
+    "LargestContentfulPaint",
+    "KeyframeEffect",
+    "KeyboardEvent",
+    "IntersectionObserverEntry",
+    "IntersectionObserver",
+    "InputEvent",
+    "InputDeviceInfo",
+    "InputDeviceCapabilities",
+    "ImageData",
+    "ImageCapture",
+    "ImageBitmapRenderingContext",
+    "ImageBitmap",
+    "IdleDeadline",
+    "IIRFilterNode",
+    "IDBVersionChangeEvent",
+    "IDBTransaction",
+    "IDBRequest",
+    "IDBOpenDBRequest",
+    "IDBObjectStore",
+    "IDBKeyRange",
+    "IDBIndex",
+    "IDBFactory",
+    "IDBDatabase",
+    "IDBCursorWithValue",
+    "IDBCursor",
+    "History",
+    "Headers",
+    "HashChangeEvent",
+    "HTMLVideoElement",
+    "HTMLUnknownElement",
+    "HTMLUListElement",
+    "HTMLTrackElement",
+    "HTMLTitleElement",
+    "HTMLTimeElement",
+    "HTMLTextAreaElement",
+    "HTMLTemplateElement",
+    "HTMLTableSectionElement",
+    "HTMLTableRowElement",
+    "HTMLTableElement",
+    "HTMLTableColElement",
+    "HTMLTableCellElement",
+    "HTMLTableCaptionElement",
+    "HTMLStyleElement",
+    "HTMLSpanElement",
+    "HTMLSourceElement",
+    "HTMLSlotElement",
+    "HTMLSelectElement",
+    "HTMLScriptElement",
+    "HTMLQuoteElement",
+    "HTMLProgressElement",
+    "HTMLPreElement",
+    "HTMLPictureElement",
+    "HTMLParamElement",
+    "HTMLParagraphElement",
+    "HTMLOutputElement",
+    "HTMLOptionsCollection",
+    "HTMLOptionElement",
+    "HTMLOptGroupElement",
+    "HTMLObjectElement",
+    "HTMLOListElement",
+    "HTMLModElement",
+    "HTMLMeterElement",
+    "HTMLMetaElement",
+    "HTMLMenuElement",
+    "HTMLMediaElement",
+    "HTMLMarqueeElement",
+    "HTMLMapElement",
+    "HTMLLinkElement",
+    "HTMLLegendElement",
+    "HTMLLabelElement",
+    "HTMLLIElement",
+    "HTMLInputElement",
+    "HTMLImageElement",
+    "HTMLIFrameElement",
+    "HTMLHtmlElement",
+    "HTMLHeadingElement",
+    "HTMLHeadElement",
+    "HTMLHRElement",
+    "HTMLFrameSetElement",
+    "HTMLFrameElement",
+    "HTMLFormElement",
+    "HTMLFormControlsCollection",
+    "HTMLFontElement",
+    "HTMLFieldSetElement",
+    "HTMLEmbedElement",
+    "HTMLElement",
+    "HTMLDocument",
+    "HTMLDivElement",
+    "HTMLDirectoryElement",
+    "HTMLDialogElement",
+    "HTMLDetailsElement",
+    "HTMLDataListElement",
+    "HTMLDataElement",
+    "HTMLDListElement",
+    "HTMLCollection",
+    "HTMLCanvasElement",
+    "HTMLButtonElement",
+    "HTMLBodyElement",
+    "HTMLBaseElement",
+    "HTMLBRElement",
+    "HTMLAudioElement",
+    "HTMLAreaElement",
+    "HTMLAnchorElement",
+    "HTMLAllCollection",
+    "GeolocationPositionError",
+    "GeolocationPosition",
+    "GeolocationCoordinates",
+    "Geolocation",
+    "GamepadHapticActuator",
+    "GamepadEvent",
+    "GamepadButton",
+    "Gamepad",
+    "GainNode",
+    "FormDataEvent",
+    "FormData",
+    "FontFaceSetLoadEvent",
+    "FontFace",
+    "FocusEvent",
+    "FileReader",
+    "FileList",
+    "File",
+    "FeaturePolicy",
+    "External",
+    "EventTarget",
+    "EventSource",
+    "EventCounts",
+    "Event",
+    "ErrorEvent",
+    "ElementInternals",
+    "Element",
+    "DynamicsCompressorNode",
+    "DragEvent",
+    "DocumentType",
+    "DocumentFragment",
+    "Document",
+    "DelayNode",
+    "DecompressionStream",
+    "DataTransferItemList",
+    "DataTransferItem",
+    "DataTransfer",
+    "DOMTokenList",
+    "DOMStringMap",
+    "DOMStringList",
+    "DOMRectReadOnly",
+    "DOMRectList",
+    "DOMRect",
+    "DOMQuad",
+    "DOMPointReadOnly",
+    "DOMPoint",
+    "DOMParser",
+    "DOMMatrixReadOnly",
+    "DOMMatrix",
+    "DOMImplementation",
+    "DOMException",
+    "DOMError",
+    "CustomStateSet",
+    "CustomEvent",
+    "CustomElementRegistry",
+    "Crypto",
+    "CountQueuingStrategy",
+    "ConvolverNode",
+    "ConstantSourceNode",
+    "CompressionStream",
+    "CompositionEvent",
+    "Comment",
+    "CloseEvent",
+    "ClipboardEvent",
+    "CharacterData",
+    "ChannelSplitterNode",
+    "ChannelMergerNode",
+    "CanvasRenderingContext2D",
+    "CanvasPattern",
+    "CanvasGradient",
+    "CanvasCaptureMediaStreamTrack",
+    "CSSVariableReferenceValue",
+    "CSSUnparsedValue",
+    "CSSUnitValue",
+    "CSSTranslate",
+    "CSSTransformValue",
+    "CSSTransformComponent",
+    "CSSSupportsRule",
+    "CSSStyleValue",
+    "CSSStyleSheet",
+    "CSSStyleRule",
+    "CSSStyleDeclaration",
+    "CSSSkewY",
+    "CSSSkewX",
+    "CSSSkew",
+    "CSSScale",
+    "CSSRuleList",
+    "CSSRule",
+    "CSSRotate",
+    "CSSPropertyRule",
+    "CSSPositionValue",
+    "CSSPerspective",
+    "CSSPageRule",
+    "CSSNumericValue",
+    "CSSNumericArray",
+    "CSSNamespaceRule",
+    "CSSMediaRule",
+    "CSSMatrixComponent",
+    "CSSMathValue",
+    "CSSMathSum",
+    "CSSMathProduct",
+    "CSSMathNegate",
+    "CSSMathMin",
+    "CSSMathMax",
+    "CSSMathInvert",
+    "CSSMathClamp",
+    "CSSLayerStatementRule",
+    "CSSLayerBlockRule",
+    "CSSKeywordValue",
+    "CSSKeyframesRule",
+    "CSSKeyframeRule",
+    "CSSImportRule",
+    "CSSImageValue",
+    "CSSGroupingRule",
+    "CSSFontPaletteValuesRule",
+    "CSSFontFaceRule",
+    "CSSCounterStyleRule",
+    "CSSContainerRule",
+    "CSSConditionRule",
+    "CSS",
+    "CDATASection",
+    "ByteLengthQueuingStrategy",
+    "BroadcastChannel",
+    "BlobEvent",
+    "Blob",
+    "BiquadFilterNode",
+    "BeforeUnloadEvent",
+    "BeforeInstallPromptEvent",
+    "BaseAudioContext",
+    "BarProp",
+    "AudioWorkletNode",
+    "AudioSinkInfo",
+    "AudioScheduledSourceNode",
+    "AudioProcessingEvent",
+    "AudioParamMap",
+    "AudioParam",
+    "AudioNode",
+    "AudioListener",
+    "AudioDestinationNode",
+    "AudioContext",
+    "AudioBufferSourceNode",
+    "AudioBuffer",
+    "Attr",
+    "AnimationEvent",
+    "AnimationEffect",
+    "Animation",
+    "AnalyserNode",
+    "AbstractRange",
+    "AbortSignal",
+    "AbortController",
+    "window",
+    "self",
+    "document",
+    "name",
+    "location",
+    "customElements",
+    "history",
+    "navigation",
+    "locationbar",
+    "menubar",
+    "personalbar",
+    "scrollbars",
+    "statusbar",
+    "toolbar",
+    "status",
+    "closed",
+    "frames",
+    "length",
+    "top",
+    "opener",
+    "parent",
+    "frameElement",
+    "navigator",
+    "origin",
+    "external",
+    "screen",
+    "innerWidth",
+    "innerHeight",
+    "scrollX",
+    "pageXOffset",
+    "scrollY",
+    "pageYOffset",
+    "visualViewport",
+    "screenX",
+    "screenY",
+    "outerWidth",
+    "outerHeight",
+    "devicePixelRatio",
+    "event",
+    "clientInformation",
+    "offscreenBuffering",
+    "screenLeft",
+    "screenTop",
+    "styleMedia",
+    "onsearch",
+    "isSecureContext",
+    "trustedTypes",
+    "performance",
+    "onappinstalled",
+    "onbeforeinstallprompt",
+    "crypto",
+    "indexedDB",
+    "sessionStorage",
+    "localStorage",
+    "onbeforexrselect",
+    "onabort",
+    "onbeforeinput",
+    "onblur",
+    "oncancel",
+    "oncanplay",
+    "oncanplaythrough",
+    "onchange",
+    "onclick",
+    "onclose",
+    "oncontextlost",
+    "oncontextmenu",
+    "oncontextrestored",
+    "oncuechange",
+    "ondblclick",
+    "ondrag",
+    "ondragend",
+    "ondragenter",
+    "ondragleave",
+    "ondragover",
+    "ondragstart",
+    "ondrop",
+    "ondurationchange",
+    "onemptied",
+    "onended",
+    "onerror",
+    "onfocus",
+    "onformdata",
+    "oninput",
+    "oninvalid",
+    "onkeydown",
+    "onkeypress",
+    "onkeyup",
+    "onload",
+    "onloadeddata",
+    "onloadedmetadata",
+    "onloadstart",
+    "onmousedown",
+    "onmouseenter",
+    "onmouseleave",
+    "onmousemove",
+    "onmouseout",
+    "onmouseover",
+    "onmouseup",
+    "onmousewheel",
+    "onpause",
+    "onplay",
+    "onplaying",
+    "onprogress",
+    "onratechange",
+    "onreset",
+    "onresize",
+    "onscroll",
+    "onsecuritypolicyviolation",
+    "onseeked",
+    "onseeking",
+    "onselect",
+    "onslotchange",
+    "onstalled",
+    "onsubmit",
+    "onsuspend",
+    "ontimeupdate",
+    "ontoggle",
+    "onvolumechange",
+    "onwaiting",
+    "onwebkitanimationend",
+    "onwebkitanimationiteration",
+    "onwebkitanimationstart",
+    "onwebkittransitionend",
+    "onwheel",
+    "onauxclick",
+    "ongotpointercapture",
+    "onlostpointercapture",
+    "onpointerdown",
+    "onpointermove",
+    "onpointerrawupdate",
+    "onpointerup",
+    "onpointercancel",
+    "onpointerover",
+    "onpointerout",
+    "onpointerenter",
+    "onpointerleave",
+    "onselectstart",
+    "onselectionchange",
+    "onanimationend",
+    "onanimationiteration",
+    "onanimationstart",
+    "ontransitionrun",
+    "ontransitionstart",
+    "ontransitionend",
+    "ontransitioncancel",
+    "onafterprint",
+    "onbeforeprint",
+    "onbeforeunload",
+    "onhashchange",
+    "onlanguagechange",
+    "onmessage",
+    "onmessageerror",
+    "onoffline",
+    "ononline",
+    "onpagehide",
+    "onpageshow",
+    "onpopstate",
+    "onrejectionhandled",
+    "onstorage",
+    "onunhandledrejection",
+    "onunload",
+    "crossOriginIsolated",
+    "scheduler",
+    "alert",
+    "atob",
+    "blur",
+    "btoa",
+    "cancelAnimationFrame",
+    "cancelIdleCallback",
+    "captureEvents",
+    "clearInterval",
+    "clearTimeout",
+    "close",
+    "confirm",
+    "createImageBitmap",
+    "fetch",
+    "find",
+    "focus",
+    "getComputedStyle",
+    "getSelection",
+    "matchMedia",
+    "moveBy",
+    "moveTo",
+    "open",
+    "postMessage",
+    "print",
+    "prompt",
+    "queueMicrotask",
+    "releaseEvents",
+    "reportError",
+    "requestAnimationFrame",
+    "requestIdleCallback",
+    "resizeBy",
+    "resizeTo",
+    "scroll",
+    "scrollBy",
+    "scrollTo",
+    "setInterval",
+    "setTimeout",
+    "stop",
+    "structuredClone",
+    "webkitCancelAnimationFrame",
+    "webkitRequestAnimationFrame",
+    "chrome",
+    "WebAssembly",
+    "caches",
+    "cookieStore",
+    "ondevicemotion",
+    "ondeviceorientation",
+    "ondeviceorientationabsolute",
+    "documentPictureInPicture",
+    "launchQueue",
+    "onbeforematch",
+    "onbeforetoggle",
+    "AbsoluteOrientationSensor",
+    "Accelerometer",
+    "AudioWorklet",
+    "BatteryManager",
+    "Cache",
+    "CacheStorage",
+    "Clipboard",
+    "ClipboardItem",
+    "CookieChangeEvent",
+    "CookieStore",
+    "CookieStoreManager",
+    "Credential",
+    "CredentialsContainer",
+    "CryptoKey",
+    "DeviceMotionEvent",
+    "DeviceMotionEventAcceleration",
+    "DeviceMotionEventRotationRate",
+    "DeviceOrientationEvent",
+    "FederatedCredential",
+    "GravitySensor",
+    "Gyroscope",
+    "Keyboard",
+    "KeyboardLayoutMap",
+    "LinearAccelerationSensor",
+    "Lock",
+    "LockManager",
+    "MIDIAccess",
+    "MIDIConnectionEvent",
+    "MIDIInput",
+    "MIDIInputMap",
+    "MIDIMessageEvent",
+    "MIDIOutput",
+    "MIDIOutputMap",
+    "MIDIPort",
+    "MediaDeviceInfo",
+    "MediaDevices",
+    "MediaKeyMessageEvent",
+    "MediaKeySession",
+    "MediaKeyStatusMap",
+    "MediaKeySystemAccess",
+    "MediaKeys",
+    "NavigationPreloadManager",
+    "NavigatorManagedData",
+    "OrientationSensor",
+    "PasswordCredential",
+    "RelativeOrientationSensor",
+    "Sanitizer",
+    "ScreenDetailed",
+    "ScreenDetails",
+    "Sensor",
+    "SensorErrorEvent",
+    "ServiceWorker",
+    "ServiceWorkerContainer",
+    "ServiceWorkerRegistration",
+    "StorageManager",
+    "SubtleCrypto",
+    "VirtualKeyboard",
+    "WebTransport",
+    "WebTransportBidirectionalStream",
+    "WebTransportDatagramDuplexStream",
+    "WebTransportError",
+    "Worklet",
+    "XRDOMOverlayState",
+    "XRLayer",
+    "XRWebGLBinding",
+    "AudioData",
+    "EncodedAudioChunk",
+    "EncodedVideoChunk",
+    "ImageTrack",
+    "ImageTrackList",
+    "VideoColorSpace",
+    "VideoFrame",
+    "AudioDecoder",
+    "AudioEncoder",
+    "ImageDecoder",
+    "VideoDecoder",
+    "VideoEncoder",
+    "AuthenticatorAssertionResponse",
+    "AuthenticatorAttestationResponse",
+    "AuthenticatorResponse",
+    "PublicKeyCredential",
+    "BarcodeDetector",
+    "Bluetooth",
+    "BluetoothCharacteristicProperties",
+    "BluetoothDevice",
+    "BluetoothRemoteGATTCharacteristic",
+    "BluetoothRemoteGATTDescriptor",
+    "BluetoothRemoteGATTServer",
+    "BluetoothRemoteGATTService",
+    "CaptureController",
+    "DocumentPictureInPicture",
+    "EyeDropper",
+    "FileSystemDirectoryHandle",
+    "FileSystemFileHandle",
+    "FileSystemHandle",
+    "FileSystemWritableFileStream",
+    "FontData",
+    "FragmentDirective",
+    "GPU",
+    "GPUAdapter",
+    "GPUAdapterInfo",
+    "GPUBindGroup",
+    "GPUBindGroupLayout",
+    "GPUBuffer",
+    "GPUBufferUsage",
+    "GPUCanvasContext",
+    "GPUColorWrite",
+    "GPUCommandBuffer",
+    "GPUCommandEncoder",
+    "GPUCompilationInfo",
+    "GPUCompilationMessage",
+    "GPUComputePassEncoder",
+    "GPUComputePipeline",
+    "GPUDevice",
+    "GPUDeviceLostInfo",
+    "GPUError",
+    "GPUExternalTexture",
+    "GPUInternalError",
+    "GPUMapMode",
+    "GPUOutOfMemoryError",
+    "GPUPipelineError",
+    "GPUPipelineLayout",
+    "GPUQuerySet",
+    "GPUQueue",
+    "GPURenderBundle",
+    "GPURenderBundleEncoder",
+    "GPURenderPassEncoder",
+    "GPURenderPipeline",
+    "GPUSampler",
+    "GPUShaderModule",
+    "GPUShaderStage",
+    "GPUSupportedFeatures",
+    "GPUSupportedLimits",
+    "GPUTexture",
+    "GPUTextureUsage",
+    "GPUTextureView",
+    "GPUUncapturedErrorEvent",
+    "GPUValidationError",
+    "WGSLLanguageFeatures",
+    "HID",
+    "HIDConnectionEvent",
+    "HIDDevice",
+    "HIDInputReportEvent",
+    "IdentityCredential",
+    "IdentityProvider",
+    "IdleDetector",
+    "LaunchParams",
+    "LaunchQueue",
+    "OTPCredential",
+    "PaymentAddress",
+    "PaymentRequest",
+    "PaymentResponse",
+    "PaymentMethodChangeEvent",
+    "Presentation",
+    "PresentationAvailability",
+    "PresentationConnection",
+    "PresentationConnectionAvailableEvent",
+    "PresentationConnectionCloseEvent",
+    "PresentationConnectionList",
+    "PresentationReceiver",
+    "PresentationRequest",
+    "Serial",
+    "SerialPort",
+    "ToggleEvent",
+    "USB",
+    "USBAlternateInterface",
+    "USBConfiguration",
+    "USBConnectionEvent",
+    "USBDevice",
+    "USBEndpoint",
+    "USBInTransferResult",
+    "USBInterface",
+    "USBIsochronousInTransferPacket",
+    "USBIsochronousInTransferResult",
+    "USBIsochronousOutTransferPacket",
+    "USBIsochronousOutTransferResult",
+    "USBOutTransferResult",
+    "WakeLock",
+    "WakeLockSentinel",
+    "WindowControlsOverlay",
+    "WindowControlsOverlayGeometryChangeEvent",
+    "XRAnchor",
+    "XRAnchorSet",
+    "XRBoundedReferenceSpace",
+    "XRCPUDepthInformation",
+    "XRCamera",
+    "XRDepthInformation",
+    "XRFrame",
+    "XRHitTestResult",
+    "XRHitTestSource",
+    "XRInputSource",
+    "XRInputSourceArray",
+    "XRInputSourceEvent",
+    "XRInputSourcesChangeEvent",
+    "XRLightEstimate",
+    "XRLightProbe",
+    "XRPose",
+    "XRRay",
+    "XRReferenceSpace",
+    "XRReferenceSpaceEvent",
+    "XRRenderState",
+    "XRRigidTransform",
+    "XRSession",
+    "XRSessionEvent",
+    "XRSpace",
+    "XRSystem",
+    "XRTransientInputHitTestResult",
+    "XRTransientInputHitTestSource",
+    "XRView",
+    "XRViewerPose",
+    "XRViewport",
+    "XRWebGLDepthInformation",
+    "XRWebGLLayer",
+    "getScreenDetails",
+    "queryLocalFonts",
+    "showDirectoryPicker",
+    "showOpenFilePicker",
+    "showSaveFilePicker",
+    "originAgentCluster",
+    "credentialless",
+    "speechSynthesis",
+    "oncontentvisibilityautostatechange",
+    "onscrollend",
+    "AnimationPlaybackEvent",
+    "AnimationTimeline",
+    "CSSAnimation",
+    "CSSTransition",
+    "DocumentTimeline",
+    "BackgroundFetchManager",
+    "BackgroundFetchRecord",
+    "BackgroundFetchRegistration",
+    "BluetoothUUID",
+    "BrowserCaptureMediaStreamTrack",
+    "CropTarget",
+    "ContentVisibilityAutoStateChangeEvent",
+    "DelegatedInkTrailPresenter",
+    "Ink",
+    "DocumentPictureInPictureEvent",
+    "Highlight",
+    "HighlightRegistry",
+    "MathMLElement",
+    "MediaMetadata",
+    "MediaSession",
+    "MutationEvent",
+    "NavigatorUAData",
+    "Notification",
+    "PaymentManager",
+    "PaymentRequestUpdateEvent",
+    "PeriodicSyncManager",
+    "PermissionStatus",
+    "Permissions",
+    "PushManager",
+    "PushSubscription",
+    "PushSubscriptionOptions",
+    "RemotePlayback",
+    "ScrollTimeline",
+    "ViewTimeline",
+    "SharedWorker",
+    "SpeechSynthesisErrorEvent",
+    "SpeechSynthesisEvent",
+    "SpeechSynthesisUtterance",
+    "VideoPlaybackQuality",
+    "ViewTransition",
+    "VisibilityStateEntry",
+    "webkitSpeechGrammar",
+    "webkitSpeechGrammarList",
+    "webkitSpeechRecognition",
+    "webkitSpeechRecognitionError",
+    "webkitSpeechRecognitionEvent",
+    "openDatabase",
+    "webkitRequestFileSystem",
+    "webkitResolveLocalFileSystemURL"
+  ],
+  "htmlElementVersion": [
+    "version",
+    "title",
+    "lang",
+    "translate",
+    "dir",
+    "hidden",
+    "accessKey",
+    "draggable",
+    "spellcheck",
+    "autocapitalize",
+    "contentEditable",
+    "enterKeyHint",
+    "isContentEditable",
+    "inputMode",
+    "virtualKeyboardPolicy",
+    "offsetParent",
+    "offsetTop",
+    "offsetLeft",
+    "offsetWidth",
+    "offsetHeight",
+    "innerText",
+    "outerText",
+    "onbeforexrselect",
+    "onabort",
+    "onbeforeinput",
+    "onblur",
+    "oncancel",
+    "oncanplay",
+    "oncanplaythrough",
+    "onchange",
+    "onclick",
+    "onclose",
+    "oncontextlost",
+    "oncontextmenu",
+    "oncontextrestored",
+    "oncuechange",
+    "ondblclick",
+    "ondrag",
+    "ondragend",
+    "ondragenter",
+    "ondragleave",
+    "ondragover",
+    "ondragstart",
+    "ondrop",
+    "ondurationchange",
+    "onemptied",
+    "onended",
+    "onerror",
+    "onfocus",
+    "onformdata",
+    "oninput",
+    "oninvalid",
+    "onkeydown",
+    "onkeypress",
+    "onkeyup",
+    "onload",
+    "onloadeddata",
+    "onloadedmetadata",
+    "onloadstart",
+    "onmousedown",
+    "onmouseenter",
+    "onmouseleave",
+    "onmousemove",
+    "onmouseout",
+    "onmouseover",
+    "onmouseup",
+    "onmousewheel",
+    "onpause",
+    "onplay",
+    "onplaying",
+    "onprogress",
+    "onratechange",
+    "onreset",
+    "onresize",
+    "onscroll",
+    "onsecuritypolicyviolation",
+    "onseeked",
+    "onseeking",
+    "onselect",
+    "onslotchange",
+    "onstalled",
+    "onsubmit",
+    "onsuspend",
+    "ontimeupdate",
+    "ontoggle",
+    "onvolumechange",
+    "onwaiting",
+    "onwebkitanimationend",
+    "onwebkitanimationiteration",
+    "onwebkitanimationstart",
+    "onwebkittransitionend",
+    "onwheel",
+    "onauxclick",
+    "ongotpointercapture",
+    "onlostpointercapture",
+    "onpointerdown",
+    "onpointermove",
+    "onpointerrawupdate",
+    "onpointerup",
+    "onpointercancel",
+    "onpointerover",
+    "onpointerout",
+    "onpointerenter",
+    "onpointerleave",
+    "onselectstart",
+    "onselectionchange",
+    "onanimationend",
+    "onanimationiteration",
+    "onanimationstart",
+    "ontransitionrun",
+    "ontransitionstart",
+    "ontransitionend",
+    "ontransitioncancel",
+    "oncopy",
+    "oncut",
+    "onpaste",
+    "dataset",
+    "nonce",
+    "autofocus",
+    "tabIndex",
+    "style",
+    "attributeStyleMap",
+    "attachInternals",
+    "blur",
+    "click",
+    "focus",
+    "inert",
+    "oncontentvisibilityautostatechange",
+    "onscrollend",
+    "popover",
+    "onbeforetoggle",
+    "onbeforematch",
+    "hidePopover",
+    "showPopover",
+    "togglePopover",
+    "namespaceURI",
+    "prefix",
+    "localName",
+    "tagName",
+    "id",
+    "className",
+    "classList",
+    "slot",
+    "attributes",
+    "shadowRoot",
+    "part",
+    "assignedSlot",
+    "innerHTML",
+    "outerHTML",
+    "scrollTop",
+    "scrollLeft",
+    "scrollWidth",
+    "scrollHeight",
+    "clientTop",
+    "clientLeft",
+    "clientWidth",
+    "clientHeight",
+    "onbeforecopy",
+    "onbeforecut",
+    "onbeforepaste",
+    "onsearch",
+    "elementTiming",
+    "onfullscreenchange",
+    "onfullscreenerror",
+    "onwebkitfullscreenchange",
+    "onwebkitfullscreenerror",
+    "role",
+    "ariaAtomic",
+    "ariaAutoComplete",
+    "ariaBusy",
+    "ariaBrailleLabel",
+    "ariaBrailleRoleDescription",
+    "ariaChecked",
+    "ariaColCount",
+    "ariaColIndex",
+    "ariaColSpan",
+    "ariaCurrent",
+    "ariaDescription",
+    "ariaDisabled",
+    "ariaExpanded",
+    "ariaHasPopup",
+    "ariaHidden",
+    "ariaInvalid",
+    "ariaKeyShortcuts",
+    "ariaLabel",
+    "ariaLevel",
+    "ariaLive",
+    "ariaModal",
+    "ariaMultiLine",
+    "ariaMultiSelectable",
+    "ariaOrientation",
+    "ariaPlaceholder",
+    "ariaPosInSet",
+    "ariaPressed",
+    "ariaReadOnly",
+    "ariaRelevant",
+    "ariaRequired",
+    "ariaRoleDescription",
+    "ariaRowCount",
+    "ariaRowIndex",
+    "ariaRowSpan",
+    "ariaSelected",
+    "ariaSetSize",
+    "ariaSort",
+    "ariaValueMax",
+    "ariaValueMin",
+    "ariaValueNow",
+    "ariaValueText",
+    "children",
+    "firstElementChild",
+    "lastElementChild",
+    "childElementCount",
+    "previousElementSibling",
+    "nextElementSibling",
+    "after",
+    "animate",
+    "append",
+    "attachShadow",
+    "before",
+    "closest",
+    "computedStyleMap",
+    "getAttribute",
+    "getAttributeNS",
+    "getAttributeNames",
+    "getAttributeNode",
+    "getAttributeNodeNS",
+    "getBoundingClientRect",
+    "getClientRects",
+    "getElementsByClassName",
+    "getElementsByTagName",
+    "getElementsByTagNameNS",
+    "getInnerHTML",
+    "hasAttribute",
+    "hasAttributeNS",
+    "hasAttributes",
+    "hasPointerCapture",
+    "insertAdjacentElement",
+    "insertAdjacentHTML",
+    "insertAdjacentText",
+    "matches",
+    "prepend",
+    "querySelector",
+    "querySelectorAll",
+    "releasePointerCapture",
+    "remove",
+    "removeAttribute",
+    "removeAttributeNS",
+    "removeAttributeNode",
+    "replaceChildren",
+    "replaceWith",
+    "requestFullscreen",
+    "requestPointerLock",
+    "scroll",
+    "scrollBy",
+    "scrollIntoView",
+    "scrollIntoViewIfNeeded",
+    "scrollTo",
+    "setAttribute",
+    "setAttributeNS",
+    "setAttributeNode",
+    "setAttributeNodeNS",
+    "setPointerCapture",
+    "toggleAttribute",
+    "webkitMatchesSelector",
+    "webkitRequestFullScreen",
+    "webkitRequestFullscreen",
+    "checkVisibility",
+    "getAnimations",
+    "setHTML",
+    "nodeType",
+    "nodeName",
+    "baseURI",
+    "isConnected",
+    "ownerDocument",
+    "parentNode",
+    "parentElement",
+    "childNodes",
+    "firstChild",
+    "lastChild",
+    "previousSibling",
+    "nextSibling",
+    "nodeValue",
+    "textContent",
+    "ELEMENT_NODE",
+    "ATTRIBUTE_NODE",
+    "TEXT_NODE",
+    "CDATA_SECTION_NODE",
+    "ENTITY_REFERENCE_NODE",
+    "ENTITY_NODE",
+    "PROCESSING_INSTRUCTION_NODE",
+    "COMMENT_NODE",
+    "DOCUMENT_NODE",
+    "DOCUMENT_TYPE_NODE",
+    "DOCUMENT_FRAGMENT_NODE",
+    "NOTATION_NODE",
+    "DOCUMENT_POSITION_DISCONNECTED",
+    "DOCUMENT_POSITION_PRECEDING",
+    "DOCUMENT_POSITION_FOLLOWING",
+    "DOCUMENT_POSITION_CONTAINS",
+    "DOCUMENT_POSITION_CONTAINED_BY",
+    "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
+    "appendChild",
+    "cloneNode",
+    "compareDocumentPosition",
+    "contains",
+    "getRootNode",
+    "hasChildNodes",
+    "insertBefore",
+    "isDefaultNamespace",
+    "isEqualNode",
+    "isSameNode",
+    "lookupNamespaceURI",
+    "lookupPrefix",
+    "normalize",
+    "removeChild",
+    "replaceChild",
+    "addEventListener",
+    "dispatchEvent",
+    "removeEventListener"
+  ],
+  "webgl": {
+    "supportedExtensions": [
+      "ANGLE_instanced_arrays",
+      "EXT_blend_minmax",
+      "EXT_color_buffer_half_float",
+      "EXT_disjoint_timer_query",
+      "EXT_float_blend",
+      "EXT_frag_depth",
+      "EXT_shader_texture_lod",
+      "EXT_texture_compression_rgtc",
+      "EXT_texture_filter_anisotropic",
+      "EXT_sRGB",
+      "KHR_parallel_shader_compile",
+      "OES_element_index_uint",
+      "OES_fbo_render_mipmap",
+      "OES_standard_derivatives",
+      "OES_texture_float",
+      "OES_texture_float_linear",
+      "OES_texture_half_float",
+      "OES_texture_half_float_linear",
+      "OES_vertex_array_object",
+      "WEBGL_color_buffer_float",
+      "WEBGL_compressed_texture_s3tc",
+      "WEBGL_compressed_texture_s3tc_srgb",
+      "WEBGL_debug_renderer_info",
+      "WEBGL_debug_shaders",
+      "WEBGL_depth_texture",
+      "WEBGL_draw_buffers",
+      "WEBGL_lose_context",
+      "WEBGL_multi_draw"
+    ],
+    "contextAttributes": {
+      "alpha": true,
+      "antialias": true,
+      "depth": true,
+      "desynchronized": false,
+      "failIfMajorPerformanceCaveat": false,
+      "powerPreference": "default",
+      "premultipliedAlpha": true,
+      "preserveDrawingBuffer": false,
+      "stencil": false,
+      "xrCompatible": false
+    },
+    "maxAnisotropy": 16,
+    "params": {
+      "2849": {
+        "type": "Number",
+        "value": 1
+      },
+      "2884": {
+        "type": "",
+        "value": false
+      },
+      "2885": {
+        "type": "Number",
+        "value": 1029
+      },
+      "2886": {
+        "type": "Number",
+        "value": 2305
+      },
+      "2928": {
+        "type": "Float32Array",
+        "value": {
+          "0": 0,
+          "1": 1
+        }
+      },
+      "2929": {
+        "type": "",
+        "value": false
+      },
+      "2930": {
+        "type": "Boolean",
+        "value": true
+      },
+      "2931": {
+        "type": "Number",
+        "value": 1
+      },
+      "2932": {
+        "type": "Number",
+        "value": 513
+      },
+      "2960": {
+        "type": "",
+        "value": false
+      },
+      "2961": {
+        "type": "",
+        "value": 0
+      },
+      "2962": {
+        "type": "Number",
+        "value": 519
+      },
+      "2963": {
+        "type": "Number",
+        "value": 2147483647
+      },
+      "2964": {
+        "type": "Number",
+        "value": 7680
+      },
+      "2965": {
+        "type": "Number",
+        "value": 7680
+      },
+      "2966": {
+        "type": "Number",
+        "value": 7680
+      },
+      "2967": {
+        "type": "",
+        "value": 0
+      },
+      "2968": {
+        "type": "Number",
+        "value": 2147483647
+      },
+      "2978": {
+        "type": "Int32Array",
+        "value": {
+          "0": 0,
+          "1": 0,
+          "2": 300,
+          "3": 150
+        }
+      },
+      "3024": {
+        "type": "Boolean",
+        "value": true
+      },
+      "3042": {
+        "type": "",
+        "value": false
+      },
+      "3088": {
+        "type": "Int32Array",
+        "value": {
+          "0": 0,
+          "1": 0,
+          "2": 300,
+          "3": 150
+        }
+      },
+      "3089": {
+        "type": "",
+        "value": false
+      },
+      "3106": {
+        "type": "Float32Array",
+        "value": {
+          "0": 0,
+          "1": 0,
+          "2": 0,
+          "3": 0
+        }
+      },
+      "3107": {
+        "type": "Array",
+        "value": [
+          true,
+          true,
+          true,
+          true
+        ]
+      },
+      "3317": {
+        "type": "Number",
+        "value": 4
+      },
+      "3333": {
+        "type": "Number",
+        "value": 4
+      },
+      "3379": {
+        "type": "Number",
+        "value": 16384
+      },
+      "3386": {
+        "type": "Int32Array",
+        "value": {
+          "0": 16384,
+          "1": 16384
+        }
+      },
+      "3408": {
+        "type": "Number",
+        "value": 4
+      },
+      "3410": {
+        "type": "Number",
+        "value": 8
+      },
+      "3411": {
+        "type": "Number",
+        "value": 8
+      },
+      "3412": {
+        "type": "Number",
+        "value": 8
+      },
+      "3413": {
+        "type": "Number",
+        "value": 8
+      },
+      "3414": {
+        "type": "Number",
+        "value": 24
+      },
+      "3415": {
+        "type": "",
+        "value": 0
+      },
+      "7936": {
+        "type": "String",
+        "value": "WebKit"
+      },
+      "7937": {
+        "type": "String",
+        "value": "WebKit WebGL"
+      },
+      "7938": {
+        "type": "String",
+        "value": "WebGL 1.0 (OpenGL ES 2.0 Chromium)"
+      },
+      "10752": {
+        "type": "",
+        "value": 0
+      },
+      "32773": {
+        "type": "Float32Array",
+        "value": {
+          "0": 0,
+          "1": 0,
+          "2": 0,
+          "3": 0
+        }
+      },
+      "32777": {
+        "type": "Number",
+        "value": 32774
+      },
+      "32823": {
+        "type": "",
+        "value": false
+      },
+      "32824": {
+        "type": "",
+        "value": 0
+      },
+      "32873": {
+        "type": "",
+        "value": null
+      },
+      "32883": {
+        "type": "",
+        "value": null
+      },
+      "32936": {
+        "type": "Number",
+        "value": 1
+      },
+      "32937": {
+        "type": "Number",
+        "value": 4
+      },
+      "32938": {
+        "type": "Number",
+        "value": 1
+      },
+      "32939": {
+        "type": "",
+        "value": false
+      },
+      "32968": {
+        "type": "",
+        "value": 0
+      },
+      "32969": {
+        "type": "Number",
+        "value": 1
+      },
+      "32970": {
+        "type": "",
+        "value": 0
+      },
+      "32971": {
+        "type": "Number",
+        "value": 1
+      },
+      "33170": {
+        "type": "Number",
+        "value": 4352
+      },
+      "33901": {
+        "type": "Float32Array",
+        "value": {
+          "0": 1,
+          "1": 64
+        }
+      },
+      "33902": {
+        "type": "Float32Array",
+        "value": {
+          "0": 1,
+          "1": 1
+        }
+      },
+      "34016": {
+        "type": "Number",
+        "value": 33984
+      },
+      "34024": {
+        "type": "Number",
+        "value": 16384
+      },
+      "34045": {
+        "type": "",
+        "value": null
+      },
+      "34047": {
+        "type": "Number",
+        "value": 16
+      },
+      "34068": {
+        "type": "",
+        "value": null
+      },
+      "34076": {
+        "type": "Number",
+        "value": 16384
+      },
+      "34467": {
+        "type": "Uint32Array",
+        "value": {}
+      },
+      "34816": {
+        "type": "Number",
+        "value": 519
+      },
+      "34817": {
+        "type": "Number",
+        "value": 7680
+      },
+      "34818": {
+        "type": "Number",
+        "value": 7680
+      },
+      "34819": {
+        "type": "Number",
+        "value": 7680
+      },
+      "34852": {
+        "type": "",
+        "value": null
+      },
+      "34877": {
+        "type": "Number",
+        "value": 32774
+      },
+      "34921": {
+        "type": "Number",
+        "value": 16
+      },
+      "34930": {
+        "type": "Number",
+        "value": 16
+      },
+      "34964": {
+        "type": "",
+        "value": null
+      },
+      "34965": {
+        "type": "",
+        "value": null
+      },
+      "35071": {
+        "type": "",
+        "value": null
+      },
+      "35076": {
+        "type": "",
+        "value": null
+      },
+      "35077": {
+        "type": "",
+        "value": null
+      },
+      "35371": {
+        "type": "",
+        "value": null
+      },
+      "35373": {
+        "type": "",
+        "value": null
+      },
+      "35374": {
+        "type": "",
+        "value": null
+      },
+      "35375": {
+        "type": "",
+        "value": null
+      },
+      "35376": {
+        "type": "",
+        "value": null
+      },
+      "35377": {
+        "type": "",
+        "value": null
+      },
+      "35379": {
+        "type": "",
+        "value": null
+      },
+      "35380": {
+        "type": "",
+        "value": null
+      },
+      "35657": {
+        "type": "",
+        "value": null
+      },
+      "35658": {
+        "type": "",
+        "value": null
+      },
+      "35659": {
+        "type": "",
+        "value": null
+      },
+      "35660": {
+        "type": "Number",
+        "value": 16
+      },
+      "35661": {
+        "type": "Number",
+        "value": 32
+      },
+      "35724": {
+        "type": "String",
+        "value": "WebGL GLSL ES 1.0 (OpenGL ES GLSL ES 1.0 Chromium)"
+      },
+      "35725": {
+        "type": "",
+        "value": null
+      },
+      "35968": {
+        "type": "",
+        "value": null
+      },
+      "35978": {
+        "type": "",
+        "value": null
+      },
+      "35979": {
+        "type": "",
+        "value": null
+      },
+      "36003": {
+        "type": "",
+        "value": 0
+      },
+      "36004": {
+        "type": "Number",
+        "value": 2147483647
+      },
+      "36005": {
+        "type": "Number",
+        "value": 2147483647
+      },
+      "36006": {
+        "type": "",
+        "value": null
+      },
+      "36007": {
+        "type": "",
+        "value": null
+      },
+      "36063": {
+        "type": "",
+        "value": null
+      },
+      "36183": {
+        "type": "",
+        "value": null
+      },
+      "36347": {
+        "type": "Number",
+        "value": 1024
+      },
+      "36348": {
+        "type": "Number",
+        "value": 31
+      },
+      "36349": {
+        "type": "Number",
+        "value": 1024
+      },
+      "37154": {
+        "type": "",
+        "value": null
+      },
+      "37157": {
+        "type": "",
+        "value": null
+      },
+      "37440": {
+        "type": "",
+        "value": false
+      },
+      "37441": {
+        "type": "",
+        "value": false
+      },
+      "37443": {
+        "type": "Number",
+        "value": 37444
+      }
+    },
+    "shaderPrecisionFormats": [
+      {
+        "shaderType": 35633,
+        "precisionType": 36338,
+        "r": {
+          "rangeMin": 127,
+          "rangeMax": 127,
+          "precision": 23
+        }
+      },
+      {
+        "shaderType": 35633,
+        "precisionType": 36337,
+        "r": {
+          "rangeMin": 127,
+          "rangeMax": 127,
+          "precision": 23
+        }
+      },
+      {
+        "shaderType": 35633,
+        "precisionType": 36336,
+        "r": {
+          "rangeMin": 127,
+          "rangeMax": 127,
+          "precision": 23
+        }
+      },
+      {
+        "shaderType": 35633,
+        "precisionType": 36341,
+        "r": {
+          "rangeMin": 31,
+          "rangeMax": 30,
+          "precision": 0
+        }
+      },
+      {
+        "shaderType": 35633,
+        "precisionType": 36340,
+        "r": {
+          "rangeMin": 31,
+          "rangeMax": 30,
+          "precision": 0
+        }
+      },
+      {
+        "shaderType": 35633,
+        "precisionType": 36339,
+        "r": {
+          "rangeMin": 31,
+          "rangeMax": 30,
+          "precision": 0
+        }
+      },
+      {
+        "shaderType": 35632,
+        "precisionType": 36338,
+        "r": {
+          "rangeMin": 127,
+          "rangeMax": 127,
+          "precision": 23
+        }
+      },
+      {
+        "shaderType": 35632,
+        "precisionType": 36337,
+        "r": {
+          "rangeMin": 127,
+          "rangeMax": 127,
+          "precision": 23
+        }
+      },
+      {
+        "shaderType": 35632,
+        "precisionType": 36336,
+        "r": {
+          "rangeMin": 127,
+          "rangeMax": 127,
+          "precision": 23
+        }
+      },
+      {
+        "shaderType": 35632,
+        "precisionType": 36341,
+        "r": {
+          "rangeMin": 31,
+          "rangeMax": 30,
+          "precision": 0
+        }
+      },
+      {
+        "shaderType": 35632,
+        "precisionType": 36340,
+        "r": {
+          "rangeMin": 31,
+          "rangeMax": 30,
+          "precision": 0
+        }
+      },
+      {
+        "shaderType": 35632,
+        "precisionType": 36339,
+        "r": {
+          "rangeMin": 31,
+          "rangeMax": 30,
+          "precision": 0
+        }
+      }
+    ]
+  },
+  "webgl2": {
+    "supportedExtensions": [
+      "EXT_color_buffer_float",
+      "EXT_color_buffer_half_float",
+      "EXT_disjoint_timer_query_webgl2",
+      "EXT_float_blend",
+      "EXT_texture_compression_rgtc",
+      "EXT_texture_filter_anisotropic",
+      "EXT_texture_norm16",
+      "KHR_parallel_shader_compile",
+      "OES_draw_buffers_indexed",
+      "OES_texture_float_linear",
+      "WEBGL_compressed_texture_s3tc",
+      "WEBGL_compressed_texture_s3tc_srgb",
+      "WEBGL_debug_renderer_info",
+      "WEBGL_debug_shaders",
+      "WEBGL_lose_context",
+      "WEBGL_multi_draw",
+      "WEBGL_provoking_vertex"
+    ],
+    "contextAttributes": {
+      "alpha": true,
+      "antialias": true,
+      "depth": true,
+      "desynchronized": false,
+      "failIfMajorPerformanceCaveat": false,
+      "powerPreference": "default",
+      "premultipliedAlpha": true,
+      "preserveDrawingBuffer": false,
+      "stencil": false,
+      "xrCompatible": false
+    },
+    "maxAnisotropy": 16,
+    "params": {
+      "2849": {
+        "type": "Number",
+        "value": 1
+      },
+      "2884": {
+        "type": "",
+        "value": false
+      },
+      "2885": {
+        "type": "Number",
+        "value": 1029
+      },
+      "2886": {
+        "type": "Number",
+        "value": 2305
+      },
+      "2928": {
+        "type": "Float32Array",
+        "value": {
+          "0": 0,
+          "1": 1
+        }
+      },
+      "2929": {
+        "type": "",
+        "value": false
+      },
+      "2930": {
+        "type": "Boolean",
+        "value": true
+      },
+      "2931": {
+        "type": "Number",
+        "value": 1
+      },
+      "2932": {
+        "type": "Number",
+        "value": 513
+      },
+      "2960": {
+        "type": "",
+        "value": false
+      },
+      "2961": {
+        "type": "",
+        "value": 0
+      },
+      "2962": {
+        "type": "Number",
+        "value": 519
+      },
+      "2963": {
+        "type": "Number",
+        "value": 2147483647
+      },
+      "2964": {
+        "type": "Number",
+        "value": 7680
+      },
+      "2965": {
+        "type": "Number",
+        "value": 7680
+      },
+      "2966": {
+        "type": "Number",
+        "value": 7680
+      },
+      "2967": {
+        "type": "",
+        "value": 0
+      },
+      "2968": {
+        "type": "Number",
+        "value": 2147483647
+      },
+      "2978": {
+        "type": "Int32Array",
+        "value": {
+          "0": 0,
+          "1": 0,
+          "2": 300,
+          "3": 150
+        }
+      },
+      "3024": {
+        "type": "Boolean",
+        "value": true
+      },
+      "3042": {
+        "type": "",
+        "value": false
+      },
+      "3088": {
+        "type": "Int32Array",
+        "value": {
+          "0": 0,
+          "1": 0,
+          "2": 300,
+          "3": 150
+        }
+      },
+      "3089": {
+        "type": "",
+        "value": false
+      },
+      "3106": {
+        "type": "Float32Array",
+        "value": {
+          "0": 0,
+          "1": 0,
+          "2": 0,
+          "3": 0
+        }
+      },
+      "3107": {
+        "type": "Array",
+        "value": [
+          true,
+          true,
+          true,
+          true
+        ]
+      },
+      "3317": {
+        "type": "Number",
+        "value": 4
+      },
+      "3333": {
+        "type": "Number",
+        "value": 4
+      },
+      "3379": {
+        "type": "Number",
+        "value": 16384
+      },
+      "3386": {
+        "type": "Int32Array",
+        "value": {
+          "0": 16384,
+          "1": 16384
+        }
+      },
+      "3408": {
+        "type": "Number",
+        "value": 4
+      },
+      "3410": {
+        "type": "Number",
+        "value": 8
+      },
+      "3411": {
+        "type": "Number",
+        "value": 8
+      },
+      "3412": {
+        "type": "Number",
+        "value": 8
+      },
+      "3413": {
+        "type": "Number",
+        "value": 8
+      },
+      "3414": {
+        "type": "Number",
+        "value": 24
+      },
+      "3415": {
+        "type": "",
+        "value": 0
+      },
+      "7936": {
+        "type": "String",
+        "value": "WebKit"
+      },
+      "7937": {
+        "type": "String",
+        "value": "WebKit WebGL"
+      },
+      "7938": {
+        "type": "String",
+        "value": "WebGL 2.0 (OpenGL ES 3.0 Chromium)"
+      },
+      "10752": {
+        "type": "",
+        "value": 0
+      },
+      "32773": {
+        "type": "Float32Array",
+        "value": {
+          "0": 0,
+          "1": 0,
+          "2": 0,
+          "3": 0
+        }
+      },
+      "32777": {
+        "type": "Number",
+        "value": 32774
+      },
+      "32823": {
+        "type": "",
+        "value": false
+      },
+      "32824": {
+        "type": "",
+        "value": 0
+      },
+      "32873": {
+        "type": "",
+        "value": null
+      },
+      "32883": {
+        "type": "Number",
+        "value": 2048
+      },
+      "32936": {
+        "type": "Number",
+        "value": 1
+      },
+      "32937": {
+        "type": "Number",
+        "value": 4
+      },
+      "32938": {
+        "type": "Number",
+        "value": 1
+      },
+      "32939": {
+        "type": "",
+        "value": false
+      },
+      "32968": {
+        "type": "",
+        "value": 0
+      },
+      "32969": {
+        "type": "Number",
+        "value": 1
+      },
+      "32970": {
+        "type": "",
+        "value": 0
+      },
+      "32971": {
+        "type": "Number",
+        "value": 1
+      },
+      "33170": {
+        "type": "Number",
+        "value": 4352
+      },
+      "33901": {
+        "type": "Float32Array",
+        "value": {
+          "0": 1,
+          "1": 64
+        }
+      },
+      "33902": {
+        "type": "Float32Array",
+        "value": {
+          "0": 1,
+          "1": 1
+        }
+      },
+      "34016": {
+        "type": "Number",
+        "value": 33984
+      },
+      "34024": {
+        "type": "Number",
+        "value": 16384
+      },
+      "34045": {
+        "type": "Number",
+        "value": 16
+      },
+      "34047": {
+        "type": "Number",
+        "value": 16
+      },
+      "34068": {
+        "type": "",
+        "value": null
+      },
+      "34076": {
+        "type": "Number",
+        "value": 16384
+      },
+      "34467": {
+        "type": "Uint32Array",
+        "value": {}
+      },
+      "34816": {
+        "type": "Number",
+        "value": 519
+      },
+      "34817": {
+        "type": "Number",
+        "value": 7680
+      },
+      "34818": {
+        "type": "Number",
+        "value": 7680
+      },
+      "34819": {
+        "type": "Number",
+        "value": 7680
+      },
+      "34852": {
+        "type": "Number",
+        "value": 8
+      },
+      "34877": {
+        "type": "Number",
+        "value": 32774
+      },
+      "34921": {
+        "type": "Number",
+        "value": 16
+      },
+      "34930": {
+        "type": "Number",
+        "value": 16
+      },
+      "34964": {
+        "type": "",
+        "value": null
+      },
+      "34965": {
+        "type": "",
+        "value": null
+      },
+      "35071": {
+        "type": "Number",
+        "value": 2048
+      },
+      "35076": {
+        "type": "Number",
+        "value": -8
+      },
+      "35077": {
+        "type": "Number",
+        "value": 7
+      },
+      "35371": {
+        "type": "Number",
+        "value": 16
+      },
+      "35373": {
+        "type": "Number",
+        "value": 16
+      },
+      "35374": {
+        "type": "Number",
+        "value": 32
+      },
+      "35375": {
+        "type": "Number",
+        "value": 72
+      },
+      "35376": {
+        "type": "Number",
+        "value": 65536
+      },
+      "35377": {
+        "type": "Number",
+        "value": 266240
+      },
+      "35379": {
+        "type": "Number",
+        "value": 266240
+      },
+      "35380": {
+        "type": "Number",
+        "value": 256
+      },
+      "35657": {
+        "type": "Number",
+        "value": 4096
+      },
+      "35658": {
+        "type": "Number",
+        "value": 4096
+      },
+      "35659": {
+        "type": "Number",
+        "value": 124
+      },
+      "35660": {
+        "type": "Number",
+        "value": 16
+      },
+      "35661": {
+        "type": "Number",
+        "value": 32
+      },
+      "35724": {
+        "type": "String",
+        "value": "WebGL GLSL ES 3.00 (OpenGL ES GLSL ES 3.0 Chromium)"
+      },
+      "35725": {
+        "type": "",
+        "value": null
+      },
+      "35968": {
+        "type": "Number",
+        "value": 4
+      },
+      "35978": {
+        "type": "Number",
+        "value": 64
+      },
+      "35979": {
+        "type": "Number",
+        "value": 4
+      },
+      "36003": {
+        "type": "",
+        "value": 0
+      },
+      "36004": {
+        "type": "Number",
+        "value": 2147483647
+      },
+      "36005": {
+        "type": "Number",
+        "value": 2147483647
+      },
+      "36006": {
+        "type": "",
+        "value": null
+      },
+      "36007": {
+        "type": "",
+        "value": null
+      },
+      "36063": {
+        "type": "Number",
+        "value": 8
+      },
+      "36183": {
+        "type": "Number",
+        "value": 4
+      },
+      "36347": {
+        "type": "Number",
+        "value": 1024
+      },
+      "36348": {
+        "type": "Number",
+        "value": 31
+      },
+      "36349": {
+        "type": "Number",
+        "value": 1024
+      },
+      "37154": {
+        "type": "Number",
+        "value": 64
+      },
+      "37157": {
+        "type": "Number",
+        "value": 128
+      },
+      "37440": {
+        "type": "",
+        "value": false
+      },
+      "37441": {
+        "type": "",
+        "value": false
+      },
+      "37443": {
+        "type": "Number",
+        "value": 37444
+      }
+    },
+    "shaderPrecisionFormats": [
+      {
+        "shaderType": 35633,
+        "precisionType": 36338,
+        "r": {
+          "rangeMin": 127,
+          "rangeMax": 127,
+          "precision": 23
+        }
+      },
+      {
+        "shaderType": 35633,
+        "precisionType": 36337,
+        "r": {
+          "rangeMin": 127,
+          "rangeMax": 127,
+          "precision": 23
+        }
+      },
+      {
+        "shaderType": 35633,
+        "precisionType": 36336,
+        "r": {
+          "rangeMin": 127,
+          "rangeMax": 127,
+          "precision": 23
+        }
+      },
+      {
+        "shaderType": 35633,
+        "precisionType": 36341,
+        "r": {
+          "rangeMin": 31,
+          "rangeMax": 30,
+          "precision": 0
+        }
+      },
+      {
+        "shaderType": 35633,
+        "precisionType": 36340,
+        "r": {
+          "rangeMin": 31,
+          "rangeMax": 30,
+          "precision": 0
+        }
+      },
+      {
+        "shaderType": 35633,
+        "precisionType": 36339,
+        "r": {
+          "rangeMin": 31,
+          "rangeMax": 30,
+          "precision": 0
+        }
+      },
+      {
+        "shaderType": 35632,
+        "precisionType": 36338,
+        "r": {
+          "rangeMin": 127,
+          "rangeMax": 127,
+          "precision": 23
+        }
+      },
+      {
+        "shaderType": 35632,
+        "precisionType": 36337,
+        "r": {
+          "rangeMin": 127,
+          "rangeMax": 127,
+          "precision": 23
+        }
+      },
+      {
+        "shaderType": 35632,
+        "precisionType": 36336,
+        "r": {
+          "rangeMin": 127,
+          "rangeMax": 127,
+          "precision": 23
+        }
+      },
+      {
+        "shaderType": 35632,
+        "precisionType": 36341,
+        "r": {
+          "rangeMin": 31,
+          "rangeMax": 30,
+          "precision": 0
+        }
+      },
+      {
+        "shaderType": 35632,
+        "precisionType": 36340,
+        "r": {
+          "rangeMin": 31,
+          "rangeMax": 30,
+          "precision": 0
+        }
+      },
+      {
+        "shaderType": 35632,
+        "precisionType": 36339,
+        "r": {
+          "rangeMin": 31,
+          "rangeMax": 30,
+          "precision": 0
+        }
+      }
+    ]
+  },
+  "navigator": {
+    "languages": [
+      "en-US",
+      "en",
+      "it",
+      "fr",
+      "ro",
+      "es"
+    ],
+    "userAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36",
+    "appCodeName": "Mozilla",
+    "appMinorVersion": "_$obj!_undefined_//+_",
+    "appName": "Netscape",
+    "appVersion": "5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36",
+    "buildID": "_$obj!_undefined_//+_",
+    "platform": "MacIntel",
+    "product": "Gecko",
+    "productSub": "20030107",
+    "hardwareConcurrency": 12,
+    "cpuClass": "_$obj!_undefined_//+_",
+    "maxTouchPoints": 0,
+    "oscpu": "_$obj!_undefined_//+_",
+    "vendor": "Google Inc.",
+    "vendorSub": "",
+    "deviceMemory": 8,
+    "doNotTrack": null,
+    "msDoNotTrack": "_$obj!_undefined_//+_",
+    "vibrate": "_$obj!_//+_",
+    "credentials": "_$obj!_//+_",
+    "storage": "_$obj!_//+_",
+    "requestMediaKeySystemAccess": "_$obj!_//+_",
+    "bluetooth": "_$obj!_//+_",
+    "language": "en-US",
+    "systemLanguage": "_$obj!_undefined_//+_",
+    "userLanguage": "_$obj!_undefined_//+_",
+    "pdfViewerEnabled": true
+  },
+  "window": {
+    "innerWidth": 1152,
+    "innerHeight": 641,
+    "outerWidth": 1728,
+    "outerHeight": 1079,
+    "screenX": 0,
+    "screenY": 38,
+    "pageXOffset": 0,
+    "pageYOffset": 0,
+    "Image": "_$obj!_//+_",
+    "isSecureContext": true,
+    "devicePixelRatio": 3,
+    "toolbar": "_$obj!_//+_",
+    "locationbar": "_$obj!_//+_",
+    "ActiveXObject": "_$obj!_undefined_//+_",
+    "external": "_$obj!_//+_",
+    "mozRTCPeerConnection": "_$obj!_undefined_//+_",
+    "postMessage": "_$obj!_//+_",
+    "webkitRequestAnimationFrame": "_$obj!_//+_",
+    "BluetoothUUID": "_$obj!_//+_",
+    "netscape": "_$obj!_undefined_//+_",
+    "localStorage": "_$obj!_//+_",
+    "sessionStorage": "_$obj!_//+_",
+    "indexDB": "_$obj!_undefined_//+_",
+    "BarcodeDetector": "_$obj!_//+_"
+  },
+  "document": {
+    "characterSet": "UTF-8",
+    "compatMode": "BackCompat",
+    "documentMode": "_$obj!_undefined_//+_",
+    "layers": "_$obj!_undefined_//+_",
+    "images": "_$obj!_//+_"
+  },
+  "screen": {
+    "availWidth": 1728,
+    "availHeight": 1079,
+    "availLeft": 0,
+    "availTop": 38,
+    "width": 1728,
+    "height": 1117,
+    "colorDepth": 30,
+    "pixelDepth": 30
+  },
+  "mediaDevices": [
+    {
+      "deviceId": "",
+      "kind": "audioinput",
+      "label": "",
+      "groupId": ""
+    },
+    {
+      "deviceId": "",
+      "kind": "videoinput",
+      "label": "",
+      "groupId": ""
+    },
+    {
+      "deviceId": "",
+      "kind": "audiooutput",
+      "label": "",
+      "groupId": ""
+    }
+  ],
+  "voices": [
+    {
+      "default": true,
+      "lang": "en-GB",
+      "localService": true,
+      "name": "Daniel",
+      "voiceURI": "Daniel"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Albert",
+      "voiceURI": "Albert"
+    },
+    {
+      "default": false,
+      "lang": "it-IT",
+      "localService": true,
+      "name": "Alice",
+      "voiceURI": "Alice"
+    },
+    {
+      "default": false,
+      "lang": "sv-SE",
+      "localService": true,
+      "name": "Alva",
+      "voiceURI": "Alva"
+    },
+    {
+      "default": false,
+      "lang": "fr-CA",
+      "localService": true,
+      "name": "Amélie",
+      "voiceURI": "Amélie"
+    },
+    {
+      "default": false,
+      "lang": "ms-MY",
+      "localService": true,
+      "name": "Amira",
+      "voiceURI": "Amira"
+    },
+    {
+      "default": false,
+      "lang": "de-DE",
+      "localService": true,
+      "name": "Anna",
+      "voiceURI": "Anna"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Bad News",
+      "voiceURI": "Bad News"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Bahh",
+      "voiceURI": "Bahh"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Bells",
+      "voiceURI": "Bells"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Boing",
+      "voiceURI": "Boing"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Bubbles",
+      "voiceURI": "Bubbles"
+    },
+    {
+      "default": false,
+      "lang": "he-IL",
+      "localService": true,
+      "name": "Carmit",
+      "voiceURI": "Carmit"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Cellos",
+      "voiceURI": "Cellos"
+    },
+    {
+      "default": false,
+      "lang": "id-ID",
+      "localService": true,
+      "name": "Damayanti",
+      "voiceURI": "Damayanti"
+    },
+    {
+      "default": false,
+      "lang": "bg-BG",
+      "localService": true,
+      "name": "Daria",
+      "voiceURI": "Daria"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Wobble",
+      "voiceURI": "Wobble"
+    },
+    {
+      "default": false,
+      "lang": "de-DE",
+      "localService": true,
+      "name": "Eddy (German (Germany))",
+      "voiceURI": "Eddy (German (Germany))"
+    },
+    {
+      "default": false,
+      "lang": "en-GB",
+      "localService": true,
+      "name": "Eddy (English (UK))",
+      "voiceURI": "Eddy (English (UK))"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Eddy (English (US))",
+      "voiceURI": "Eddy (English (US))"
+    },
+    {
+      "default": false,
+      "lang": "es-ES",
+      "localService": true,
+      "name": "Eddy (Spanish (Spain))",
+      "voiceURI": "Eddy (Spanish (Spain))"
+    },
+    {
+      "default": false,
+      "lang": "es-MX",
+      "localService": true,
+      "name": "Eddy (Spanish (Mexico))",
+      "voiceURI": "Eddy (Spanish (Mexico))"
+    },
+    {
+      "default": false,
+      "lang": "fi-FI",
+      "localService": true,
+      "name": "Eddy (Finnish (Finland))",
+      "voiceURI": "Eddy (Finnish (Finland))"
+    },
+    {
+      "default": false,
+      "lang": "fr-CA",
+      "localService": true,
+      "name": "Eddy (French (Canada))",
+      "voiceURI": "Eddy (French (Canada))"
+    },
+    {
+      "default": false,
+      "lang": "fr-FR",
+      "localService": true,
+      "name": "Eddy (French (France))",
+      "voiceURI": "Eddy (French (France))"
+    },
+    {
+      "default": false,
+      "lang": "it-IT",
+      "localService": true,
+      "name": "Eddy (Italian (Italy))",
+      "voiceURI": "Eddy (Italian (Italy))"
+    },
+    {
+      "default": false,
+      "lang": "pt-BR",
+      "localService": true,
+      "name": "Eddy (Portuguese (Brazil))",
+      "voiceURI": "Eddy (Portuguese (Brazil))"
+    },
+    {
+      "default": false,
+      "lang": "nl-BE",
+      "localService": true,
+      "name": "Ellen",
+      "voiceURI": "Ellen"
+    },
+    {
+      "default": false,
+      "lang": "de-DE",
+      "localService": true,
+      "name": "Flo (German (Germany))",
+      "voiceURI": "Flo (German (Germany))"
+    },
+    {
+      "default": false,
+      "lang": "en-GB",
+      "localService": true,
+      "name": "Flo (English (UK))",
+      "voiceURI": "Flo (English (UK))"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Flo (English (US))",
+      "voiceURI": "Flo (English (US))"
+    },
+    {
+      "default": false,
+      "lang": "es-ES",
+      "localService": true,
+      "name": "Flo (Spanish (Spain))",
+      "voiceURI": "Flo (Spanish (Spain))"
+    },
+    {
+      "default": false,
+      "lang": "es-MX",
+      "localService": true,
+      "name": "Flo (Spanish (Mexico))",
+      "voiceURI": "Flo (Spanish (Mexico))"
+    },
+    {
+      "default": false,
+      "lang": "fi-FI",
+      "localService": true,
+      "name": "Flo (Finnish (Finland))",
+      "voiceURI": "Flo (Finnish (Finland))"
+    },
+    {
+      "default": false,
+      "lang": "fr-CA",
+      "localService": true,
+      "name": "Flo (French (Canada))",
+      "voiceURI": "Flo (French (Canada))"
+    },
+    {
+      "default": false,
+      "lang": "fr-FR",
+      "localService": true,
+      "name": "Flo (French (France))",
+      "voiceURI": "Flo (French (France))"
+    },
+    {
+      "default": false,
+      "lang": "it-IT",
+      "localService": true,
+      "name": "Flo (Italian (Italy))",
+      "voiceURI": "Flo (Italian (Italy))"
+    },
+    {
+      "default": false,
+      "lang": "pt-BR",
+      "localService": true,
+      "name": "Flo (Portuguese (Brazil))",
+      "voiceURI": "Flo (Portuguese (Brazil))"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Fred",
+      "voiceURI": "Fred"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Good News",
+      "voiceURI": "Good News"
+    },
+    {
+      "default": false,
+      "lang": "de-DE",
+      "localService": true,
+      "name": "Grandma (German (Germany))",
+      "voiceURI": "Grandma (German (Germany))"
+    },
+    {
+      "default": false,
+      "lang": "en-GB",
+      "localService": true,
+      "name": "Grandma (English (UK))",
+      "voiceURI": "Grandma (English (UK))"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Grandma (English (US))",
+      "voiceURI": "Grandma (English (US))"
+    },
+    {
+      "default": false,
+      "lang": "es-ES",
+      "localService": true,
+      "name": "Grandma (Spanish (Spain))",
+      "voiceURI": "Grandma (Spanish (Spain))"
+    },
+    {
+      "default": false,
+      "lang": "es-MX",
+      "localService": true,
+      "name": "Grandma (Spanish (Mexico))",
+      "voiceURI": "Grandma (Spanish (Mexico))"
+    },
+    {
+      "default": false,
+      "lang": "fi-FI",
+      "localService": true,
+      "name": "Grandma (Finnish (Finland))",
+      "voiceURI": "Grandma (Finnish (Finland))"
+    },
+    {
+      "default": false,
+      "lang": "fr-CA",
+      "localService": true,
+      "name": "Grandma (French (Canada))",
+      "voiceURI": "Grandma (French (Canada))"
+    },
+    {
+      "default": false,
+      "lang": "fr-FR",
+      "localService": true,
+      "name": "Grandma (French (France))",
+      "voiceURI": "Grandma (French (France))"
+    },
+    {
+      "default": false,
+      "lang": "it-IT",
+      "localService": true,
+      "name": "Grandma (Italian (Italy))",
+      "voiceURI": "Grandma (Italian (Italy))"
+    },
+    {
+      "default": false,
+      "lang": "pt-BR",
+      "localService": true,
+      "name": "Grandma (Portuguese (Brazil))",
+      "voiceURI": "Grandma (Portuguese (Brazil))"
+    },
+    {
+      "default": false,
+      "lang": "de-DE",
+      "localService": true,
+      "name": "Grandpa (German (Germany))",
+      "voiceURI": "Grandpa (German (Germany))"
+    },
+    {
+      "default": false,
+      "lang": "en-GB",
+      "localService": true,
+      "name": "Grandpa (English (UK))",
+      "voiceURI": "Grandpa (English (UK))"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Grandpa (English (US))",
+      "voiceURI": "Grandpa (English (US))"
+    },
+    {
+      "default": false,
+      "lang": "es-ES",
+      "localService": true,
+      "name": "Grandpa (Spanish (Spain))",
+      "voiceURI": "Grandpa (Spanish (Spain))"
+    },
+    {
+      "default": false,
+      "lang": "es-MX",
+      "localService": true,
+      "name": "Grandpa (Spanish (Mexico))",
+      "voiceURI": "Grandpa (Spanish (Mexico))"
+    },
+    {
+      "default": false,
+      "lang": "fi-FI",
+      "localService": true,
+      "name": "Grandpa (Finnish (Finland))",
+      "voiceURI": "Grandpa (Finnish (Finland))"
+    },
+    {
+      "default": false,
+      "lang": "fr-CA",
+      "localService": true,
+      "name": "Grandpa (French (Canada))",
+      "voiceURI": "Grandpa (French (Canada))"
+    },
+    {
+      "default": false,
+      "lang": "fr-FR",
+      "localService": true,
+      "name": "Grandpa (French (France))",
+      "voiceURI": "Grandpa (French (France))"
+    },
+    {
+      "default": false,
+      "lang": "it-IT",
+      "localService": true,
+      "name": "Grandpa (Italian (Italy))",
+      "voiceURI": "Grandpa (Italian (Italy))"
+    },
+    {
+      "default": false,
+      "lang": "pt-BR",
+      "localService": true,
+      "name": "Grandpa (Portuguese (Brazil))",
+      "voiceURI": "Grandpa (Portuguese (Brazil))"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Jester",
+      "voiceURI": "Jester"
+    },
+    {
+      "default": false,
+      "lang": "ro-RO",
+      "localService": true,
+      "name": "Ioana",
+      "voiceURI": "Ioana"
+    },
+    {
+      "default": false,
+      "lang": "fr-FR",
+      "localService": true,
+      "name": "Jacques",
+      "voiceURI": "Jacques"
+    },
+    {
+      "default": false,
+      "lang": "pt-PT",
+      "localService": true,
+      "name": "Joana",
+      "voiceURI": "Joana"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Junior",
+      "voiceURI": "Junior"
+    },
+    {
+      "default": false,
+      "lang": "th-TH",
+      "localService": true,
+      "name": "Kanya",
+      "voiceURI": "Kanya"
+    },
+    {
+      "default": false,
+      "lang": "en-AU",
+      "localService": true,
+      "name": "Karen",
+      "voiceURI": "Karen"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Kathy",
+      "voiceURI": "Kathy"
+    },
+    {
+      "default": false,
+      "lang": "ja-JP",
+      "localService": true,
+      "name": "Kyoko",
+      "voiceURI": "Kyoko"
+    },
+    {
+      "default": false,
+      "lang": "hr-HR",
+      "localService": true,
+      "name": "Lana",
+      "voiceURI": "Lana"
+    },
+    {
+      "default": false,
+      "lang": "sk-SK",
+      "localService": true,
+      "name": "Laura",
+      "voiceURI": "Laura"
+    },
+    {
+      "default": false,
+      "lang": "hi-IN",
+      "localService": true,
+      "name": "Lekha",
+      "voiceURI": "Lekha"
+    },
+    {
+      "default": false,
+      "lang": "uk-UA",
+      "localService": true,
+      "name": "Lesya",
+      "voiceURI": "Lesya"
+    },
+    {
+      "default": false,
+      "lang": "vi-VN",
+      "localService": true,
+      "name": "Linh",
+      "voiceURI": "Linh"
+    },
+    {
+      "default": false,
+      "lang": "pt-BR",
+      "localService": true,
+      "name": "Luciana",
+      "voiceURI": "Luciana"
+    },
+    {
+      "default": false,
+      "lang": "ar-001",
+      "localService": true,
+      "name": "Majed",
+      "voiceURI": "Majed"
+    },
+    {
+      "default": false,
+      "lang": "hu-HU",
+      "localService": true,
+      "name": "Tünde",
+      "voiceURI": "Tünde"
+    },
+    {
+      "default": false,
+      "lang": "zh-TW",
+      "localService": true,
+      "name": "Meijia",
+      "voiceURI": "Meijia"
+    },
+    {
+      "default": false,
+      "lang": "el-GR",
+      "localService": true,
+      "name": "Melina",
+      "voiceURI": "Melina"
+    },
+    {
+      "default": false,
+      "lang": "ru-RU",
+      "localService": true,
+      "name": "Milena",
+      "voiceURI": "Milena"
+    },
+    {
+      "default": false,
+      "lang": "en-IE",
+      "localService": true,
+      "name": "Moira",
+      "voiceURI": "Moira"
+    },
+    {
+      "default": false,
+      "lang": "es-ES",
+      "localService": true,
+      "name": "Mónica",
+      "voiceURI": "Mónica"
+    },
+    {
+      "default": false,
+      "lang": "ca-ES",
+      "localService": true,
+      "name": "Montse",
+      "voiceURI": "Montse"
+    },
+    {
+      "default": false,
+      "lang": "nb-NO",
+      "localService": true,
+      "name": "Nora",
+      "voiceURI": "Nora"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Organ",
+      "voiceURI": "Organ"
+    },
+    {
+      "default": false,
+      "lang": "es-MX",
+      "localService": true,
+      "name": "Paulina",
+      "voiceURI": "Paulina"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Superstar",
+      "voiceURI": "Superstar"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Ralph",
+      "voiceURI": "Ralph"
+    },
+    {
+      "default": false,
+      "lang": "de-DE",
+      "localService": true,
+      "name": "Reed (German (Germany))",
+      "voiceURI": "Reed (German (Germany))"
+    },
+    {
+      "default": false,
+      "lang": "en-GB",
+      "localService": true,
+      "name": "Reed (English (UK))",
+      "voiceURI": "Reed (English (UK))"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Reed (English (US))",
+      "voiceURI": "Reed (English (US))"
+    },
+    {
+      "default": false,
+      "lang": "es-ES",
+      "localService": true,
+      "name": "Reed (Spanish (Spain))",
+      "voiceURI": "Reed (Spanish (Spain))"
+    },
+    {
+      "default": false,
+      "lang": "es-MX",
+      "localService": true,
+      "name": "Reed (Spanish (Mexico))",
+      "voiceURI": "Reed (Spanish (Mexico))"
+    },
+    {
+      "default": false,
+      "lang": "fi-FI",
+      "localService": true,
+      "name": "Reed (Finnish (Finland))",
+      "voiceURI": "Reed (Finnish (Finland))"
+    },
+    {
+      "default": false,
+      "lang": "fr-CA",
+      "localService": true,
+      "name": "Reed (French (Canada))",
+      "voiceURI": "Reed (French (Canada))"
+    },
+    {
+      "default": false,
+      "lang": "it-IT",
+      "localService": true,
+      "name": "Reed (Italian (Italy))",
+      "voiceURI": "Reed (Italian (Italy))"
+    },
+    {
+      "default": false,
+      "lang": "pt-BR",
+      "localService": true,
+      "name": "Reed (Portuguese (Brazil))",
+      "voiceURI": "Reed (Portuguese (Brazil))"
+    },
+    {
+      "default": false,
+      "lang": "en-IN",
+      "localService": true,
+      "name": "Rishi",
+      "voiceURI": "Rishi"
+    },
+    {
+      "default": false,
+      "lang": "de-DE",
+      "localService": true,
+      "name": "Rocko (German (Germany))",
+      "voiceURI": "Rocko (German (Germany))"
+    },
+    {
+      "default": false,
+      "lang": "en-GB",
+      "localService": true,
+      "name": "Rocko (English (UK))",
+      "voiceURI": "Rocko (English (UK))"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Rocko (English (US))",
+      "voiceURI": "Rocko (English (US))"
+    },
+    {
+      "default": false,
+      "lang": "es-ES",
+      "localService": true,
+      "name": "Rocko (Spanish (Spain))",
+      "voiceURI": "Rocko (Spanish (Spain))"
+    },
+    {
+      "default": false,
+      "lang": "es-MX",
+      "localService": true,
+      "name": "Rocko (Spanish (Mexico))",
+      "voiceURI": "Rocko (Spanish (Mexico))"
+    },
+    {
+      "default": false,
+      "lang": "fi-FI",
+      "localService": true,
+      "name": "Rocko (Finnish (Finland))",
+      "voiceURI": "Rocko (Finnish (Finland))"
+    },
+    {
+      "default": false,
+      "lang": "fr-CA",
+      "localService": true,
+      "name": "Rocko (French (Canada))",
+      "voiceURI": "Rocko (French (Canada))"
+    },
+    {
+      "default": false,
+      "lang": "fr-FR",
+      "localService": true,
+      "name": "Rocko (French (France))",
+      "voiceURI": "Rocko (French (France))"
+    },
+    {
+      "default": false,
+      "lang": "it-IT",
+      "localService": true,
+      "name": "Rocko (Italian (Italy))",
+      "voiceURI": "Rocko (Italian (Italy))"
+    },
+    {
+      "default": false,
+      "lang": "pt-BR",
+      "localService": true,
+      "name": "Rocko (Portuguese (Brazil))",
+      "voiceURI": "Rocko (Portuguese (Brazil))"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Samantha",
+      "voiceURI": "Samantha"
+    },
+    {
+      "default": false,
+      "lang": "de-DE",
+      "localService": true,
+      "name": "Sandy (German (Germany))",
+      "voiceURI": "Sandy (German (Germany))"
+    },
+    {
+      "default": false,
+      "lang": "en-GB",
+      "localService": true,
+      "name": "Sandy (English (UK))",
+      "voiceURI": "Sandy (English (UK))"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Sandy (English (US))",
+      "voiceURI": "Sandy (English (US))"
+    },
+    {
+      "default": false,
+      "lang": "es-ES",
+      "localService": true,
+      "name": "Sandy (Spanish (Spain))",
+      "voiceURI": "Sandy (Spanish (Spain))"
+    },
+    {
+      "default": false,
+      "lang": "es-MX",
+      "localService": true,
+      "name": "Sandy (Spanish (Mexico))",
+      "voiceURI": "Sandy (Spanish (Mexico))"
+    },
+    {
+      "default": false,
+      "lang": "fi-FI",
+      "localService": true,
+      "name": "Sandy (Finnish (Finland))",
+      "voiceURI": "Sandy (Finnish (Finland))"
+    },
+    {
+      "default": false,
+      "lang": "fr-CA",
+      "localService": true,
+      "name": "Sandy (French (Canada))",
+      "voiceURI": "Sandy (French (Canada))"
+    },
+    {
+      "default": false,
+      "lang": "fr-FR",
+      "localService": true,
+      "name": "Sandy (French (France))",
+      "voiceURI": "Sandy (French (France))"
+    },
+    {
+      "default": false,
+      "lang": "it-IT",
+      "localService": true,
+      "name": "Sandy (Italian (Italy))",
+      "voiceURI": "Sandy (Italian (Italy))"
+    },
+    {
+      "default": false,
+      "lang": "pt-BR",
+      "localService": true,
+      "name": "Sandy (Portuguese (Brazil))",
+      "voiceURI": "Sandy (Portuguese (Brazil))"
+    },
+    {
+      "default": false,
+      "lang": "da-DK",
+      "localService": true,
+      "name": "Sara",
+      "voiceURI": "Sara"
+    },
+    {
+      "default": false,
+      "lang": "fi-FI",
+      "localService": true,
+      "name": "Satu",
+      "voiceURI": "Satu"
+    },
+    {
+      "default": false,
+      "lang": "de-DE",
+      "localService": true,
+      "name": "Shelley (German (Germany))",
+      "voiceURI": "Shelley (German (Germany))"
+    },
+    {
+      "default": false,
+      "lang": "en-GB",
+      "localService": true,
+      "name": "Shelley (English (UK))",
+      "voiceURI": "Shelley (English (UK))"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Shelley (English (US))",
+      "voiceURI": "Shelley (English (US))"
+    },
+    {
+      "default": false,
+      "lang": "es-ES",
+      "localService": true,
+      "name": "Shelley (Spanish (Spain))",
+      "voiceURI": "Shelley (Spanish (Spain))"
+    },
+    {
+      "default": false,
+      "lang": "es-MX",
+      "localService": true,
+      "name": "Shelley (Spanish (Mexico))",
+      "voiceURI": "Shelley (Spanish (Mexico))"
+    },
+    {
+      "default": false,
+      "lang": "fi-FI",
+      "localService": true,
+      "name": "Shelley (Finnish (Finland))",
+      "voiceURI": "Shelley (Finnish (Finland))"
+    },
+    {
+      "default": false,
+      "lang": "fr-CA",
+      "localService": true,
+      "name": "Shelley (French (Canada))",
+      "voiceURI": "Shelley (French (Canada))"
+    },
+    {
+      "default": false,
+      "lang": "fr-FR",
+      "localService": true,
+      "name": "Shelley (French (France))",
+      "voiceURI": "Shelley (French (France))"
+    },
+    {
+      "default": false,
+      "lang": "it-IT",
+      "localService": true,
+      "name": "Shelley (Italian (Italy))",
+      "voiceURI": "Shelley (Italian (Italy))"
+    },
+    {
+      "default": false,
+      "lang": "pt-BR",
+      "localService": true,
+      "name": "Shelley (Portuguese (Brazil))",
+      "voiceURI": "Shelley (Portuguese (Brazil))"
+    },
+    {
+      "default": false,
+      "lang": "zh-HK",
+      "localService": true,
+      "name": "Sinji",
+      "voiceURI": "Sinji"
+    },
+    {
+      "default": false,
+      "lang": "en-ZA",
+      "localService": true,
+      "name": "Tessa",
+      "voiceURI": "Tessa"
+    },
+    {
+      "default": false,
+      "lang": "fr-FR",
+      "localService": true,
+      "name": "Thomas",
+      "voiceURI": "Thomas"
+    },
+    {
+      "default": false,
+      "lang": "zh-CN",
+      "localService": true,
+      "name": "Tingting",
+      "voiceURI": "Tingting"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Trinoids",
+      "voiceURI": "Trinoids"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Whisper",
+      "voiceURI": "Whisper"
+    },
+    {
+      "default": false,
+      "lang": "nl-NL",
+      "localService": true,
+      "name": "Xander",
+      "voiceURI": "Xander"
+    },
+    {
+      "default": false,
+      "lang": "tr-TR",
+      "localService": true,
+      "name": "Yelda",
+      "voiceURI": "Yelda"
+    },
+    {
+      "default": false,
+      "lang": "ko-KR",
+      "localService": true,
+      "name": "Yuna",
+      "voiceURI": "Yuna"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Zarvox",
+      "voiceURI": "Zarvox"
+    },
+    {
+      "default": false,
+      "lang": "pl-PL",
+      "localService": true,
+      "name": "Zosia",
+      "voiceURI": "Zosia"
+    },
+    {
+      "default": false,
+      "lang": "cs-CZ",
+      "localService": true,
+      "name": "Zuzana",
+      "voiceURI": "Zuzana"
+    }
+  ],
+  "battery": {
+    "charging": false,
+    "chargingTime": null,
+    "dischargingTime": 36660,
+    "level": 0.94
+  },
+  "keyboard": {
+    "KeyA": "a",
+    "KeyB": "b",
+    "KeyC": "c",
+    "KeyD": "d",
+    "KeyE": "e",
+    "KeyF": "f",
+    "KeyG": "g",
+    "KeyH": "h",
+    "KeyI": "i",
+    "KeyJ": "j",
+    "KeyK": "k",
+    "KeyL": "l",
+    "KeyM": "m",
+    "KeyN": "n",
+    "KeyO": "o",
+    "KeyP": "p",
+    "KeyQ": "q",
+    "KeyR": "r",
+    "KeyS": "s",
+    "KeyT": "t",
+    "KeyU": "u",
+    "KeyV": "v",
+    "KeyW": "w",
+    "KeyX": "x",
+    "KeyY": "y",
+    "KeyZ": "z",
+    "Digit1": "1",
+    "Digit2": "2",
+    "Digit3": "3",
+    "Digit4": "4",
+    "Digit5": "5",
+    "Digit6": "6",
+    "Digit7": "7",
+    "Digit8": "8",
+    "Digit9": "9",
+    "Digit0": "0",
+    "Minus": "-",
+    "Equal": "=",
+    "BracketLeft": "[",
+    "BracketRight": "]",
+    "Backslash": "\\",
+    "Semicolon": ";",
+    "Quote": "'",
+    "Backquote": "`",
+    "Comma": ",",
+    "Period": ".",
+    "Slash": "/",
+    "IntlBackslash": "§"
+  },
+  "highEntropyValues": {
+    "architecture": "arm",
+    "bitness": "64",
+    "brands": [
+      {
+        "brand": "Chromium",
+        "version": "116"
+      },
+      {
+        "brand": "Not)A;Brand",
+        "version": "24"
+      },
+      {
+        "brand": "Google Chrome",
+        "version": "116"
+      }
+    ],
+    "fullVersionList": [
+      {
+        "brand": "Chromium",
+        "version": "116.0.5845.110"
+      },
+      {
+        "brand": "Not)A;Brand",
+        "version": "24.0.0.0"
+      },
+      {
+        "brand": "Google Chrome",
+        "version": "116.0.5845.110"
+      }
+    ],
+    "mobile": false,
+    "platform": "macOS",
+    "platformVersion": "13.3.1"
+  },
+  "permissions": {
+    "storage-access": {
+      "exType": "TypeError",
+      "msg": "Failed to execute 'query' on 'Permissions': The Storage Access API is not enabled."
+    },
+    "push": {
+      "exType": "DOMException",
+      "msg": "Failed to execute 'query' on 'Permissions': Push Permission without userVisibleOnly:true isn't supported yet."
+    },
+    "speaker": {
+      "exType": "TypeError",
+      "msg": "Failed to execute 'query' on 'Permissions': Failed to read the 'name' property from 'PermissionDescriptor': The provided value 'speaker' is not a valid enum value of type PermissionName."
+    },
+    "device-info": {
+      "exType": "TypeError",
+      "msg": "Failed to execute 'query' on 'Permissions': Failed to read the 'name' property from 'PermissionDescriptor': The provided value 'device-info' is not a valid enum value of type PermissionName."
+    },
+    "bluetooth": {
+      "exType": "TypeError",
+      "msg": "Failed to execute 'query' on 'Permissions': Failed to read the 'name' property from 'PermissionDescriptor': The provided value 'bluetooth' is not a valid enum value of type PermissionName."
+    },
+    "clipboard": {
+      "exType": "TypeError",
+      "msg": "Failed to execute 'query' on 'Permissions': Failed to read the 'name' property from 'PermissionDescriptor': The provided value 'clipboard' is not a valid enum value of type PermissionName."
+    },
+    "ambient-light-sensor": {
+      "exType": "TypeError",
+      "msg": "Failed to execute 'query' on 'Permissions': GenericSensorExtraClasses flag is not enabled."
+    },
+    "accessibility-events": {
+      "exType": "TypeError",
+      "msg": "Failed to execute 'query' on 'Permissions': Accessibility Object Model is not enabled."
+    },
+    "nfc": {
+      "exType": "TypeError",
+      "msg": "Failed to execute 'query' on 'Permissions': Web NFC is not enabled."
+    },
+    "system-wake-lock": {
+      "exType": "TypeError",
+      "msg": "Failed to execute 'query' on 'Permissions': System Wake Lock is not enabled."
+    },
+    "font-access": {
+      "exType": "TypeError",
+      "msg": "Failed to execute 'query' on 'Permissions': Failed to read the 'name' property from 'PermissionDescriptor': The provided value 'font-access' is not a valid enum value of type PermissionName."
+    },
+    "midi": {
+      "state": "granted"
+    },
+    "background-fetch": {
+      "state": "granted"
+    },
+    "background-sync": {
+      "state": "granted"
+    },
+    "accelerometer": {
+      "state": "granted"
+    },
+    "gyroscope": {
+      "state": "granted"
+    },
+    "magnetometer": {
+      "state": "granted"
+    },
+    "screen-wake-lock": {
+      "state": "granted"
+    },
+    "clipboard-read": {
+      "state": "prompt"
+    },
+    "clipboard-write": {
+      "state": "granted"
+    },
+    "payment-handler": {
+      "state": "granted"
+    },
+    "periodic-background-sync": {
+      "state": "denied"
+    },
+    "geolocation": {
+      "state": "prompt"
+    },
+    "notifications": {
+      "state": "prompt"
+    },
+    "camera": {
+      "state": "prompt"
+    },
+    "microphone": {
+      "state": "prompt"
+    },
+    "display-capture": {
+      "state": "prompt"
+    },
+    "persistent-storage": {
+      "state": "prompt"
+    },
+    "idle-detection": {
+      "state": "prompt"
+    },
+    "window-placement": {
+      "state": "prompt"
+    }
+  },
+  "mimeTypes": [
+    {
+      "mimeType": "application/ogg",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "audio/aac",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "audio/flac",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "audio/mp3",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "audio/mp4",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "audio/mp4; codecs=\"Opus\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "audio/mp4; codecs=\"flac\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "audio/mp4; codecs=\"mp3\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "audio/mp4; codecs=\"mp4a.40\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "audio/mp4; codecs=\"mp4a.40.2\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "audio/mp4; codecs=\"mp4a.40.29\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "audio/mp4; codecs=\"mp4a.40.5\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "audio/mp4; codecs=\"mp4a.66\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "audio/mp4; codecs=\"mp4a.67\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "audio/mp4; codecs=\"mp4a.68\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "audio/mp4; codecs=\"mp4a.69\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "audio/mp4; codecs=\"mp4a.6B\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "audio/mpeg",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "audio/mpeg; codecs=\"mp3\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "audio/ogg; codecs=\"flac\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "audio/ogg; codecs=\"opus\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "audio/ogg; codecs=\"vorbis\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "audio/wav",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "audio/wav; codecs=\"1\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "audio/webm",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaRecorder": true
+    },
+    {
+      "mimeType": "audio/webm; codecs=\"opus\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true,
+      "mediaRecorder": true
+    },
+    {
+      "mimeType": "audio/webm; codecs=\"vorbis\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "audio/x-m4a",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "audio/x-wav",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "audio/x-wav; codecs=\"1\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/3gpp",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"av01.0.08M.08\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42000a\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42000b\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42000c\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42000d\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.420014\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.420015\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.420016\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42001e\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42001f\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.420020\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.420028\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.420029\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42002a\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.420032\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.420033\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.420034\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42003c\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42003d\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42003e\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42003f\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.420040\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.420050\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42006e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.420085\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42400a\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42400b\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42400c\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42400d\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.424014\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.424015\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.424016\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42401e\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42401f\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.424020\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.424028\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.424029\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42402a\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.424032\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.424033\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.424034\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42403c\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42403d\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42403e\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42403f\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.424040\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.424050\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42406e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.424085\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42E009\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42E01E\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42E034\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42F01E\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42c00d\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4D001E\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d000a\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d000b\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d000c\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d000d\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d0014\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d0015\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d0016\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d001e\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d001f\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d0020\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d0028\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d0029\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d002a\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d0032\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d0033\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d0034\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d003c\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d003d\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d003e\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d003f\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d0040\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d0050\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d006e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d0085\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d400a\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d400b\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d400c\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d400d\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d4014\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d4015\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d4016\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d401e\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d401f\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d4020\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d4028\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d4029\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d402a\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d4032\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d4033\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d4034\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d403c\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d403d\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d403e\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d403f\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d4040\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d4050\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d406e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d4085\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53000a\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53000b\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53000c\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53000d\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530014\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530015\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530016\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53001e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53001f\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530020\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530028\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530029\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53002a\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530032\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530033\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530034\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53003c\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53003d\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53003e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53003f\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530040\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530050\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53006e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530085\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53040a\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53040b\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53040c\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53040d\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530414\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530415\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530416\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53041e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53041f\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530420\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530428\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530429\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53042a\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530432\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530433\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530434\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53043c\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53043d\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53043e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53043f\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530440\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530450\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53046e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530485\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56000a\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56000b\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56000c\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56000d\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560014\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560015\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560016\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56001e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56001f\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560020\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560028\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560029\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56002a\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560032\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560033\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560034\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56003c\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56003d\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56003e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56003f\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560040\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560050\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56006e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560085\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56040a\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56040b\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56040c\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56040d\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560414\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560415\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560416\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56041e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56041f\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560420\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560428\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560429\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56042a\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560432\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560433\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560434\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56043c\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56043d\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56043e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56043f\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560440\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560450\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56046e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560485\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56100a\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56100b\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56100c\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56100d\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.561014\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.561015\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.561016\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56101e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56101f\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.561020\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.561028\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.561029\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56102a\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.561032\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.561033\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.561034\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56103c\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56103d\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56103e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56103f\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.561040\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.561050\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56106e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.561085\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.58000a\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.58000b\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.58000c\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.58000d\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.580014\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.580015\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.580016\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.58001e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.58001f\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.580020\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.580028\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.580029\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.58002a\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.580032\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.580033\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.580034\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.58003c\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.58003d\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.58003e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.58003f\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.580040\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.580050\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.58006e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.580085\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64000a\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64000b\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64000c\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64000d\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640014\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640015\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640016\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64001E, mp4a.40.2\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64001e\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64001f\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640020\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640028\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640029\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64002a\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640032\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640033\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640034\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64003c\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64003d\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64003e\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64003f\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640040\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640050\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64006e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640085\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64080a\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64080b\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64080c\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64080d\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640814\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640815\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640816\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64081e\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64081f\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640820\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640828\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640829\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64082a\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640832\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640833\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640834\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64083c\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64083d\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64083e\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64083f\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640840\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640850\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64086e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640885\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e000a\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e000b\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e000c\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e000d\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e0014\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e0015\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e0016\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e001e\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e001f\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e0020\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e0028\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e0029\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e002a\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e0032\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e0033\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e0034\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e003c\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e003d\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e003e\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e003f\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e0040\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e0050\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e006e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e0085\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e100a\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e100b\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e100c\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e100d\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e1014\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e1015\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e1016\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e101e\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e101f\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e1020\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e1028\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e1029\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e102a\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e1032\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e1033\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e1034\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e103c\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e103d\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e103e\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e103f\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e1040\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e1050\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e106e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e1085\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.76000a\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.76000b\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.76000c\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.76000d\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.760014\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.760015\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.760016\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.76001e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.76001f\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.760020\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.760028\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.760029\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.76002a\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.760032\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.760033\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.760034\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.76003c\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.76003d\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.76003e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.76003f\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.760040\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.760050\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.76006e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.760085\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a000a\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a000b\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a000c\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a000d\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a0014\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a0015\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a0016\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a001e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a001f\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a0020\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a0028\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a0029\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a002a\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a0032\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a0033\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a0034\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a003c\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a003d\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a003e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a003f\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a0040\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a0050\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a006e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a0085\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a100a\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a100b\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a100c\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a100d\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a1014\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a1015\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a1016\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a101e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a101f\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a1020\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a1028\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a1029\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a102a\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a1032\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a1033\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a1034\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a103c\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a103d\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a103e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a103f\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a1040\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a1050\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a106e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a1085\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.80000a\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.80000b\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.80000c\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.80000d\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.800014\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.800015\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.800016\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.80001e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.80001f\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.800020\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.800028\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.800029\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.80002a\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.800032\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.800033\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.800034\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.80003c\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.80003d\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.80003e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.80003f\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.800040\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.800050\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.80006e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.800085\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4000a\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4000b\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4000c\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4000d\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f40014\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f40015\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f40016\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4001e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4001f\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f40020\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f40028\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f40029\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4002a\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f40032\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f40033\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f40034\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4003c\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4003d\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4003e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4003f\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f40040\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f40050\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4006e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f40085\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4100a\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4100b\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4100c\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4100d\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f41014\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f41015\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f41016\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4101e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4101f\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f41020\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f41028\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f41029\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4102a\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f41032\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f41033\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f41034\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4103c\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4103d\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4103e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4103f\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f41040\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f41050\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4106e\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f41085\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc3\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc3.42001E\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"flac\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"hev1.1.6.L93.90\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"hev1.1.6.L93.B0\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"hvc1.1.6.L93.90\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"hvc1.1.6.L93.B0\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"mp4a.40.02\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"mp4a.40.2\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"mp4a.40.29\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"mp4a.40.5\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"mp4a.67\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"vp09.00.10.08\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"vp09.00.50.08\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"vp09.01.20.08.01\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"vp09.01.20.08.01.01.01.01.00\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"vp09.02.10.10.01.09.16.09.01\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/ogg",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/ogg; codecs=\"flac\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/ogg; codecs=\"opus\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/ogg; codecs=\"theora\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/ogg; codecs=\"theora, flac\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/ogg; codecs=\"theora, vorbis\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/ogg; codecs=\"vp8\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/webm",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaRecorder": true
+    },
+    {
+      "mimeType": "video/webm; codecs=\"av01.0.04M.08\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/webm; codecs=\"vorbis\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/webm; codecs=\"vorbis,vp9\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/webm; codecs=\"vp09.02.10.08\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/webm; codecs=\"vp8\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true,
+      "mediaRecorder": true
+    },
+    {
+      "mimeType": "video/webm; codecs=\"vp8, opus\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true,
+      "mediaRecorder": true
+    },
+    {
+      "mimeType": "video/webm; codecs=\"vp8, vorbis\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/webm; codecs=\"vp8.0\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaRecorder": true
+    },
+    {
+      "mimeType": "video/webm; codecs=\"vp8.0, vorbis\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/webm; codecs=\"vp9\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true,
+      "mediaRecorder": true
+    },
+    {
+      "mimeType": "video/webm; codecs=\"vp9, opus\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true,
+      "mediaRecorder": true
+    },
+    {
+      "mimeType": "video/webm; codecs=\"vp9, vorbis\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/x-m4v",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/x-m4v; codecs=\"avc1.42AC23\"",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/x-matroska",
+      "mediaRecorder": true
+    }
+  ],
+  "webRTC": {}
+}
\ No newline at end of file
diff --git a/fingerprinting/fp_chromium.json b/fingerprinting/fp_chromium.json
new file mode 100644
index 0000000000..cf71cf6efd
--- /dev/null
+++ b/fingerprinting/fp_chromium.json
@@ -0,0 +1,6503 @@
+{
+  "plugins": {
+    "mimeTypes": [
+      {
+        "type": "application/pdf",
+        "suffixes": "pdf",
+        "description": "Portable Document Format",
+        "__pluginName": "PDF Viewer"
+      },
+      {
+        "type": "text/pdf",
+        "suffixes": "pdf",
+        "description": "Portable Document Format",
+        "__pluginName": "PDF Viewer"
+      }
+    ],
+    "plugins": [
+      {
+        "name": "PDF Viewer",
+        "filename": "internal-pdf-viewer",
+        "description": "Portable Document Format",
+        "__mimeTypes": [
+          "application/pdf",
+          "text/pdf"
+        ]
+      },
+      {
+        "name": "Chrome PDF Viewer",
+        "filename": "internal-pdf-viewer",
+        "description": "Portable Document Format",
+        "__mimeTypes": [
+          "application/pdf",
+          "text/pdf"
+        ]
+      },
+      {
+        "name": "Chromium PDF Viewer",
+        "filename": "internal-pdf-viewer",
+        "description": "Portable Document Format",
+        "__mimeTypes": [
+          "application/pdf",
+          "text/pdf"
+        ]
+      },
+      {
+        "name": "Microsoft Edge PDF Viewer",
+        "filename": "internal-pdf-viewer",
+        "description": "Portable Document Format",
+        "__mimeTypes": [
+          "application/pdf",
+          "text/pdf"
+        ]
+      },
+      {
+        "name": "WebKit built-in PDF",
+        "filename": "internal-pdf-viewer",
+        "description": "Portable Document Format",
+        "__mimeTypes": [
+          "application/pdf",
+          "text/pdf"
+        ]
+      }
+    ]
+  },
+  "gpu": {
+    "vendor": "Google Inc. (Apple)",
+    "renderer": "ANGLE (Apple, Apple M2 Pro, OpenGL 4.1)"
+  },
+  "windowVersion": [
+    "Object",
+    "Function",
+    "Array",
+    "Number",
+    "parseFloat",
+    "parseInt",
+    "Infinity",
+    "NaN",
+    "undefined",
+    "Boolean",
+    "String",
+    "Symbol",
+    "Date",
+    "Promise",
+    "RegExp",
+    "Error",
+    "AggregateError",
+    "EvalError",
+    "RangeError",
+    "ReferenceError",
+    "SyntaxError",
+    "TypeError",
+    "URIError",
+    "globalThis",
+    "JSON",
+    "Math",
+    "Intl",
+    "ArrayBuffer",
+    "Atomics",
+    "Uint8Array",
+    "Int8Array",
+    "Uint16Array",
+    "Int16Array",
+    "Uint32Array",
+    "Int32Array",
+    "Float32Array",
+    "Float64Array",
+    "Uint8ClampedArray",
+    "BigUint64Array",
+    "BigInt64Array",
+    "DataView",
+    "Map",
+    "BigInt",
+    "Set",
+    "WeakMap",
+    "WeakSet",
+    "Proxy",
+    "Reflect",
+    "FinalizationRegistry",
+    "WeakRef",
+    "decodeURI",
+    "decodeURIComponent",
+    "encodeURI",
+    "encodeURIComponent",
+    "escape",
+    "unescape",
+    "eval",
+    "isFinite",
+    "isNaN",
+    "console",
+    "Option",
+    "Image",
+    "Audio",
+    "webkitURL",
+    "webkitRTCPeerConnection",
+    "webkitMediaStream",
+    "WebKitMutationObserver",
+    "WebKitCSSMatrix",
+    "XSLTProcessor",
+    "XPathResult",
+    "XPathExpression",
+    "XPathEvaluator",
+    "XMLSerializer",
+    "XMLHttpRequestUpload",
+    "XMLHttpRequestEventTarget",
+    "XMLHttpRequest",
+    "XMLDocument",
+    "WritableStreamDefaultWriter",
+    "WritableStreamDefaultController",
+    "WritableStream",
+    "Worker",
+    "Window",
+    "WheelEvent",
+    "WebSocket",
+    "WebGLVertexArrayObject",
+    "WebGLUniformLocation",
+    "WebGLTransformFeedback",
+    "WebGLTexture",
+    "WebGLSync",
+    "WebGLShaderPrecisionFormat",
+    "WebGLShader",
+    "WebGLSampler",
+    "WebGLRenderingContext",
+    "WebGLRenderbuffer",
+    "WebGLQuery",
+    "WebGLProgram",
+    "WebGLFramebuffer",
+    "WebGLContextEvent",
+    "WebGLBuffer",
+    "WebGLActiveInfo",
+    "WebGL2RenderingContext",
+    "WaveShaperNode",
+    "VisualViewport",
+    "VirtualKeyboardGeometryChangeEvent",
+    "ValidityState",
+    "VTTCue",
+    "UserActivation",
+    "URLSearchParams",
+    "URLPattern",
+    "URL",
+    "UIEvent",
+    "TrustedTypePolicyFactory",
+    "TrustedTypePolicy",
+    "TrustedScriptURL",
+    "TrustedScript",
+    "TrustedHTML",
+    "TreeWalker",
+    "TransitionEvent",
+    "TransformStreamDefaultController",
+    "TransformStream",
+    "TrackEvent",
+    "TouchList",
+    "TouchEvent",
+    "Touch",
+    "TimeRanges",
+    "TextTrackList",
+    "TextTrackCueList",
+    "TextTrackCue",
+    "TextTrack",
+    "TextMetrics",
+    "TextEvent",
+    "TextEncoderStream",
+    "TextEncoder",
+    "TextDecoderStream",
+    "TextDecoder",
+    "Text",
+    "TaskSignal",
+    "TaskPriorityChangeEvent",
+    "TaskController",
+    "TaskAttributionTiming",
+    "SyncManager",
+    "SubmitEvent",
+    "StyleSheetList",
+    "StyleSheet",
+    "StylePropertyMapReadOnly",
+    "StylePropertyMap",
+    "StorageEvent",
+    "Storage",
+    "StereoPannerNode",
+    "StaticRange",
+    "SourceBufferList",
+    "SourceBuffer",
+    "ShadowRoot",
+    "Selection",
+    "SecurityPolicyViolationEvent",
+    "ScriptProcessorNode",
+    "ScreenOrientation",
+    "Screen",
+    "Scheduling",
+    "Scheduler",
+    "SVGViewElement",
+    "SVGUseElement",
+    "SVGUnitTypes",
+    "SVGTransformList",
+    "SVGTransform",
+    "SVGTitleElement",
+    "SVGTextPositioningElement",
+    "SVGTextPathElement",
+    "SVGTextElement",
+    "SVGTextContentElement",
+    "SVGTSpanElement",
+    "SVGSymbolElement",
+    "SVGSwitchElement",
+    "SVGStyleElement",
+    "SVGStringList",
+    "SVGStopElement",
+    "SVGSetElement",
+    "SVGScriptElement",
+    "SVGSVGElement",
+    "SVGRectElement",
+    "SVGRect",
+    "SVGRadialGradientElement",
+    "SVGPreserveAspectRatio",
+    "SVGPolylineElement",
+    "SVGPolygonElement",
+    "SVGPointList",
+    "SVGPoint",
+    "SVGPatternElement",
+    "SVGPathElement",
+    "SVGNumberList",
+    "SVGNumber",
+    "SVGMetadataElement",
+    "SVGMatrix",
+    "SVGMaskElement",
+    "SVGMarkerElement",
+    "SVGMPathElement",
+    "SVGLinearGradientElement",
+    "SVGLineElement",
+    "SVGLengthList",
+    "SVGLength",
+    "SVGImageElement",
+    "SVGGraphicsElement",
+    "SVGGradientElement",
+    "SVGGeometryElement",
+    "SVGGElement",
+    "SVGForeignObjectElement",
+    "SVGFilterElement",
+    "SVGFETurbulenceElement",
+    "SVGFETileElement",
+    "SVGFESpotLightElement",
+    "SVGFESpecularLightingElement",
+    "SVGFEPointLightElement",
+    "SVGFEOffsetElement",
+    "SVGFEMorphologyElement",
+    "SVGFEMergeNodeElement",
+    "SVGFEMergeElement",
+    "SVGFEImageElement",
+    "SVGFEGaussianBlurElement",
+    "SVGFEFuncRElement",
+    "SVGFEFuncGElement",
+    "SVGFEFuncBElement",
+    "SVGFEFuncAElement",
+    "SVGFEFloodElement",
+    "SVGFEDropShadowElement",
+    "SVGFEDistantLightElement",
+    "SVGFEDisplacementMapElement",
+    "SVGFEDiffuseLightingElement",
+    "SVGFEConvolveMatrixElement",
+    "SVGFECompositeElement",
+    "SVGFEComponentTransferElement",
+    "SVGFEColorMatrixElement",
+    "SVGFEBlendElement",
+    "SVGEllipseElement",
+    "SVGElement",
+    "SVGDescElement",
+    "SVGDefsElement",
+    "SVGComponentTransferFunctionElement",
+    "SVGClipPathElement",
+    "SVGCircleElement",
+    "SVGAnimationElement",
+    "SVGAnimatedTransformList",
+    "SVGAnimatedString",
+    "SVGAnimatedRect",
+    "SVGAnimatedPreserveAspectRatio",
+    "SVGAnimatedNumberList",
+    "SVGAnimatedNumber",
+    "SVGAnimatedLengthList",
+    "SVGAnimatedLength",
+    "SVGAnimatedInteger",
+    "SVGAnimatedEnumeration",
+    "SVGAnimatedBoolean",
+    "SVGAnimatedAngle",
+    "SVGAnimateTransformElement",
+    "SVGAnimateMotionElement",
+    "SVGAnimateElement",
+    "SVGAngle",
+    "SVGAElement",
+    "Response",
+    "ResizeObserverSize",
+    "ResizeObserverEntry",
+    "ResizeObserver",
+    "Request",
+    "ReportingObserver",
+    "ReadableStreamDefaultReader",
+    "ReadableStreamDefaultController",
+    "ReadableStreamBYOBRequest",
+    "ReadableStreamBYOBReader",
+    "ReadableStream",
+    "ReadableByteStreamController",
+    "Range",
+    "RadioNodeList",
+    "RTCTrackEvent",
+    "RTCStatsReport",
+    "RTCSessionDescription",
+    "RTCSctpTransport",
+    "RTCRtpTransceiver",
+    "RTCRtpSender",
+    "RTCRtpReceiver",
+    "RTCPeerConnectionIceEvent",
+    "RTCPeerConnectionIceErrorEvent",
+    "RTCPeerConnection",
+    "RTCIceTransport",
+    "RTCIceCandidate",
+    "RTCErrorEvent",
+    "RTCError",
+    "RTCEncodedVideoFrame",
+    "RTCEncodedAudioFrame",
+    "RTCDtlsTransport",
+    "RTCDataChannelEvent",
+    "RTCDataChannel",
+    "RTCDTMFToneChangeEvent",
+    "RTCDTMFSender",
+    "RTCCertificate",
+    "PromiseRejectionEvent",
+    "ProgressEvent",
+    "Profiler",
+    "ProcessingInstruction",
+    "PopStateEvent",
+    "PointerEvent",
+    "PluginArray",
+    "Plugin",
+    "PictureInPictureWindow",
+    "PictureInPictureEvent",
+    "PeriodicWave",
+    "PerformanceTiming",
+    "PerformanceServerTiming",
+    "PerformanceResourceTiming",
+    "PerformancePaintTiming",
+    "PerformanceObserverEntryList",
+    "PerformanceObserver",
+    "PerformanceNavigationTiming",
+    "PerformanceNavigation",
+    "PerformanceMeasure",
+    "PerformanceMark",
+    "PerformanceLongTaskTiming",
+    "PerformanceEventTiming",
+    "PerformanceEntry",
+    "PerformanceElementTiming",
+    "Performance",
+    "Path2D",
+    "PannerNode",
+    "PageTransitionEvent",
+    "OverconstrainedError",
+    "OscillatorNode",
+    "OffscreenCanvasRenderingContext2D",
+    "OffscreenCanvas",
+    "OfflineAudioContext",
+    "OfflineAudioCompletionEvent",
+    "NodeList",
+    "NodeIterator",
+    "NodeFilter",
+    "Node",
+    "NetworkInformation",
+    "Navigator",
+    "NavigationTransition",
+    "NavigationHistoryEntry",
+    "NavigationDestination",
+    "NavigationCurrentEntryChangeEvent",
+    "Navigation",
+    "NavigateEvent",
+    "NamedNodeMap",
+    "MutationRecord",
+    "MutationObserver",
+    "MouseEvent",
+    "MimeTypeArray",
+    "MimeType",
+    "MessagePort",
+    "MessageEvent",
+    "MessageChannel",
+    "MediaStreamTrackProcessor",
+    "MediaStreamTrackGenerator",
+    "MediaStreamTrackEvent",
+    "MediaStreamTrack",
+    "MediaStreamEvent",
+    "MediaStreamAudioSourceNode",
+    "MediaStreamAudioDestinationNode",
+    "MediaStream",
+    "MediaSourceHandle",
+    "MediaSource",
+    "MediaRecorder",
+    "MediaQueryListEvent",
+    "MediaQueryList",
+    "MediaList",
+    "MediaError",
+    "MediaEncryptedEvent",
+    "MediaElementAudioSourceNode",
+    "MediaCapabilities",
+    "MathMLElement",
+    "Location",
+    "LayoutShiftAttribution",
+    "LayoutShift",
+    "LargestContentfulPaint",
+    "KeyframeEffect",
+    "KeyboardEvent",
+    "IntersectionObserverEntry",
+    "IntersectionObserver",
+    "InputEvent",
+    "InputDeviceInfo",
+    "InputDeviceCapabilities",
+    "ImageData",
+    "ImageCapture",
+    "ImageBitmapRenderingContext",
+    "ImageBitmap",
+    "IdleDeadline",
+    "IIRFilterNode",
+    "IDBVersionChangeEvent",
+    "IDBTransaction",
+    "IDBRequest",
+    "IDBOpenDBRequest",
+    "IDBObjectStore",
+    "IDBKeyRange",
+    "IDBIndex",
+    "IDBFactory",
+    "IDBDatabase",
+    "IDBCursorWithValue",
+    "IDBCursor",
+    "History",
+    "Headers",
+    "HashChangeEvent",
+    "HTMLVideoElement",
+    "HTMLUnknownElement",
+    "HTMLUListElement",
+    "HTMLTrackElement",
+    "HTMLTitleElement",
+    "HTMLTimeElement",
+    "HTMLTextAreaElement",
+    "HTMLTemplateElement",
+    "HTMLTableSectionElement",
+    "HTMLTableRowElement",
+    "HTMLTableElement",
+    "HTMLTableColElement",
+    "HTMLTableCellElement",
+    "HTMLTableCaptionElement",
+    "HTMLStyleElement",
+    "HTMLSpanElement",
+    "HTMLSourceElement",
+    "HTMLSlotElement",
+    "HTMLSelectElement",
+    "HTMLScriptElement",
+    "HTMLQuoteElement",
+    "HTMLProgressElement",
+    "HTMLPreElement",
+    "HTMLPictureElement",
+    "HTMLParamElement",
+    "HTMLParagraphElement",
+    "HTMLOutputElement",
+    "HTMLOptionsCollection",
+    "HTMLOptionElement",
+    "HTMLOptGroupElement",
+    "HTMLObjectElement",
+    "HTMLOListElement",
+    "HTMLModElement",
+    "HTMLMeterElement",
+    "HTMLMetaElement",
+    "HTMLMenuElement",
+    "HTMLMediaElement",
+    "HTMLMarqueeElement",
+    "HTMLMapElement",
+    "HTMLLinkElement",
+    "HTMLLegendElement",
+    "HTMLLabelElement",
+    "HTMLLIElement",
+    "HTMLInputElement",
+    "HTMLImageElement",
+    "HTMLIFrameElement",
+    "HTMLHtmlElement",
+    "HTMLHeadingElement",
+    "HTMLHeadElement",
+    "HTMLHRElement",
+    "HTMLFrameSetElement",
+    "HTMLFrameElement",
+    "HTMLFormElement",
+    "HTMLFormControlsCollection",
+    "HTMLFontElement",
+    "HTMLFieldSetElement",
+    "HTMLEmbedElement",
+    "HTMLElement",
+    "HTMLDocument",
+    "HTMLDivElement",
+    "HTMLDirectoryElement",
+    "HTMLDialogElement",
+    "HTMLDetailsElement",
+    "HTMLDataListElement",
+    "HTMLDataElement",
+    "HTMLDListElement",
+    "HTMLCollection",
+    "HTMLCanvasElement",
+    "HTMLButtonElement",
+    "HTMLBodyElement",
+    "HTMLBaseElement",
+    "HTMLBRElement",
+    "HTMLAudioElement",
+    "HTMLAreaElement",
+    "HTMLAnchorElement",
+    "HTMLAllCollection",
+    "GeolocationPositionError",
+    "GeolocationPosition",
+    "GeolocationCoordinates",
+    "Geolocation",
+    "GamepadHapticActuator",
+    "GamepadEvent",
+    "GamepadButton",
+    "Gamepad",
+    "GainNode",
+    "FormDataEvent",
+    "FormData",
+    "FontFaceSetLoadEvent",
+    "FontFace",
+    "FocusEvent",
+    "FileReader",
+    "FileList",
+    "File",
+    "FeaturePolicy",
+    "External",
+    "EventTarget",
+    "EventSource",
+    "EventCounts",
+    "Event",
+    "ErrorEvent",
+    "ElementInternals",
+    "Element",
+    "DynamicsCompressorNode",
+    "DragEvent",
+    "DocumentType",
+    "DocumentFragment",
+    "Document",
+    "DelayNode",
+    "DecompressionStream",
+    "DataTransferItemList",
+    "DataTransferItem",
+    "DataTransfer",
+    "DOMTokenList",
+    "DOMStringMap",
+    "DOMStringList",
+    "DOMRectReadOnly",
+    "DOMRectList",
+    "DOMRect",
+    "DOMQuad",
+    "DOMPointReadOnly",
+    "DOMPoint",
+    "DOMParser",
+    "DOMMatrixReadOnly",
+    "DOMMatrix",
+    "DOMImplementation",
+    "DOMException",
+    "DOMError",
+    "CustomStateSet",
+    "CustomEvent",
+    "CustomElementRegistry",
+    "Crypto",
+    "CountQueuingStrategy",
+    "ConvolverNode",
+    "ConstantSourceNode",
+    "CompressionStream",
+    "CompositionEvent",
+    "Comment",
+    "CloseEvent",
+    "ClipboardEvent",
+    "CharacterData",
+    "ChannelSplitterNode",
+    "ChannelMergerNode",
+    "CanvasRenderingContext2D",
+    "CanvasPattern",
+    "CanvasGradient",
+    "CanvasCaptureMediaStreamTrack",
+    "CSSVariableReferenceValue",
+    "CSSUnparsedValue",
+    "CSSUnitValue",
+    "CSSTranslate",
+    "CSSTransformValue",
+    "CSSTransformComponent",
+    "CSSSupportsRule",
+    "CSSStyleValue",
+    "CSSStyleSheet",
+    "CSSStyleRule",
+    "CSSStyleDeclaration",
+    "CSSSkewY",
+    "CSSSkewX",
+    "CSSSkew",
+    "CSSScale",
+    "CSSRuleList",
+    "CSSRule",
+    "CSSRotate",
+    "CSSPropertyRule",
+    "CSSPositionValue",
+    "CSSPerspective",
+    "CSSPageRule",
+    "CSSNumericValue",
+    "CSSNumericArray",
+    "CSSNamespaceRule",
+    "CSSMediaRule",
+    "CSSMatrixComponent",
+    "CSSMathValue",
+    "CSSMathSum",
+    "CSSMathProduct",
+    "CSSMathNegate",
+    "CSSMathMin",
+    "CSSMathMax",
+    "CSSMathInvert",
+    "CSSMathClamp",
+    "CSSLayerStatementRule",
+    "CSSLayerBlockRule",
+    "CSSKeywordValue",
+    "CSSKeyframesRule",
+    "CSSKeyframeRule",
+    "CSSImportRule",
+    "CSSImageValue",
+    "CSSGroupingRule",
+    "CSSFontPaletteValuesRule",
+    "CSSFontFaceRule",
+    "CSSCounterStyleRule",
+    "CSSContainerRule",
+    "CSSConditionRule",
+    "CSS",
+    "CDATASection",
+    "ByteLengthQueuingStrategy",
+    "BroadcastChannel",
+    "BlobEvent",
+    "Blob",
+    "BiquadFilterNode",
+    "BeforeUnloadEvent",
+    "BeforeInstallPromptEvent",
+    "BaseAudioContext",
+    "BarProp",
+    "AudioWorkletNode",
+    "AudioSinkInfo",
+    "AudioScheduledSourceNode",
+    "AudioProcessingEvent",
+    "AudioParamMap",
+    "AudioParam",
+    "AudioNode",
+    "AudioListener",
+    "AudioDestinationNode",
+    "AudioContext",
+    "AudioBufferSourceNode",
+    "AudioBuffer",
+    "Attr",
+    "AnimationEvent",
+    "AnimationEffect",
+    "Animation",
+    "AnalyserNode",
+    "AbstractRange",
+    "AbortSignal",
+    "AbortController",
+    "window",
+    "self",
+    "document",
+    "name",
+    "location",
+    "customElements",
+    "history",
+    "navigation",
+    "locationbar",
+    "menubar",
+    "personalbar",
+    "scrollbars",
+    "statusbar",
+    "toolbar",
+    "status",
+    "closed",
+    "frames",
+    "length",
+    "top",
+    "opener",
+    "parent",
+    "frameElement",
+    "navigator",
+    "origin",
+    "external",
+    "screen",
+    "innerWidth",
+    "innerHeight",
+    "scrollX",
+    "pageXOffset",
+    "scrollY",
+    "pageYOffset",
+    "visualViewport",
+    "screenX",
+    "screenY",
+    "outerWidth",
+    "outerHeight",
+    "devicePixelRatio",
+    "event",
+    "clientInformation",
+    "offscreenBuffering",
+    "screenLeft",
+    "screenTop",
+    "styleMedia",
+    "onsearch",
+    "isSecureContext",
+    "trustedTypes",
+    "performance",
+    "onappinstalled",
+    "onbeforeinstallprompt",
+    "crypto",
+    "indexedDB",
+    "sessionStorage",
+    "localStorage",
+    "onbeforexrselect",
+    "onabort",
+    "onbeforeinput",
+    "onblur",
+    "oncancel",
+    "oncanplay",
+    "oncanplaythrough",
+    "onchange",
+    "onclick",
+    "onclose",
+    "oncontextlost",
+    "oncontextmenu",
+    "oncontextrestored",
+    "oncuechange",
+    "ondblclick",
+    "ondrag",
+    "ondragend",
+    "ondragenter",
+    "ondragleave",
+    "ondragover",
+    "ondragstart",
+    "ondrop",
+    "ondurationchange",
+    "onemptied",
+    "onended",
+    "onerror",
+    "onfocus",
+    "onformdata",
+    "oninput",
+    "oninvalid",
+    "onkeydown",
+    "onkeypress",
+    "onkeyup",
+    "onload",
+    "onloadeddata",
+    "onloadedmetadata",
+    "onloadstart",
+    "onmousedown",
+    "onmouseenter",
+    "onmouseleave",
+    "onmousemove",
+    "onmouseout",
+    "onmouseover",
+    "onmouseup",
+    "onmousewheel",
+    "onpause",
+    "onplay",
+    "onplaying",
+    "onprogress",
+    "onratechange",
+    "onreset",
+    "onresize",
+    "onscroll",
+    "onsecuritypolicyviolation",
+    "onseeked",
+    "onseeking",
+    "onselect",
+    "onslotchange",
+    "onstalled",
+    "onsubmit",
+    "onsuspend",
+    "ontimeupdate",
+    "ontoggle",
+    "onvolumechange",
+    "onwaiting",
+    "onwebkitanimationend",
+    "onwebkitanimationiteration",
+    "onwebkitanimationstart",
+    "onwebkittransitionend",
+    "onwheel",
+    "onauxclick",
+    "ongotpointercapture",
+    "onlostpointercapture",
+    "onpointerdown",
+    "onpointermove",
+    "onpointerrawupdate",
+    "onpointerup",
+    "onpointercancel",
+    "onpointerover",
+    "onpointerout",
+    "onpointerenter",
+    "onpointerleave",
+    "onselectstart",
+    "onselectionchange",
+    "onanimationend",
+    "onanimationiteration",
+    "onanimationstart",
+    "ontransitionrun",
+    "ontransitionstart",
+    "ontransitionend",
+    "ontransitioncancel",
+    "onafterprint",
+    "onbeforeprint",
+    "onbeforeunload",
+    "onhashchange",
+    "onlanguagechange",
+    "onmessage",
+    "onmessageerror",
+    "onoffline",
+    "ononline",
+    "onpagehide",
+    "onpageshow",
+    "onpopstate",
+    "onrejectionhandled",
+    "onstorage",
+    "onunhandledrejection",
+    "onunload",
+    "crossOriginIsolated",
+    "scheduler",
+    "alert",
+    "atob",
+    "blur",
+    "btoa",
+    "cancelAnimationFrame",
+    "cancelIdleCallback",
+    "captureEvents",
+    "clearInterval",
+    "clearTimeout",
+    "close",
+    "confirm",
+    "createImageBitmap",
+    "fetch",
+    "find",
+    "focus",
+    "getComputedStyle",
+    "getSelection",
+    "matchMedia",
+    "moveBy",
+    "moveTo",
+    "open",
+    "postMessage",
+    "print",
+    "prompt",
+    "queueMicrotask",
+    "releaseEvents",
+    "reportError",
+    "requestAnimationFrame",
+    "requestIdleCallback",
+    "resizeBy",
+    "resizeTo",
+    "scroll",
+    "scrollBy",
+    "scrollTo",
+    "setInterval",
+    "setTimeout",
+    "stop",
+    "structuredClone",
+    "webkitCancelAnimationFrame",
+    "webkitRequestAnimationFrame",
+    "chrome",
+    "WebAssembly",
+    "caches",
+    "cookieStore",
+    "ondevicemotion",
+    "ondeviceorientation",
+    "ondeviceorientationabsolute",
+    "launchQueue",
+    "documentPictureInPicture",
+    "onbeforematch",
+    "onbeforetoggle",
+    "AbsoluteOrientationSensor",
+    "Accelerometer",
+    "AudioWorklet",
+    "BatteryManager",
+    "Cache",
+    "CacheStorage",
+    "Clipboard",
+    "ClipboardItem",
+    "CookieChangeEvent",
+    "CookieStore",
+    "CookieStoreManager",
+    "Credential",
+    "CredentialsContainer",
+    "CryptoKey",
+    "DeviceMotionEvent",
+    "DeviceMotionEventAcceleration",
+    "DeviceMotionEventRotationRate",
+    "DeviceOrientationEvent",
+    "FederatedCredential",
+    "GravitySensor",
+    "Gyroscope",
+    "Keyboard",
+    "KeyboardLayoutMap",
+    "LinearAccelerationSensor",
+    "Lock",
+    "LockManager",
+    "MIDIAccess",
+    "MIDIConnectionEvent",
+    "MIDIInput",
+    "MIDIInputMap",
+    "MIDIMessageEvent",
+    "MIDIOutput",
+    "MIDIOutputMap",
+    "MIDIPort",
+    "MediaDeviceInfo",
+    "MediaDevices",
+    "MediaKeyMessageEvent",
+    "MediaKeySession",
+    "MediaKeyStatusMap",
+    "MediaKeySystemAccess",
+    "MediaKeys",
+    "NavigationPreloadManager",
+    "NavigatorManagedData",
+    "OrientationSensor",
+    "PasswordCredential",
+    "RelativeOrientationSensor",
+    "Sanitizer",
+    "ScreenDetailed",
+    "ScreenDetails",
+    "Sensor",
+    "SensorErrorEvent",
+    "ServiceWorker",
+    "ServiceWorkerContainer",
+    "ServiceWorkerRegistration",
+    "StorageManager",
+    "SubtleCrypto",
+    "VirtualKeyboard",
+    "WebTransport",
+    "WebTransportBidirectionalStream",
+    "WebTransportDatagramDuplexStream",
+    "WebTransportError",
+    "Worklet",
+    "XRDOMOverlayState",
+    "XRLayer",
+    "XRWebGLBinding",
+    "AudioData",
+    "EncodedAudioChunk",
+    "EncodedVideoChunk",
+    "ImageTrack",
+    "ImageTrackList",
+    "VideoColorSpace",
+    "VideoFrame",
+    "AudioDecoder",
+    "AudioEncoder",
+    "ImageDecoder",
+    "VideoDecoder",
+    "VideoEncoder",
+    "AuthenticatorAssertionResponse",
+    "AuthenticatorAttestationResponse",
+    "AuthenticatorResponse",
+    "PublicKeyCredential",
+    "BarcodeDetector",
+    "Bluetooth",
+    "BluetoothCharacteristicProperties",
+    "BluetoothDevice",
+    "BluetoothRemoteGATTCharacteristic",
+    "BluetoothRemoteGATTDescriptor",
+    "BluetoothRemoteGATTServer",
+    "BluetoothRemoteGATTService",
+    "CaptureController",
+    "DocumentPictureInPicture",
+    "EyeDropper",
+    "FileSystemDirectoryHandle",
+    "FileSystemFileHandle",
+    "FileSystemHandle",
+    "FileSystemWritableFileStream",
+    "FontData",
+    "FragmentDirective",
+    "GPU",
+    "GPUAdapter",
+    "GPUAdapterInfo",
+    "GPUBindGroup",
+    "GPUBindGroupLayout",
+    "GPUBuffer",
+    "GPUBufferUsage",
+    "GPUCanvasContext",
+    "GPUColorWrite",
+    "GPUCommandBuffer",
+    "GPUCommandEncoder",
+    "GPUCompilationInfo",
+    "GPUCompilationMessage",
+    "GPUComputePassEncoder",
+    "GPUComputePipeline",
+    "GPUDevice",
+    "GPUDeviceLostInfo",
+    "GPUError",
+    "GPUExternalTexture",
+    "GPUInternalError",
+    "GPUMapMode",
+    "GPUOutOfMemoryError",
+    "GPUPipelineError",
+    "GPUPipelineLayout",
+    "GPUQuerySet",
+    "GPUQueue",
+    "GPURenderBundle",
+    "GPURenderBundleEncoder",
+    "GPURenderPassEncoder",
+    "GPURenderPipeline",
+    "GPUSampler",
+    "GPUShaderModule",
+    "GPUShaderStage",
+    "GPUSupportedFeatures",
+    "GPUSupportedLimits",
+    "GPUTexture",
+    "GPUTextureUsage",
+    "GPUTextureView",
+    "GPUUncapturedErrorEvent",
+    "GPUValidationError",
+    "WGSLLanguageFeatures",
+    "HID",
+    "HIDConnectionEvent",
+    "HIDDevice",
+    "HIDInputReportEvent",
+    "IdentityCredential",
+    "IdentityProvider",
+    "IdleDetector",
+    "LaunchParams",
+    "LaunchQueue",
+    "OTPCredential",
+    "PaymentAddress",
+    "PaymentRequest",
+    "PaymentResponse",
+    "PaymentMethodChangeEvent",
+    "Presentation",
+    "PresentationAvailability",
+    "PresentationConnection",
+    "PresentationConnectionAvailableEvent",
+    "PresentationConnectionCloseEvent",
+    "PresentationConnectionList",
+    "PresentationReceiver",
+    "PresentationRequest",
+    "Serial",
+    "SerialPort",
+    "ToggleEvent",
+    "USB",
+    "USBAlternateInterface",
+    "USBConfiguration",
+    "USBConnectionEvent",
+    "USBDevice",
+    "USBEndpoint",
+    "USBInTransferResult",
+    "USBInterface",
+    "USBIsochronousInTransferPacket",
+    "USBIsochronousInTransferResult",
+    "USBIsochronousOutTransferPacket",
+    "USBIsochronousOutTransferResult",
+    "USBOutTransferResult",
+    "WakeLock",
+    "WakeLockSentinel",
+    "WindowControlsOverlay",
+    "WindowControlsOverlayGeometryChangeEvent",
+    "XRAnchor",
+    "XRAnchorSet",
+    "XRBoundedReferenceSpace",
+    "XRCPUDepthInformation",
+    "XRCamera",
+    "XRDepthInformation",
+    "XRFrame",
+    "XRHitTestResult",
+    "XRHitTestSource",
+    "XRInputSource",
+    "XRInputSourceArray",
+    "XRInputSourceEvent",
+    "XRInputSourcesChangeEvent",
+    "XRLightEstimate",
+    "XRLightProbe",
+    "XRPose",
+    "XRRay",
+    "XRReferenceSpace",
+    "XRReferenceSpaceEvent",
+    "XRRenderState",
+    "XRRigidTransform",
+    "XRSession",
+    "XRSessionEvent",
+    "XRSpace",
+    "XRSystem",
+    "XRTransientInputHitTestResult",
+    "XRTransientInputHitTestSource",
+    "XRView",
+    "XRViewerPose",
+    "XRViewport",
+    "XRWebGLDepthInformation",
+    "XRWebGLLayer",
+    "getScreenDetails",
+    "openDatabase",
+    "queryLocalFonts",
+    "showDirectoryPicker",
+    "showOpenFilePicker",
+    "showSaveFilePicker",
+    "originAgentCluster",
+    "credentialless",
+    "speechSynthesis",
+    "oncontentvisibilityautostatechange",
+    "onscrollend",
+    "AnimationPlaybackEvent",
+    "AnimationTimeline",
+    "CSSAnimation",
+    "CSSTransition",
+    "DocumentTimeline",
+    "BackgroundFetchManager",
+    "BackgroundFetchRecord",
+    "BackgroundFetchRegistration",
+    "BluetoothUUID",
+    "BrowserCaptureMediaStreamTrack",
+    "CropTarget",
+    "CSSStartingStyleRule",
+    "ContentVisibilityAutoStateChangeEvent",
+    "DelegatedInkTrailPresenter",
+    "Ink",
+    "DocumentPictureInPictureEvent",
+    "Highlight",
+    "HighlightRegistry",
+    "MediaMetadata",
+    "MediaSession",
+    "MutationEvent",
+    "NavigatorUAData",
+    "Notification",
+    "PaymentManager",
+    "PaymentRequestUpdateEvent",
+    "PeriodicSyncManager",
+    "PermissionStatus",
+    "Permissions",
+    "PushManager",
+    "PushSubscription",
+    "PushSubscriptionOptions",
+    "RemotePlayback",
+    "ScrollTimeline",
+    "ViewTimeline",
+    "SharedWorker",
+    "SpeechSynthesisErrorEvent",
+    "SpeechSynthesisEvent",
+    "SpeechSynthesisUtterance",
+    "VideoPlaybackQuality",
+    "ViewTransition",
+    "VisibilityStateEntry",
+    "webkitSpeechGrammar",
+    "webkitSpeechGrammarList",
+    "webkitSpeechRecognition",
+    "webkitSpeechRecognitionError",
+    "webkitSpeechRecognitionEvent",
+    "webkitRequestFileSystem",
+    "webkitResolveLocalFileSystemURL",
+    "cache"
+  ],
+  "htmlElementVersion": [
+    "version",
+    "title",
+    "lang",
+    "translate",
+    "dir",
+    "hidden",
+    "accessKey",
+    "draggable",
+    "spellcheck",
+    "autocapitalize",
+    "contentEditable",
+    "enterKeyHint",
+    "isContentEditable",
+    "inputMode",
+    "virtualKeyboardPolicy",
+    "offsetParent",
+    "offsetTop",
+    "offsetLeft",
+    "offsetWidth",
+    "offsetHeight",
+    "innerText",
+    "outerText",
+    "onbeforexrselect",
+    "onabort",
+    "onbeforeinput",
+    "onblur",
+    "oncancel",
+    "oncanplay",
+    "oncanplaythrough",
+    "onchange",
+    "onclick",
+    "onclose",
+    "oncontextlost",
+    "oncontextmenu",
+    "oncontextrestored",
+    "oncuechange",
+    "ondblclick",
+    "ondrag",
+    "ondragend",
+    "ondragenter",
+    "ondragleave",
+    "ondragover",
+    "ondragstart",
+    "ondrop",
+    "ondurationchange",
+    "onemptied",
+    "onended",
+    "onerror",
+    "onfocus",
+    "onformdata",
+    "oninput",
+    "oninvalid",
+    "onkeydown",
+    "onkeypress",
+    "onkeyup",
+    "onload",
+    "onloadeddata",
+    "onloadedmetadata",
+    "onloadstart",
+    "onmousedown",
+    "onmouseenter",
+    "onmouseleave",
+    "onmousemove",
+    "onmouseout",
+    "onmouseover",
+    "onmouseup",
+    "onmousewheel",
+    "onpause",
+    "onplay",
+    "onplaying",
+    "onprogress",
+    "onratechange",
+    "onreset",
+    "onresize",
+    "onscroll",
+    "onsecuritypolicyviolation",
+    "onseeked",
+    "onseeking",
+    "onselect",
+    "onslotchange",
+    "onstalled",
+    "onsubmit",
+    "onsuspend",
+    "ontimeupdate",
+    "ontoggle",
+    "onvolumechange",
+    "onwaiting",
+    "onwebkitanimationend",
+    "onwebkitanimationiteration",
+    "onwebkitanimationstart",
+    "onwebkittransitionend",
+    "onwheel",
+    "onauxclick",
+    "ongotpointercapture",
+    "onlostpointercapture",
+    "onpointerdown",
+    "onpointermove",
+    "onpointerrawupdate",
+    "onpointerup",
+    "onpointercancel",
+    "onpointerover",
+    "onpointerout",
+    "onpointerenter",
+    "onpointerleave",
+    "onselectstart",
+    "onselectionchange",
+    "onanimationend",
+    "onanimationiteration",
+    "onanimationstart",
+    "ontransitionrun",
+    "ontransitionstart",
+    "ontransitionend",
+    "ontransitioncancel",
+    "oncopy",
+    "oncut",
+    "onpaste",
+    "dataset",
+    "nonce",
+    "autofocus",
+    "tabIndex",
+    "style",
+    "attributeStyleMap",
+    "attachInternals",
+    "blur",
+    "click",
+    "focus",
+    "inert",
+    "oncontentvisibilityautostatechange",
+    "onscrollend",
+    "popover",
+    "onbeforetoggle",
+    "onbeforematch",
+    "hidePopover",
+    "showPopover",
+    "togglePopover",
+    "namespaceURI",
+    "prefix",
+    "localName",
+    "tagName",
+    "id",
+    "className",
+    "classList",
+    "slot",
+    "attributes",
+    "shadowRoot",
+    "part",
+    "assignedSlot",
+    "innerHTML",
+    "outerHTML",
+    "scrollTop",
+    "scrollLeft",
+    "scrollWidth",
+    "scrollHeight",
+    "clientTop",
+    "clientLeft",
+    "clientWidth",
+    "clientHeight",
+    "onbeforecopy",
+    "onbeforecut",
+    "onbeforepaste",
+    "onsearch",
+    "elementTiming",
+    "onfullscreenchange",
+    "onfullscreenerror",
+    "onwebkitfullscreenchange",
+    "onwebkitfullscreenerror",
+    "role",
+    "ariaAtomic",
+    "ariaAutoComplete",
+    "ariaBusy",
+    "ariaBrailleLabel",
+    "ariaBrailleRoleDescription",
+    "ariaChecked",
+    "ariaColCount",
+    "ariaColIndex",
+    "ariaColSpan",
+    "ariaCurrent",
+    "ariaDescription",
+    "ariaDisabled",
+    "ariaExpanded",
+    "ariaHasPopup",
+    "ariaHidden",
+    "ariaInvalid",
+    "ariaKeyShortcuts",
+    "ariaLabel",
+    "ariaLevel",
+    "ariaLive",
+    "ariaModal",
+    "ariaMultiLine",
+    "ariaMultiSelectable",
+    "ariaOrientation",
+    "ariaPlaceholder",
+    "ariaPosInSet",
+    "ariaPressed",
+    "ariaReadOnly",
+    "ariaRelevant",
+    "ariaRequired",
+    "ariaRoleDescription",
+    "ariaRowCount",
+    "ariaRowIndex",
+    "ariaRowSpan",
+    "ariaSelected",
+    "ariaSetSize",
+    "ariaSort",
+    "ariaValueMax",
+    "ariaValueMin",
+    "ariaValueNow",
+    "ariaValueText",
+    "children",
+    "firstElementChild",
+    "lastElementChild",
+    "childElementCount",
+    "previousElementSibling",
+    "nextElementSibling",
+    "after",
+    "animate",
+    "append",
+    "attachShadow",
+    "before",
+    "closest",
+    "computedStyleMap",
+    "getAttribute",
+    "getAttributeNS",
+    "getAttributeNames",
+    "getAttributeNode",
+    "getAttributeNodeNS",
+    "getBoundingClientRect",
+    "getClientRects",
+    "getElementsByClassName",
+    "getElementsByTagName",
+    "getElementsByTagNameNS",
+    "getInnerHTML",
+    "hasAttribute",
+    "hasAttributeNS",
+    "hasAttributes",
+    "hasPointerCapture",
+    "insertAdjacentElement",
+    "insertAdjacentHTML",
+    "insertAdjacentText",
+    "matches",
+    "prepend",
+    "querySelector",
+    "querySelectorAll",
+    "releasePointerCapture",
+    "remove",
+    "removeAttribute",
+    "removeAttributeNS",
+    "removeAttributeNode",
+    "replaceChildren",
+    "replaceWith",
+    "requestFullscreen",
+    "requestPointerLock",
+    "scroll",
+    "scrollBy",
+    "scrollIntoView",
+    "scrollIntoViewIfNeeded",
+    "scrollTo",
+    "setAttribute",
+    "setAttributeNS",
+    "setAttributeNode",
+    "setAttributeNodeNS",
+    "setPointerCapture",
+    "toggleAttribute",
+    "webkitMatchesSelector",
+    "webkitRequestFullScreen",
+    "webkitRequestFullscreen",
+    "checkVisibility",
+    "getAnimations",
+    "setHTML",
+    "nodeType",
+    "nodeName",
+    "baseURI",
+    "isConnected",
+    "ownerDocument",
+    "parentNode",
+    "parentElement",
+    "childNodes",
+    "firstChild",
+    "lastChild",
+    "previousSibling",
+    "nextSibling",
+    "nodeValue",
+    "textContent",
+    "ELEMENT_NODE",
+    "ATTRIBUTE_NODE",
+    "TEXT_NODE",
+    "CDATA_SECTION_NODE",
+    "ENTITY_REFERENCE_NODE",
+    "ENTITY_NODE",
+    "PROCESSING_INSTRUCTION_NODE",
+    "COMMENT_NODE",
+    "DOCUMENT_NODE",
+    "DOCUMENT_TYPE_NODE",
+    "DOCUMENT_FRAGMENT_NODE",
+    "NOTATION_NODE",
+    "DOCUMENT_POSITION_DISCONNECTED",
+    "DOCUMENT_POSITION_PRECEDING",
+    "DOCUMENT_POSITION_FOLLOWING",
+    "DOCUMENT_POSITION_CONTAINS",
+    "DOCUMENT_POSITION_CONTAINED_BY",
+    "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
+    "appendChild",
+    "cloneNode",
+    "compareDocumentPosition",
+    "contains",
+    "getRootNode",
+    "hasChildNodes",
+    "insertBefore",
+    "isDefaultNamespace",
+    "isEqualNode",
+    "isSameNode",
+    "lookupNamespaceURI",
+    "lookupPrefix",
+    "normalize",
+    "removeChild",
+    "replaceChild",
+    "addEventListener",
+    "dispatchEvent",
+    "removeEventListener"
+  ],
+  "webgl": {
+    "supportedExtensions": [
+      "ANGLE_instanced_arrays",
+      "EXT_blend_minmax",
+      "EXT_color_buffer_half_float",
+      "EXT_disjoint_timer_query",
+      "EXT_float_blend",
+      "EXT_frag_depth",
+      "EXT_shader_texture_lod",
+      "EXT_texture_compression_rgtc",
+      "EXT_texture_filter_anisotropic",
+      "EXT_sRGB",
+      "KHR_parallel_shader_compile",
+      "OES_element_index_uint",
+      "OES_fbo_render_mipmap",
+      "OES_standard_derivatives",
+      "OES_texture_float",
+      "OES_texture_float_linear",
+      "OES_texture_half_float",
+      "OES_texture_half_float_linear",
+      "OES_vertex_array_object",
+      "WEBGL_color_buffer_float",
+      "WEBGL_compressed_texture_s3tc",
+      "WEBGL_compressed_texture_s3tc_srgb",
+      "WEBGL_debug_renderer_info",
+      "WEBGL_debug_shaders",
+      "WEBGL_depth_texture",
+      "WEBGL_draw_buffers",
+      "WEBGL_lose_context",
+      "WEBGL_multi_draw"
+    ],
+    "contextAttributes": {
+      "alpha": true,
+      "antialias": true,
+      "depth": true,
+      "desynchronized": false,
+      "failIfMajorPerformanceCaveat": false,
+      "powerPreference": "default",
+      "premultipliedAlpha": true,
+      "preserveDrawingBuffer": false,
+      "stencil": false,
+      "xrCompatible": false
+    },
+    "maxAnisotropy": 16,
+    "params": {
+      "2849": {
+        "type": "Number",
+        "value": 1
+      },
+      "2884": {
+        "type": "",
+        "value": false
+      },
+      "2885": {
+        "type": "Number",
+        "value": 1029
+      },
+      "2886": {
+        "type": "Number",
+        "value": 2305
+      },
+      "2928": {
+        "type": "Float32Array",
+        "value": {
+          "0": 0,
+          "1": 1
+        }
+      },
+      "2929": {
+        "type": "",
+        "value": false
+      },
+      "2930": {
+        "type": "Boolean",
+        "value": true
+      },
+      "2931": {
+        "type": "Number",
+        "value": 1
+      },
+      "2932": {
+        "type": "Number",
+        "value": 513
+      },
+      "2960": {
+        "type": "",
+        "value": false
+      },
+      "2961": {
+        "type": "",
+        "value": 0
+      },
+      "2962": {
+        "type": "Number",
+        "value": 519
+      },
+      "2963": {
+        "type": "Number",
+        "value": 2147483647
+      },
+      "2964": {
+        "type": "Number",
+        "value": 7680
+      },
+      "2965": {
+        "type": "Number",
+        "value": 7680
+      },
+      "2966": {
+        "type": "Number",
+        "value": 7680
+      },
+      "2967": {
+        "type": "",
+        "value": 0
+      },
+      "2968": {
+        "type": "Number",
+        "value": 2147483647
+      },
+      "2978": {
+        "type": "Int32Array",
+        "value": {
+          "0": 0,
+          "1": 0,
+          "2": 300,
+          "3": 150
+        }
+      },
+      "3024": {
+        "type": "Boolean",
+        "value": true
+      },
+      "3042": {
+        "type": "",
+        "value": false
+      },
+      "3088": {
+        "type": "Int32Array",
+        "value": {
+          "0": 0,
+          "1": 0,
+          "2": 300,
+          "3": 150
+        }
+      },
+      "3089": {
+        "type": "",
+        "value": false
+      },
+      "3106": {
+        "type": "Float32Array",
+        "value": {
+          "0": 0,
+          "1": 0,
+          "2": 0,
+          "3": 0
+        }
+      },
+      "3107": {
+        "type": "Array",
+        "value": [
+          true,
+          true,
+          true,
+          true
+        ]
+      },
+      "3317": {
+        "type": "Number",
+        "value": 4
+      },
+      "3333": {
+        "type": "Number",
+        "value": 4
+      },
+      "3379": {
+        "type": "Number",
+        "value": 16384
+      },
+      "3386": {
+        "type": "Int32Array",
+        "value": {
+          "0": 16384,
+          "1": 16384
+        }
+      },
+      "3408": {
+        "type": "Number",
+        "value": 4
+      },
+      "3410": {
+        "type": "Number",
+        "value": 8
+      },
+      "3411": {
+        "type": "Number",
+        "value": 8
+      },
+      "3412": {
+        "type": "Number",
+        "value": 8
+      },
+      "3413": {
+        "type": "Number",
+        "value": 8
+      },
+      "3414": {
+        "type": "Number",
+        "value": 24
+      },
+      "3415": {
+        "type": "",
+        "value": 0
+      },
+      "7936": {
+        "type": "String",
+        "value": "WebKit"
+      },
+      "7937": {
+        "type": "String",
+        "value": "WebKit WebGL"
+      },
+      "7938": {
+        "type": "String",
+        "value": "WebGL 1.0 (OpenGL ES 2.0 Chromium)"
+      },
+      "10752": {
+        "type": "",
+        "value": 0
+      },
+      "32773": {
+        "type": "Float32Array",
+        "value": {
+          "0": 0,
+          "1": 0,
+          "2": 0,
+          "3": 0
+        }
+      },
+      "32777": {
+        "type": "Number",
+        "value": 32774
+      },
+      "32823": {
+        "type": "",
+        "value": false
+      },
+      "32824": {
+        "type": "",
+        "value": 0
+      },
+      "32873": {
+        "type": "",
+        "value": null
+      },
+      "32883": {
+        "type": "",
+        "value": null
+      },
+      "32936": {
+        "type": "Number",
+        "value": 1
+      },
+      "32937": {
+        "type": "Number",
+        "value": 4
+      },
+      "32938": {
+        "type": "Number",
+        "value": 1
+      },
+      "32939": {
+        "type": "",
+        "value": false
+      },
+      "32968": {
+        "type": "",
+        "value": 0
+      },
+      "32969": {
+        "type": "Number",
+        "value": 1
+      },
+      "32970": {
+        "type": "",
+        "value": 0
+      },
+      "32971": {
+        "type": "Number",
+        "value": 1
+      },
+      "33170": {
+        "type": "Number",
+        "value": 4352
+      },
+      "33901": {
+        "type": "Float32Array",
+        "value": {
+          "0": 1,
+          "1": 64
+        }
+      },
+      "33902": {
+        "type": "Float32Array",
+        "value": {
+          "0": 1,
+          "1": 1
+        }
+      },
+      "34016": {
+        "type": "Number",
+        "value": 33984
+      },
+      "34024": {
+        "type": "Number",
+        "value": 16384
+      },
+      "34045": {
+        "type": "",
+        "value": null
+      },
+      "34047": {
+        "type": "Number",
+        "value": 16
+      },
+      "34068": {
+        "type": "",
+        "value": null
+      },
+      "34076": {
+        "type": "Number",
+        "value": 16384
+      },
+      "34467": {
+        "type": "Uint32Array",
+        "value": {}
+      },
+      "34816": {
+        "type": "Number",
+        "value": 519
+      },
+      "34817": {
+        "type": "Number",
+        "value": 7680
+      },
+      "34818": {
+        "type": "Number",
+        "value": 7680
+      },
+      "34819": {
+        "type": "Number",
+        "value": 7680
+      },
+      "34852": {
+        "type": "",
+        "value": null
+      },
+      "34877": {
+        "type": "Number",
+        "value": 32774
+      },
+      "34921": {
+        "type": "Number",
+        "value": 16
+      },
+      "34930": {
+        "type": "Number",
+        "value": 16
+      },
+      "34964": {
+        "type": "",
+        "value": null
+      },
+      "34965": {
+        "type": "",
+        "value": null
+      },
+      "35071": {
+        "type": "",
+        "value": null
+      },
+      "35076": {
+        "type": "",
+        "value": null
+      },
+      "35077": {
+        "type": "",
+        "value": null
+      },
+      "35371": {
+        "type": "",
+        "value": null
+      },
+      "35373": {
+        "type": "",
+        "value": null
+      },
+      "35374": {
+        "type": "",
+        "value": null
+      },
+      "35375": {
+        "type": "",
+        "value": null
+      },
+      "35376": {
+        "type": "",
+        "value": null
+      },
+      "35377": {
+        "type": "",
+        "value": null
+      },
+      "35379": {
+        "type": "",
+        "value": null
+      },
+      "35380": {
+        "type": "",
+        "value": null
+      },
+      "35657": {
+        "type": "",
+        "value": null
+      },
+      "35658": {
+        "type": "",
+        "value": null
+      },
+      "35659": {
+        "type": "",
+        "value": null
+      },
+      "35660": {
+        "type": "Number",
+        "value": 16
+      },
+      "35661": {
+        "type": "Number",
+        "value": 32
+      },
+      "35724": {
+        "type": "String",
+        "value": "WebGL GLSL ES 1.0 (OpenGL ES GLSL ES 1.0 Chromium)"
+      },
+      "35725": {
+        "type": "",
+        "value": null
+      },
+      "35968": {
+        "type": "",
+        "value": null
+      },
+      "35978": {
+        "type": "",
+        "value": null
+      },
+      "35979": {
+        "type": "",
+        "value": null
+      },
+      "36003": {
+        "type": "",
+        "value": 0
+      },
+      "36004": {
+        "type": "Number",
+        "value": 2147483647
+      },
+      "36005": {
+        "type": "Number",
+        "value": 2147483647
+      },
+      "36006": {
+        "type": "",
+        "value": null
+      },
+      "36007": {
+        "type": "",
+        "value": null
+      },
+      "36063": {
+        "type": "",
+        "value": null
+      },
+      "36183": {
+        "type": "",
+        "value": null
+      },
+      "36347": {
+        "type": "Number",
+        "value": 1024
+      },
+      "36348": {
+        "type": "Number",
+        "value": 31
+      },
+      "36349": {
+        "type": "Number",
+        "value": 1024
+      },
+      "37154": {
+        "type": "",
+        "value": null
+      },
+      "37157": {
+        "type": "",
+        "value": null
+      },
+      "37440": {
+        "type": "",
+        "value": false
+      },
+      "37441": {
+        "type": "",
+        "value": false
+      },
+      "37443": {
+        "type": "Number",
+        "value": 37444
+      }
+    },
+    "shaderPrecisionFormats": [
+      {
+        "shaderType": 35633,
+        "precisionType": 36338,
+        "r": {
+          "rangeMin": 127,
+          "rangeMax": 127,
+          "precision": 23
+        }
+      },
+      {
+        "shaderType": 35633,
+        "precisionType": 36337,
+        "r": {
+          "rangeMin": 127,
+          "rangeMax": 127,
+          "precision": 23
+        }
+      },
+      {
+        "shaderType": 35633,
+        "precisionType": 36336,
+        "r": {
+          "rangeMin": 127,
+          "rangeMax": 127,
+          "precision": 23
+        }
+      },
+      {
+        "shaderType": 35633,
+        "precisionType": 36341,
+        "r": {
+          "rangeMin": 31,
+          "rangeMax": 30,
+          "precision": 0
+        }
+      },
+      {
+        "shaderType": 35633,
+        "precisionType": 36340,
+        "r": {
+          "rangeMin": 31,
+          "rangeMax": 30,
+          "precision": 0
+        }
+      },
+      {
+        "shaderType": 35633,
+        "precisionType": 36339,
+        "r": {
+          "rangeMin": 31,
+          "rangeMax": 30,
+          "precision": 0
+        }
+      },
+      {
+        "shaderType": 35632,
+        "precisionType": 36338,
+        "r": {
+          "rangeMin": 127,
+          "rangeMax": 127,
+          "precision": 23
+        }
+      },
+      {
+        "shaderType": 35632,
+        "precisionType": 36337,
+        "r": {
+          "rangeMin": 127,
+          "rangeMax": 127,
+          "precision": 23
+        }
+      },
+      {
+        "shaderType": 35632,
+        "precisionType": 36336,
+        "r": {
+          "rangeMin": 127,
+          "rangeMax": 127,
+          "precision": 23
+        }
+      },
+      {
+        "shaderType": 35632,
+        "precisionType": 36341,
+        "r": {
+          "rangeMin": 31,
+          "rangeMax": 30,
+          "precision": 0
+        }
+      },
+      {
+        "shaderType": 35632,
+        "precisionType": 36340,
+        "r": {
+          "rangeMin": 31,
+          "rangeMax": 30,
+          "precision": 0
+        }
+      },
+      {
+        "shaderType": 35632,
+        "precisionType": 36339,
+        "r": {
+          "rangeMin": 31,
+          "rangeMax": 30,
+          "precision": 0
+        }
+      }
+    ]
+  },
+  "webgl2": {
+    "supportedExtensions": [
+      "EXT_color_buffer_float",
+      "EXT_color_buffer_half_float",
+      "EXT_disjoint_timer_query_webgl2",
+      "EXT_float_blend",
+      "EXT_texture_compression_rgtc",
+      "EXT_texture_filter_anisotropic",
+      "EXT_texture_norm16",
+      "KHR_parallel_shader_compile",
+      "OES_draw_buffers_indexed",
+      "OES_texture_float_linear",
+      "WEBGL_compressed_texture_s3tc",
+      "WEBGL_compressed_texture_s3tc_srgb",
+      "WEBGL_debug_renderer_info",
+      "WEBGL_debug_shaders",
+      "WEBGL_lose_context",
+      "WEBGL_multi_draw",
+      "WEBGL_provoking_vertex"
+    ],
+    "contextAttributes": {
+      "alpha": true,
+      "antialias": true,
+      "depth": true,
+      "desynchronized": false,
+      "failIfMajorPerformanceCaveat": false,
+      "powerPreference": "default",
+      "premultipliedAlpha": true,
+      "preserveDrawingBuffer": false,
+      "stencil": false,
+      "xrCompatible": false
+    },
+    "maxAnisotropy": 16,
+    "params": {
+      "2849": {
+        "type": "Number",
+        "value": 1
+      },
+      "2884": {
+        "type": "",
+        "value": false
+      },
+      "2885": {
+        "type": "Number",
+        "value": 1029
+      },
+      "2886": {
+        "type": "Number",
+        "value": 2305
+      },
+      "2928": {
+        "type": "Float32Array",
+        "value": {
+          "0": 0,
+          "1": 1
+        }
+      },
+      "2929": {
+        "type": "",
+        "value": false
+      },
+      "2930": {
+        "type": "Boolean",
+        "value": true
+      },
+      "2931": {
+        "type": "Number",
+        "value": 1
+      },
+      "2932": {
+        "type": "Number",
+        "value": 513
+      },
+      "2960": {
+        "type": "",
+        "value": false
+      },
+      "2961": {
+        "type": "",
+        "value": 0
+      },
+      "2962": {
+        "type": "Number",
+        "value": 519
+      },
+      "2963": {
+        "type": "Number",
+        "value": 2147483647
+      },
+      "2964": {
+        "type": "Number",
+        "value": 7680
+      },
+      "2965": {
+        "type": "Number",
+        "value": 7680
+      },
+      "2966": {
+        "type": "Number",
+        "value": 7680
+      },
+      "2967": {
+        "type": "",
+        "value": 0
+      },
+      "2968": {
+        "type": "Number",
+        "value": 2147483647
+      },
+      "2978": {
+        "type": "Int32Array",
+        "value": {
+          "0": 0,
+          "1": 0,
+          "2": 300,
+          "3": 150
+        }
+      },
+      "3024": {
+        "type": "Boolean",
+        "value": true
+      },
+      "3042": {
+        "type": "",
+        "value": false
+      },
+      "3088": {
+        "type": "Int32Array",
+        "value": {
+          "0": 0,
+          "1": 0,
+          "2": 300,
+          "3": 150
+        }
+      },
+      "3089": {
+        "type": "",
+        "value": false
+      },
+      "3106": {
+        "type": "Float32Array",
+        "value": {
+          "0": 0,
+          "1": 0,
+          "2": 0,
+          "3": 0
+        }
+      },
+      "3107": {
+        "type": "Array",
+        "value": [
+          true,
+          true,
+          true,
+          true
+        ]
+      },
+      "3317": {
+        "type": "Number",
+        "value": 4
+      },
+      "3333": {
+        "type": "Number",
+        "value": 4
+      },
+      "3379": {
+        "type": "Number",
+        "value": 16384
+      },
+      "3386": {
+        "type": "Int32Array",
+        "value": {
+          "0": 16384,
+          "1": 16384
+        }
+      },
+      "3408": {
+        "type": "Number",
+        "value": 4
+      },
+      "3410": {
+        "type": "Number",
+        "value": 8
+      },
+      "3411": {
+        "type": "Number",
+        "value": 8
+      },
+      "3412": {
+        "type": "Number",
+        "value": 8
+      },
+      "3413": {
+        "type": "Number",
+        "value": 8
+      },
+      "3414": {
+        "type": "Number",
+        "value": 24
+      },
+      "3415": {
+        "type": "",
+        "value": 0
+      },
+      "7936": {
+        "type": "String",
+        "value": "WebKit"
+      },
+      "7937": {
+        "type": "String",
+        "value": "WebKit WebGL"
+      },
+      "7938": {
+        "type": "String",
+        "value": "WebGL 2.0 (OpenGL ES 3.0 Chromium)"
+      },
+      "10752": {
+        "type": "",
+        "value": 0
+      },
+      "32773": {
+        "type": "Float32Array",
+        "value": {
+          "0": 0,
+          "1": 0,
+          "2": 0,
+          "3": 0
+        }
+      },
+      "32777": {
+        "type": "Number",
+        "value": 32774
+      },
+      "32823": {
+        "type": "",
+        "value": false
+      },
+      "32824": {
+        "type": "",
+        "value": 0
+      },
+      "32873": {
+        "type": "",
+        "value": null
+      },
+      "32883": {
+        "type": "Number",
+        "value": 2048
+      },
+      "32936": {
+        "type": "Number",
+        "value": 1
+      },
+      "32937": {
+        "type": "Number",
+        "value": 4
+      },
+      "32938": {
+        "type": "Number",
+        "value": 1
+      },
+      "32939": {
+        "type": "",
+        "value": false
+      },
+      "32968": {
+        "type": "",
+        "value": 0
+      },
+      "32969": {
+        "type": "Number",
+        "value": 1
+      },
+      "32970": {
+        "type": "",
+        "value": 0
+      },
+      "32971": {
+        "type": "Number",
+        "value": 1
+      },
+      "33170": {
+        "type": "Number",
+        "value": 4352
+      },
+      "33901": {
+        "type": "Float32Array",
+        "value": {
+          "0": 1,
+          "1": 64
+        }
+      },
+      "33902": {
+        "type": "Float32Array",
+        "value": {
+          "0": 1,
+          "1": 1
+        }
+      },
+      "34016": {
+        "type": "Number",
+        "value": 33984
+      },
+      "34024": {
+        "type": "Number",
+        "value": 16384
+      },
+      "34045": {
+        "type": "Number",
+        "value": 16
+      },
+      "34047": {
+        "type": "Number",
+        "value": 16
+      },
+      "34068": {
+        "type": "",
+        "value": null
+      },
+      "34076": {
+        "type": "Number",
+        "value": 16384
+      },
+      "34467": {
+        "type": "Uint32Array",
+        "value": {}
+      },
+      "34816": {
+        "type": "Number",
+        "value": 519
+      },
+      "34817": {
+        "type": "Number",
+        "value": 7680
+      },
+      "34818": {
+        "type": "Number",
+        "value": 7680
+      },
+      "34819": {
+        "type": "Number",
+        "value": 7680
+      },
+      "34852": {
+        "type": "Number",
+        "value": 8
+      },
+      "34877": {
+        "type": "Number",
+        "value": 32774
+      },
+      "34921": {
+        "type": "Number",
+        "value": 16
+      },
+      "34930": {
+        "type": "Number",
+        "value": 16
+      },
+      "34964": {
+        "type": "",
+        "value": null
+      },
+      "34965": {
+        "type": "",
+        "value": null
+      },
+      "35071": {
+        "type": "Number",
+        "value": 2048
+      },
+      "35076": {
+        "type": "Number",
+        "value": -8
+      },
+      "35077": {
+        "type": "Number",
+        "value": 7
+      },
+      "35371": {
+        "type": "Number",
+        "value": 16
+      },
+      "35373": {
+        "type": "Number",
+        "value": 16
+      },
+      "35374": {
+        "type": "Number",
+        "value": 32
+      },
+      "35375": {
+        "type": "Number",
+        "value": 72
+      },
+      "35376": {
+        "type": "Number",
+        "value": 65536
+      },
+      "35377": {
+        "type": "Number",
+        "value": 266240
+      },
+      "35379": {
+        "type": "Number",
+        "value": 266240
+      },
+      "35380": {
+        "type": "Number",
+        "value": 256
+      },
+      "35657": {
+        "type": "Number",
+        "value": 4096
+      },
+      "35658": {
+        "type": "Number",
+        "value": 4096
+      },
+      "35659": {
+        "type": "Number",
+        "value": 124
+      },
+      "35660": {
+        "type": "Number",
+        "value": 16
+      },
+      "35661": {
+        "type": "Number",
+        "value": 32
+      },
+      "35724": {
+        "type": "String",
+        "value": "WebGL GLSL ES 3.00 (OpenGL ES GLSL ES 3.0 Chromium)"
+      },
+      "35725": {
+        "type": "",
+        "value": null
+      },
+      "35968": {
+        "type": "Number",
+        "value": 4
+      },
+      "35978": {
+        "type": "Number",
+        "value": 64
+      },
+      "35979": {
+        "type": "Number",
+        "value": 4
+      },
+      "36003": {
+        "type": "",
+        "value": 0
+      },
+      "36004": {
+        "type": "Number",
+        "value": 2147483647
+      },
+      "36005": {
+        "type": "Number",
+        "value": 2147483647
+      },
+      "36006": {
+        "type": "",
+        "value": null
+      },
+      "36007": {
+        "type": "",
+        "value": null
+      },
+      "36063": {
+        "type": "Number",
+        "value": 8
+      },
+      "36183": {
+        "type": "Number",
+        "value": 4
+      },
+      "36347": {
+        "type": "Number",
+        "value": 1024
+      },
+      "36348": {
+        "type": "Number",
+        "value": 31
+      },
+      "36349": {
+        "type": "Number",
+        "value": 1024
+      },
+      "37154": {
+        "type": "Number",
+        "value": 64
+      },
+      "37157": {
+        "type": "Number",
+        "value": 128
+      },
+      "37440": {
+        "type": "",
+        "value": false
+      },
+      "37441": {
+        "type": "",
+        "value": false
+      },
+      "37443": {
+        "type": "Number",
+        "value": 37444
+      }
+    },
+    "shaderPrecisionFormats": [
+      {
+        "shaderType": 35633,
+        "precisionType": 36338,
+        "r": {
+          "rangeMin": 127,
+          "rangeMax": 127,
+          "precision": 23
+        }
+      },
+      {
+        "shaderType": 35633,
+        "precisionType": 36337,
+        "r": {
+          "rangeMin": 127,
+          "rangeMax": 127,
+          "precision": 23
+        }
+      },
+      {
+        "shaderType": 35633,
+        "precisionType": 36336,
+        "r": {
+          "rangeMin": 127,
+          "rangeMax": 127,
+          "precision": 23
+        }
+      },
+      {
+        "shaderType": 35633,
+        "precisionType": 36341,
+        "r": {
+          "rangeMin": 31,
+          "rangeMax": 30,
+          "precision": 0
+        }
+      },
+      {
+        "shaderType": 35633,
+        "precisionType": 36340,
+        "r": {
+          "rangeMin": 31,
+          "rangeMax": 30,
+          "precision": 0
+        }
+      },
+      {
+        "shaderType": 35633,
+        "precisionType": 36339,
+        "r": {
+          "rangeMin": 31,
+          "rangeMax": 30,
+          "precision": 0
+        }
+      },
+      {
+        "shaderType": 35632,
+        "precisionType": 36338,
+        "r": {
+          "rangeMin": 127,
+          "rangeMax": 127,
+          "precision": 23
+        }
+      },
+      {
+        "shaderType": 35632,
+        "precisionType": 36337,
+        "r": {
+          "rangeMin": 127,
+          "rangeMax": 127,
+          "precision": 23
+        }
+      },
+      {
+        "shaderType": 35632,
+        "precisionType": 36336,
+        "r": {
+          "rangeMin": 127,
+          "rangeMax": 127,
+          "precision": 23
+        }
+      },
+      {
+        "shaderType": 35632,
+        "precisionType": 36341,
+        "r": {
+          "rangeMin": 31,
+          "rangeMax": 30,
+          "precision": 0
+        }
+      },
+      {
+        "shaderType": 35632,
+        "precisionType": 36340,
+        "r": {
+          "rangeMin": 31,
+          "rangeMax": 30,
+          "precision": 0
+        }
+      },
+      {
+        "shaderType": 35632,
+        "precisionType": 36339,
+        "r": {
+          "rangeMin": 31,
+          "rangeMax": 30,
+          "precision": 0
+        }
+      }
+    ]
+  },
+  "navigator": {
+    "languages": [
+      "en-US",
+      "en",
+      "it",
+      "fr",
+      "ro",
+      "es"
+    ],
+    "userAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36",
+    "appCodeName": "Mozilla",
+    "appMinorVersion": "_$obj!_undefined_//+_",
+    "appName": "Netscape",
+    "appVersion": "5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36",
+    "buildID": "_$obj!_undefined_//+_",
+    "platform": "MacIntel",
+    "product": "Gecko",
+    "productSub": "20030107",
+    "hardwareConcurrency": 12,
+    "cpuClass": "_$obj!_undefined_//+_",
+    "maxTouchPoints": 0,
+    "oscpu": "_$obj!_undefined_//+_",
+    "vendor": "Google Inc.",
+    "vendorSub": "",
+    "deviceMemory": "_$obj!_undefined_//+_",
+    "doNotTrack": null,
+    "msDoNotTrack": "_$obj!_undefined_//+_",
+    "vibrate": "_$obj!_//+_",
+    "credentials": "_$obj!_undefined_//+_",
+    "storage": "_$obj!_undefined_//+_",
+    "requestMediaKeySystemAccess": "_$obj!_//+_",
+    "bluetooth": "_$obj!_undefined_//+_",
+    "language": "en-US",
+    "systemLanguage": "_$obj!_undefined_//+_",
+    "userLanguage": "_$obj!_undefined_//+_",
+    "pdfViewerEnabled": true
+  },
+  "window": {
+    "innerWidth": 1488,
+    "innerHeight": 968,
+    "outerWidth": 1488,
+    "outerHeight": 1079,
+    "screenX": 1623,
+    "screenY": 115,
+    "pageXOffset": 0,
+    "pageYOffset": 0,
+    "Image": "_$obj!_//+_",
+    "isSecureContext": false,
+    "devicePixelRatio": 1,
+    "toolbar": "_$obj!_//+_",
+    "locationbar": "_$obj!_//+_",
+    "ActiveXObject": "_$obj!_undefined_//+_",
+    "external": "_$obj!_//+_",
+    "mozRTCPeerConnection": "_$obj!_undefined_//+_",
+    "postMessage": "_$obj!_//+_",
+    "webkitRequestAnimationFrame": "_$obj!_//+_",
+    "BluetoothUUID": "_$obj!_//+_",
+    "netscape": "_$obj!_undefined_//+_",
+    "localStorage": "_$obj!_//+_",
+    "sessionStorage": "_$obj!_//+_",
+    "indexDB": "_$obj!_undefined_//+_",
+    "BarcodeDetector": "_$obj!_//+_"
+  },
+  "document": {
+    "characterSet": "UTF-8",
+    "compatMode": "BackCompat",
+    "documentMode": "_$obj!_undefined_//+_",
+    "layers": "_$obj!_undefined_//+_",
+    "images": "_$obj!_//+_"
+  },
+  "screen": {
+    "availWidth": 3440,
+    "availHeight": 1440,
+    "availLeft": 0,
+    "availTop": 25,
+    "width": 3440,
+    "height": 1440,
+    "colorDepth": 24,
+    "pixelDepth": 24
+  },
+  "permissions": {
+    "midi": {
+      "state": "denied"
+    },
+    "background-fetch": {
+      "state": "denied"
+    },
+    "background-sync": {
+      "state": "denied"
+    },
+    "accelerometer": {
+      "state": "denied"
+    },
+    "gyroscope": {
+      "state": "denied"
+    },
+    "magnetometer": {
+      "state": "denied"
+    },
+    "screen-wake-lock": {
+      "state": "denied"
+    },
+    "clipboard-read": {
+      "state": "denied"
+    },
+    "clipboard-write": {
+      "state": "denied"
+    },
+    "payment-handler": {
+      "state": "denied"
+    },
+    "periodic-background-sync": {
+      "state": "denied"
+    },
+    "geolocation": {
+      "state": "denied"
+    },
+    "notifications": {
+      "state": "denied"
+    },
+    "camera": {
+      "state": "denied"
+    },
+    "microphone": {
+      "state": "denied"
+    },
+    "display-capture": {
+      "state": "denied"
+    },
+    "persistent-storage": {
+      "state": "denied"
+    },
+    "idle-detection": {
+      "state": "denied"
+    },
+    "window-placement": {
+      "state": "denied"
+    },
+    "storage-access": {
+      "exType": "TypeError",
+      "msg": "Failed to execute 'query' on 'Permissions': The Storage Access API is not enabled."
+    },
+    "push": {
+      "exType": "DOMException",
+      "msg": "Failed to execute 'query' on 'Permissions': Push Permission without userVisibleOnly:true isn't supported yet."
+    },
+    "speaker": {
+      "exType": "TypeError",
+      "msg": "Failed to execute 'query' on 'Permissions': Failed to read the 'name' property from 'PermissionDescriptor': The provided value 'speaker' is not a valid enum value of type PermissionName."
+    },
+    "device-info": {
+      "exType": "TypeError",
+      "msg": "Failed to execute 'query' on 'Permissions': Failed to read the 'name' property from 'PermissionDescriptor': The provided value 'device-info' is not a valid enum value of type PermissionName."
+    },
+    "bluetooth": {
+      "exType": "TypeError",
+      "msg": "Failed to execute 'query' on 'Permissions': Failed to read the 'name' property from 'PermissionDescriptor': The provided value 'bluetooth' is not a valid enum value of type PermissionName."
+    },
+    "clipboard": {
+      "exType": "TypeError",
+      "msg": "Failed to execute 'query' on 'Permissions': Failed to read the 'name' property from 'PermissionDescriptor': The provided value 'clipboard' is not a valid enum value of type PermissionName."
+    },
+    "ambient-light-sensor": {
+      "exType": "TypeError",
+      "msg": "Failed to execute 'query' on 'Permissions': GenericSensorExtraClasses flag is not enabled."
+    },
+    "accessibility-events": {
+      "exType": "TypeError",
+      "msg": "Failed to execute 'query' on 'Permissions': Accessibility Object Model is not enabled."
+    },
+    "nfc": {
+      "exType": "TypeError",
+      "msg": "Failed to execute 'query' on 'Permissions': Web NFC is not enabled."
+    },
+    "system-wake-lock": {
+      "exType": "TypeError",
+      "msg": "Failed to execute 'query' on 'Permissions': System Wake Lock is not enabled."
+    },
+    "font-access": {
+      "exType": "TypeError",
+      "msg": "Failed to execute 'query' on 'Permissions': Failed to read the 'name' property from 'PermissionDescriptor': The provided value 'font-access' is not a valid enum value of type PermissionName."
+    }
+  },
+  "voices": [
+    {
+      "default": true,
+      "lang": "en-GB",
+      "localService": true,
+      "name": "Daniel",
+      "voiceURI": "Daniel"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Albert",
+      "voiceURI": "Albert"
+    },
+    {
+      "default": false,
+      "lang": "it-IT",
+      "localService": true,
+      "name": "Alice",
+      "voiceURI": "Alice"
+    },
+    {
+      "default": false,
+      "lang": "sv-SE",
+      "localService": true,
+      "name": "Alva",
+      "voiceURI": "Alva"
+    },
+    {
+      "default": false,
+      "lang": "fr-CA",
+      "localService": true,
+      "name": "Amélie",
+      "voiceURI": "Amélie"
+    },
+    {
+      "default": false,
+      "lang": "ms-MY",
+      "localService": true,
+      "name": "Amira",
+      "voiceURI": "Amira"
+    },
+    {
+      "default": false,
+      "lang": "de-DE",
+      "localService": true,
+      "name": "Anna",
+      "voiceURI": "Anna"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Bad News",
+      "voiceURI": "Bad News"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Bahh",
+      "voiceURI": "Bahh"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Bells",
+      "voiceURI": "Bells"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Boing",
+      "voiceURI": "Boing"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Bubbles",
+      "voiceURI": "Bubbles"
+    },
+    {
+      "default": false,
+      "lang": "he-IL",
+      "localService": true,
+      "name": "Carmit",
+      "voiceURI": "Carmit"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Cellos",
+      "voiceURI": "Cellos"
+    },
+    {
+      "default": false,
+      "lang": "id-ID",
+      "localService": true,
+      "name": "Damayanti",
+      "voiceURI": "Damayanti"
+    },
+    {
+      "default": false,
+      "lang": "bg-BG",
+      "localService": true,
+      "name": "Daria",
+      "voiceURI": "Daria"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Wobble",
+      "voiceURI": "Wobble"
+    },
+    {
+      "default": false,
+      "lang": "de-DE",
+      "localService": true,
+      "name": "Eddy (German (Germany))",
+      "voiceURI": "Eddy (German (Germany))"
+    },
+    {
+      "default": false,
+      "lang": "en-GB",
+      "localService": true,
+      "name": "Eddy (English (UK))",
+      "voiceURI": "Eddy (English (UK))"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Eddy (English (US))",
+      "voiceURI": "Eddy (English (US))"
+    },
+    {
+      "default": false,
+      "lang": "es-ES",
+      "localService": true,
+      "name": "Eddy (Spanish (Spain))",
+      "voiceURI": "Eddy (Spanish (Spain))"
+    },
+    {
+      "default": false,
+      "lang": "es-MX",
+      "localService": true,
+      "name": "Eddy (Spanish (Mexico))",
+      "voiceURI": "Eddy (Spanish (Mexico))"
+    },
+    {
+      "default": false,
+      "lang": "fi-FI",
+      "localService": true,
+      "name": "Eddy (Finnish (Finland))",
+      "voiceURI": "Eddy (Finnish (Finland))"
+    },
+    {
+      "default": false,
+      "lang": "fr-CA",
+      "localService": true,
+      "name": "Eddy (French (Canada))",
+      "voiceURI": "Eddy (French (Canada))"
+    },
+    {
+      "default": false,
+      "lang": "fr-FR",
+      "localService": true,
+      "name": "Eddy (French (France))",
+      "voiceURI": "Eddy (French (France))"
+    },
+    {
+      "default": false,
+      "lang": "it-IT",
+      "localService": true,
+      "name": "Eddy (Italian (Italy))",
+      "voiceURI": "Eddy (Italian (Italy))"
+    },
+    {
+      "default": false,
+      "lang": "pt-BR",
+      "localService": true,
+      "name": "Eddy (Portuguese (Brazil))",
+      "voiceURI": "Eddy (Portuguese (Brazil))"
+    },
+    {
+      "default": false,
+      "lang": "nl-BE",
+      "localService": true,
+      "name": "Ellen",
+      "voiceURI": "Ellen"
+    },
+    {
+      "default": false,
+      "lang": "de-DE",
+      "localService": true,
+      "name": "Flo (German (Germany))",
+      "voiceURI": "Flo (German (Germany))"
+    },
+    {
+      "default": false,
+      "lang": "en-GB",
+      "localService": true,
+      "name": "Flo (English (UK))",
+      "voiceURI": "Flo (English (UK))"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Flo (English (US))",
+      "voiceURI": "Flo (English (US))"
+    },
+    {
+      "default": false,
+      "lang": "es-ES",
+      "localService": true,
+      "name": "Flo (Spanish (Spain))",
+      "voiceURI": "Flo (Spanish (Spain))"
+    },
+    {
+      "default": false,
+      "lang": "es-MX",
+      "localService": true,
+      "name": "Flo (Spanish (Mexico))",
+      "voiceURI": "Flo (Spanish (Mexico))"
+    },
+    {
+      "default": false,
+      "lang": "fi-FI",
+      "localService": true,
+      "name": "Flo (Finnish (Finland))",
+      "voiceURI": "Flo (Finnish (Finland))"
+    },
+    {
+      "default": false,
+      "lang": "fr-CA",
+      "localService": true,
+      "name": "Flo (French (Canada))",
+      "voiceURI": "Flo (French (Canada))"
+    },
+    {
+      "default": false,
+      "lang": "fr-FR",
+      "localService": true,
+      "name": "Flo (French (France))",
+      "voiceURI": "Flo (French (France))"
+    },
+    {
+      "default": false,
+      "lang": "it-IT",
+      "localService": true,
+      "name": "Flo (Italian (Italy))",
+      "voiceURI": "Flo (Italian (Italy))"
+    },
+    {
+      "default": false,
+      "lang": "pt-BR",
+      "localService": true,
+      "name": "Flo (Portuguese (Brazil))",
+      "voiceURI": "Flo (Portuguese (Brazil))"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Fred",
+      "voiceURI": "Fred"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Good News",
+      "voiceURI": "Good News"
+    },
+    {
+      "default": false,
+      "lang": "de-DE",
+      "localService": true,
+      "name": "Grandma (German (Germany))",
+      "voiceURI": "Grandma (German (Germany))"
+    },
+    {
+      "default": false,
+      "lang": "en-GB",
+      "localService": true,
+      "name": "Grandma (English (UK))",
+      "voiceURI": "Grandma (English (UK))"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Grandma (English (US))",
+      "voiceURI": "Grandma (English (US))"
+    },
+    {
+      "default": false,
+      "lang": "es-ES",
+      "localService": true,
+      "name": "Grandma (Spanish (Spain))",
+      "voiceURI": "Grandma (Spanish (Spain))"
+    },
+    {
+      "default": false,
+      "lang": "es-MX",
+      "localService": true,
+      "name": "Grandma (Spanish (Mexico))",
+      "voiceURI": "Grandma (Spanish (Mexico))"
+    },
+    {
+      "default": false,
+      "lang": "fi-FI",
+      "localService": true,
+      "name": "Grandma (Finnish (Finland))",
+      "voiceURI": "Grandma (Finnish (Finland))"
+    },
+    {
+      "default": false,
+      "lang": "fr-CA",
+      "localService": true,
+      "name": "Grandma (French (Canada))",
+      "voiceURI": "Grandma (French (Canada))"
+    },
+    {
+      "default": false,
+      "lang": "fr-FR",
+      "localService": true,
+      "name": "Grandma (French (France))",
+      "voiceURI": "Grandma (French (France))"
+    },
+    {
+      "default": false,
+      "lang": "it-IT",
+      "localService": true,
+      "name": "Grandma (Italian (Italy))",
+      "voiceURI": "Grandma (Italian (Italy))"
+    },
+    {
+      "default": false,
+      "lang": "pt-BR",
+      "localService": true,
+      "name": "Grandma (Portuguese (Brazil))",
+      "voiceURI": "Grandma (Portuguese (Brazil))"
+    },
+    {
+      "default": false,
+      "lang": "de-DE",
+      "localService": true,
+      "name": "Grandpa (German (Germany))",
+      "voiceURI": "Grandpa (German (Germany))"
+    },
+    {
+      "default": false,
+      "lang": "en-GB",
+      "localService": true,
+      "name": "Grandpa (English (UK))",
+      "voiceURI": "Grandpa (English (UK))"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Grandpa (English (US))",
+      "voiceURI": "Grandpa (English (US))"
+    },
+    {
+      "default": false,
+      "lang": "es-ES",
+      "localService": true,
+      "name": "Grandpa (Spanish (Spain))",
+      "voiceURI": "Grandpa (Spanish (Spain))"
+    },
+    {
+      "default": false,
+      "lang": "es-MX",
+      "localService": true,
+      "name": "Grandpa (Spanish (Mexico))",
+      "voiceURI": "Grandpa (Spanish (Mexico))"
+    },
+    {
+      "default": false,
+      "lang": "fi-FI",
+      "localService": true,
+      "name": "Grandpa (Finnish (Finland))",
+      "voiceURI": "Grandpa (Finnish (Finland))"
+    },
+    {
+      "default": false,
+      "lang": "fr-CA",
+      "localService": true,
+      "name": "Grandpa (French (Canada))",
+      "voiceURI": "Grandpa (French (Canada))"
+    },
+    {
+      "default": false,
+      "lang": "fr-FR",
+      "localService": true,
+      "name": "Grandpa (French (France))",
+      "voiceURI": "Grandpa (French (France))"
+    },
+    {
+      "default": false,
+      "lang": "it-IT",
+      "localService": true,
+      "name": "Grandpa (Italian (Italy))",
+      "voiceURI": "Grandpa (Italian (Italy))"
+    },
+    {
+      "default": false,
+      "lang": "pt-BR",
+      "localService": true,
+      "name": "Grandpa (Portuguese (Brazil))",
+      "voiceURI": "Grandpa (Portuguese (Brazil))"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Jester",
+      "voiceURI": "Jester"
+    },
+    {
+      "default": false,
+      "lang": "ro-RO",
+      "localService": true,
+      "name": "Ioana",
+      "voiceURI": "Ioana"
+    },
+    {
+      "default": false,
+      "lang": "fr-FR",
+      "localService": true,
+      "name": "Jacques",
+      "voiceURI": "Jacques"
+    },
+    {
+      "default": false,
+      "lang": "pt-PT",
+      "localService": true,
+      "name": "Joana",
+      "voiceURI": "Joana"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Junior",
+      "voiceURI": "Junior"
+    },
+    {
+      "default": false,
+      "lang": "th-TH",
+      "localService": true,
+      "name": "Kanya",
+      "voiceURI": "Kanya"
+    },
+    {
+      "default": false,
+      "lang": "en-AU",
+      "localService": true,
+      "name": "Karen",
+      "voiceURI": "Karen"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Kathy",
+      "voiceURI": "Kathy"
+    },
+    {
+      "default": false,
+      "lang": "ja-JP",
+      "localService": true,
+      "name": "Kyoko",
+      "voiceURI": "Kyoko"
+    },
+    {
+      "default": false,
+      "lang": "hr-HR",
+      "localService": true,
+      "name": "Lana",
+      "voiceURI": "Lana"
+    },
+    {
+      "default": false,
+      "lang": "sk-SK",
+      "localService": true,
+      "name": "Laura",
+      "voiceURI": "Laura"
+    },
+    {
+      "default": false,
+      "lang": "hi-IN",
+      "localService": true,
+      "name": "Lekha",
+      "voiceURI": "Lekha"
+    },
+    {
+      "default": false,
+      "lang": "uk-UA",
+      "localService": true,
+      "name": "Lesya",
+      "voiceURI": "Lesya"
+    },
+    {
+      "default": false,
+      "lang": "vi-VN",
+      "localService": true,
+      "name": "Linh",
+      "voiceURI": "Linh"
+    },
+    {
+      "default": false,
+      "lang": "pt-BR",
+      "localService": true,
+      "name": "Luciana",
+      "voiceURI": "Luciana"
+    },
+    {
+      "default": false,
+      "lang": "ar-001",
+      "localService": true,
+      "name": "Majed",
+      "voiceURI": "Majed"
+    },
+    {
+      "default": false,
+      "lang": "hu-HU",
+      "localService": true,
+      "name": "Tünde",
+      "voiceURI": "Tünde"
+    },
+    {
+      "default": false,
+      "lang": "zh-TW",
+      "localService": true,
+      "name": "Meijia",
+      "voiceURI": "Meijia"
+    },
+    {
+      "default": false,
+      "lang": "el-GR",
+      "localService": true,
+      "name": "Melina",
+      "voiceURI": "Melina"
+    },
+    {
+      "default": false,
+      "lang": "ru-RU",
+      "localService": true,
+      "name": "Milena",
+      "voiceURI": "Milena"
+    },
+    {
+      "default": false,
+      "lang": "en-IE",
+      "localService": true,
+      "name": "Moira",
+      "voiceURI": "Moira"
+    },
+    {
+      "default": false,
+      "lang": "es-ES",
+      "localService": true,
+      "name": "Mónica",
+      "voiceURI": "Mónica"
+    },
+    {
+      "default": false,
+      "lang": "ca-ES",
+      "localService": true,
+      "name": "Montse",
+      "voiceURI": "Montse"
+    },
+    {
+      "default": false,
+      "lang": "nb-NO",
+      "localService": true,
+      "name": "Nora",
+      "voiceURI": "Nora"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Organ",
+      "voiceURI": "Organ"
+    },
+    {
+      "default": false,
+      "lang": "es-MX",
+      "localService": true,
+      "name": "Paulina",
+      "voiceURI": "Paulina"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Superstar",
+      "voiceURI": "Superstar"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Ralph",
+      "voiceURI": "Ralph"
+    },
+    {
+      "default": false,
+      "lang": "de-DE",
+      "localService": true,
+      "name": "Reed (German (Germany))",
+      "voiceURI": "Reed (German (Germany))"
+    },
+    {
+      "default": false,
+      "lang": "en-GB",
+      "localService": true,
+      "name": "Reed (English (UK))",
+      "voiceURI": "Reed (English (UK))"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Reed (English (US))",
+      "voiceURI": "Reed (English (US))"
+    },
+    {
+      "default": false,
+      "lang": "es-ES",
+      "localService": true,
+      "name": "Reed (Spanish (Spain))",
+      "voiceURI": "Reed (Spanish (Spain))"
+    },
+    {
+      "default": false,
+      "lang": "es-MX",
+      "localService": true,
+      "name": "Reed (Spanish (Mexico))",
+      "voiceURI": "Reed (Spanish (Mexico))"
+    },
+    {
+      "default": false,
+      "lang": "fi-FI",
+      "localService": true,
+      "name": "Reed (Finnish (Finland))",
+      "voiceURI": "Reed (Finnish (Finland))"
+    },
+    {
+      "default": false,
+      "lang": "fr-CA",
+      "localService": true,
+      "name": "Reed (French (Canada))",
+      "voiceURI": "Reed (French (Canada))"
+    },
+    {
+      "default": false,
+      "lang": "it-IT",
+      "localService": true,
+      "name": "Reed (Italian (Italy))",
+      "voiceURI": "Reed (Italian (Italy))"
+    },
+    {
+      "default": false,
+      "lang": "pt-BR",
+      "localService": true,
+      "name": "Reed (Portuguese (Brazil))",
+      "voiceURI": "Reed (Portuguese (Brazil))"
+    },
+    {
+      "default": false,
+      "lang": "en-IN",
+      "localService": true,
+      "name": "Rishi",
+      "voiceURI": "Rishi"
+    },
+    {
+      "default": false,
+      "lang": "de-DE",
+      "localService": true,
+      "name": "Rocko (German (Germany))",
+      "voiceURI": "Rocko (German (Germany))"
+    },
+    {
+      "default": false,
+      "lang": "en-GB",
+      "localService": true,
+      "name": "Rocko (English (UK))",
+      "voiceURI": "Rocko (English (UK))"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Rocko (English (US))",
+      "voiceURI": "Rocko (English (US))"
+    },
+    {
+      "default": false,
+      "lang": "es-ES",
+      "localService": true,
+      "name": "Rocko (Spanish (Spain))",
+      "voiceURI": "Rocko (Spanish (Spain))"
+    },
+    {
+      "default": false,
+      "lang": "es-MX",
+      "localService": true,
+      "name": "Rocko (Spanish (Mexico))",
+      "voiceURI": "Rocko (Spanish (Mexico))"
+    },
+    {
+      "default": false,
+      "lang": "fi-FI",
+      "localService": true,
+      "name": "Rocko (Finnish (Finland))",
+      "voiceURI": "Rocko (Finnish (Finland))"
+    },
+    {
+      "default": false,
+      "lang": "fr-CA",
+      "localService": true,
+      "name": "Rocko (French (Canada))",
+      "voiceURI": "Rocko (French (Canada))"
+    },
+    {
+      "default": false,
+      "lang": "fr-FR",
+      "localService": true,
+      "name": "Rocko (French (France))",
+      "voiceURI": "Rocko (French (France))"
+    },
+    {
+      "default": false,
+      "lang": "it-IT",
+      "localService": true,
+      "name": "Rocko (Italian (Italy))",
+      "voiceURI": "Rocko (Italian (Italy))"
+    },
+    {
+      "default": false,
+      "lang": "pt-BR",
+      "localService": true,
+      "name": "Rocko (Portuguese (Brazil))",
+      "voiceURI": "Rocko (Portuguese (Brazil))"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Samantha",
+      "voiceURI": "Samantha"
+    },
+    {
+      "default": false,
+      "lang": "de-DE",
+      "localService": true,
+      "name": "Sandy (German (Germany))",
+      "voiceURI": "Sandy (German (Germany))"
+    },
+    {
+      "default": false,
+      "lang": "en-GB",
+      "localService": true,
+      "name": "Sandy (English (UK))",
+      "voiceURI": "Sandy (English (UK))"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Sandy (English (US))",
+      "voiceURI": "Sandy (English (US))"
+    },
+    {
+      "default": false,
+      "lang": "es-ES",
+      "localService": true,
+      "name": "Sandy (Spanish (Spain))",
+      "voiceURI": "Sandy (Spanish (Spain))"
+    },
+    {
+      "default": false,
+      "lang": "es-MX",
+      "localService": true,
+      "name": "Sandy (Spanish (Mexico))",
+      "voiceURI": "Sandy (Spanish (Mexico))"
+    },
+    {
+      "default": false,
+      "lang": "fi-FI",
+      "localService": true,
+      "name": "Sandy (Finnish (Finland))",
+      "voiceURI": "Sandy (Finnish (Finland))"
+    },
+    {
+      "default": false,
+      "lang": "fr-CA",
+      "localService": true,
+      "name": "Sandy (French (Canada))",
+      "voiceURI": "Sandy (French (Canada))"
+    },
+    {
+      "default": false,
+      "lang": "fr-FR",
+      "localService": true,
+      "name": "Sandy (French (France))",
+      "voiceURI": "Sandy (French (France))"
+    },
+    {
+      "default": false,
+      "lang": "it-IT",
+      "localService": true,
+      "name": "Sandy (Italian (Italy))",
+      "voiceURI": "Sandy (Italian (Italy))"
+    },
+    {
+      "default": false,
+      "lang": "pt-BR",
+      "localService": true,
+      "name": "Sandy (Portuguese (Brazil))",
+      "voiceURI": "Sandy (Portuguese (Brazil))"
+    },
+    {
+      "default": false,
+      "lang": "da-DK",
+      "localService": true,
+      "name": "Sara",
+      "voiceURI": "Sara"
+    },
+    {
+      "default": false,
+      "lang": "fi-FI",
+      "localService": true,
+      "name": "Satu",
+      "voiceURI": "Satu"
+    },
+    {
+      "default": false,
+      "lang": "de-DE",
+      "localService": true,
+      "name": "Shelley (German (Germany))",
+      "voiceURI": "Shelley (German (Germany))"
+    },
+    {
+      "default": false,
+      "lang": "en-GB",
+      "localService": true,
+      "name": "Shelley (English (UK))",
+      "voiceURI": "Shelley (English (UK))"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Shelley (English (US))",
+      "voiceURI": "Shelley (English (US))"
+    },
+    {
+      "default": false,
+      "lang": "es-ES",
+      "localService": true,
+      "name": "Shelley (Spanish (Spain))",
+      "voiceURI": "Shelley (Spanish (Spain))"
+    },
+    {
+      "default": false,
+      "lang": "es-MX",
+      "localService": true,
+      "name": "Shelley (Spanish (Mexico))",
+      "voiceURI": "Shelley (Spanish (Mexico))"
+    },
+    {
+      "default": false,
+      "lang": "fi-FI",
+      "localService": true,
+      "name": "Shelley (Finnish (Finland))",
+      "voiceURI": "Shelley (Finnish (Finland))"
+    },
+    {
+      "default": false,
+      "lang": "fr-CA",
+      "localService": true,
+      "name": "Shelley (French (Canada))",
+      "voiceURI": "Shelley (French (Canada))"
+    },
+    {
+      "default": false,
+      "lang": "fr-FR",
+      "localService": true,
+      "name": "Shelley (French (France))",
+      "voiceURI": "Shelley (French (France))"
+    },
+    {
+      "default": false,
+      "lang": "it-IT",
+      "localService": true,
+      "name": "Shelley (Italian (Italy))",
+      "voiceURI": "Shelley (Italian (Italy))"
+    },
+    {
+      "default": false,
+      "lang": "pt-BR",
+      "localService": true,
+      "name": "Shelley (Portuguese (Brazil))",
+      "voiceURI": "Shelley (Portuguese (Brazil))"
+    },
+    {
+      "default": false,
+      "lang": "zh-HK",
+      "localService": true,
+      "name": "Sinji",
+      "voiceURI": "Sinji"
+    },
+    {
+      "default": false,
+      "lang": "en-ZA",
+      "localService": true,
+      "name": "Tessa",
+      "voiceURI": "Tessa"
+    },
+    {
+      "default": false,
+      "lang": "fr-FR",
+      "localService": true,
+      "name": "Thomas",
+      "voiceURI": "Thomas"
+    },
+    {
+      "default": false,
+      "lang": "zh-CN",
+      "localService": true,
+      "name": "Tingting",
+      "voiceURI": "Tingting"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Trinoids",
+      "voiceURI": "Trinoids"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Whisper",
+      "voiceURI": "Whisper"
+    },
+    {
+      "default": false,
+      "lang": "nl-NL",
+      "localService": true,
+      "name": "Xander",
+      "voiceURI": "Xander"
+    },
+    {
+      "default": false,
+      "lang": "tr-TR",
+      "localService": true,
+      "name": "Yelda",
+      "voiceURI": "Yelda"
+    },
+    {
+      "default": false,
+      "lang": "ko-KR",
+      "localService": true,
+      "name": "Yuna",
+      "voiceURI": "Yuna"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": true,
+      "name": "Zarvox",
+      "voiceURI": "Zarvox"
+    },
+    {
+      "default": false,
+      "lang": "pl-PL",
+      "localService": true,
+      "name": "Zosia",
+      "voiceURI": "Zosia"
+    },
+    {
+      "default": false,
+      "lang": "cs-CZ",
+      "localService": true,
+      "name": "Zuzana",
+      "voiceURI": "Zuzana"
+    },
+    {
+      "default": false,
+      "lang": "de-DE",
+      "localService": false,
+      "name": "Google Deutsch",
+      "voiceURI": "Google Deutsch"
+    },
+    {
+      "default": false,
+      "lang": "en-US",
+      "localService": false,
+      "name": "Google US English",
+      "voiceURI": "Google US English"
+    },
+    {
+      "default": false,
+      "lang": "en-GB",
+      "localService": false,
+      "name": "Google UK English Female",
+      "voiceURI": "Google UK English Female"
+    },
+    {
+      "default": false,
+      "lang": "en-GB",
+      "localService": false,
+      "name": "Google UK English Male",
+      "voiceURI": "Google UK English Male"
+    },
+    {
+      "default": false,
+      "lang": "es-ES",
+      "localService": false,
+      "name": "Google español",
+      "voiceURI": "Google español"
+    },
+    {
+      "default": false,
+      "lang": "es-US",
+      "localService": false,
+      "name": "Google español de Estados Unidos",
+      "voiceURI": "Google español de Estados Unidos"
+    },
+    {
+      "default": false,
+      "lang": "fr-FR",
+      "localService": false,
+      "name": "Google français",
+      "voiceURI": "Google français"
+    },
+    {
+      "default": false,
+      "lang": "hi-IN",
+      "localService": false,
+      "name": "Google हिन्दी",
+      "voiceURI": "Google हिन्दी"
+    },
+    {
+      "default": false,
+      "lang": "id-ID",
+      "localService": false,
+      "name": "Google Bahasa Indonesia",
+      "voiceURI": "Google Bahasa Indonesia"
+    },
+    {
+      "default": false,
+      "lang": "it-IT",
+      "localService": false,
+      "name": "Google italiano",
+      "voiceURI": "Google italiano"
+    },
+    {
+      "default": false,
+      "lang": "ja-JP",
+      "localService": false,
+      "name": "Google 日本語",
+      "voiceURI": "Google 日本語"
+    },
+    {
+      "default": false,
+      "lang": "ko-KR",
+      "localService": false,
+      "name": "Google 한국의",
+      "voiceURI": "Google 한국의"
+    },
+    {
+      "default": false,
+      "lang": "nl-NL",
+      "localService": false,
+      "name": "Google Nederlands",
+      "voiceURI": "Google Nederlands"
+    },
+    {
+      "default": false,
+      "lang": "pl-PL",
+      "localService": false,
+      "name": "Google polski",
+      "voiceURI": "Google polski"
+    },
+    {
+      "default": false,
+      "lang": "pt-BR",
+      "localService": false,
+      "name": "Google português do Brasil",
+      "voiceURI": "Google português do Brasil"
+    },
+    {
+      "default": false,
+      "lang": "ru-RU",
+      "localService": false,
+      "name": "Google русский",
+      "voiceURI": "Google русский"
+    },
+    {
+      "default": false,
+      "lang": "zh-CN",
+      "localService": false,
+      "name": "Google 普通话（中国大陆）",
+      "voiceURI": "Google 普通话（中国大陆）"
+    },
+    {
+      "default": false,
+      "lang": "zh-HK",
+      "localService": false,
+      "name": "Google 粤語（香港）",
+      "voiceURI": "Google 粤語（香港）"
+    },
+    {
+      "default": false,
+      "lang": "zh-TW",
+      "localService": false,
+      "name": "Google 國語（臺灣）",
+      "voiceURI": "Google 國語（臺灣）"
+    }
+  ],
+  "battery": {
+    "chargingTime": null,
+    "dischargingTime": null
+  },
+  "keyboard": {
+    "KeyA": "a",
+    "KeyB": "b",
+    "KeyC": "c",
+    "KeyD": "d",
+    "KeyE": "e",
+    "KeyF": "f",
+    "KeyG": "g",
+    "KeyH": "h",
+    "KeyI": "i",
+    "KeyJ": "j",
+    "KeyK": "k",
+    "KeyL": "l",
+    "KeyM": "m",
+    "KeyN": "n",
+    "KeyO": "o",
+    "KeyP": "p",
+    "KeyQ": "q",
+    "KeyR": "r",
+    "KeyS": "s",
+    "KeyT": "t",
+    "KeyU": "u",
+    "KeyV": "v",
+    "KeyW": "w",
+    "KeyX": "x",
+    "KeyY": "y",
+    "KeyZ": "z",
+    "Digit1": "1",
+    "Digit2": "2",
+    "Digit3": "3",
+    "Digit4": "4",
+    "Digit5": "5",
+    "Digit6": "6",
+    "Digit7": "7",
+    "Digit8": "8",
+    "Digit9": "9",
+    "Digit0": "0",
+    "Minus": "-",
+    "Equal": "=",
+    "BracketLeft": "[",
+    "BracketRight": "]",
+    "Backslash": "\\",
+    "Semicolon": ";",
+    "Quote": "'",
+    "Backquote": "`",
+    "Comma": ",",
+    "Period": ".",
+    "Slash": "/",
+    "IntlBackslash": "§"
+  },
+  "highEntropyValues": {
+    "brands": [
+      {
+        "brand": "Google Chrome",
+        "version": "117"
+      },
+      {
+        "brand": " Not;A Brand",
+        "version": "99"
+      },
+      {
+        "brand": "Chromium",
+        "version": "117"
+      }
+    ],
+    "mobile": false,
+    "architecture": "x86",
+    "bitness": "64",
+    "platformVersion": "10.15.7"
+  },
+  "mediaDevices": [
+    {
+      "deviceId": "",
+      "kind": "audioinput",
+      "label": "",
+      "groupId": ""
+    },
+    {
+      "deviceId": "",
+      "kind": "videoinput",
+      "label": "",
+      "groupId": ""
+    },
+    {
+      "deviceId": "",
+      "kind": "audiooutput",
+      "label": "",
+      "groupId": ""
+    }
+  ],
+  "mimeTypes": [
+    {
+      "mimeType": "application/ogg",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "audio/aac",
+      "audioPlayType": "probably"
+    },
+    {
+      "mimeType": "audio/flac",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "audio/mp3",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "audio/mp4",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "audio/mp4; codecs=\"Opus\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "audio/mp4; codecs=\"flac\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "audio/mp4; codecs=\"mp3\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "audio/mp4; codecs=\"mp4a.40\"",
+      "audioPlayType": "maybe"
+    },
+    {
+      "mimeType": "audio/mp4; codecs=\"mp4a.40.2\"",
+      "audioPlayType": "probably"
+    },
+    {
+      "mimeType": "audio/mp4; codecs=\"mp4a.40.29\"",
+      "audioPlayType": "probably"
+    },
+    {
+      "mimeType": "audio/mp4; codecs=\"mp4a.40.5\"",
+      "audioPlayType": "probably"
+    },
+    {
+      "mimeType": "audio/mp4; codecs=\"mp4a.66\"",
+      "audioPlayType": "probably"
+    },
+    {
+      "mimeType": "audio/mp4; codecs=\"mp4a.67\"",
+      "audioPlayType": "probably"
+    },
+    {
+      "mimeType": "audio/mp4; codecs=\"mp4a.68\"",
+      "audioPlayType": "probably"
+    },
+    {
+      "mimeType": "audio/mp4; codecs=\"mp4a.69\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "audio/mp4; codecs=\"mp4a.6B\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "audio/mpeg",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "audio/mpeg; codecs=\"mp3\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "audio/ogg; codecs=\"flac\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "audio/ogg; codecs=\"opus\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "audio/ogg; codecs=\"vorbis\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "audio/wav",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "audio/wav; codecs=\"1\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "audio/webm",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaRecorder": true
+    },
+    {
+      "mimeType": "audio/webm; codecs=\"opus\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true,
+      "mediaRecorder": true
+    },
+    {
+      "mimeType": "audio/webm; codecs=\"vorbis\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "audio/x-m4a",
+      "audioPlayType": "maybe"
+    },
+    {
+      "mimeType": "audio/x-wav",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "audio/x-wav; codecs=\"1\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/3gpp",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"av01.0.08M.08\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42000a\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42000b\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42000c\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42000d\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.420014\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.420015\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.420016\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42001e\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42001f\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.420020\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.420028\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.420029\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42002a\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.420032\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.420033\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.420034\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42003c\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42003d\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42003e\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42003f\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.420040\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.420050\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42006e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.420085\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42400a\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42400b\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42400c\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42400d\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.424014\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.424015\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.424016\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42401e\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42401f\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.424020\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.424028\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.424029\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42402a\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.424032\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.424033\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.424034\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42403c\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42403d\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42403e\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42403f\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.424040\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.424050\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42406e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.424085\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42E009\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42E01E\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42E034\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42F01E\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.42c00d\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4D001E\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d000a\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d000b\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d000c\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d000d\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d0014\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d0015\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d0016\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d001e\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d001f\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d0020\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d0028\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d0029\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d002a\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d0032\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d0033\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d0034\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d003c\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d003d\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d003e\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d003f\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d0040\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d0050\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d006e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d0085\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d400a\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d400b\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d400c\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d400d\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d4014\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d4015\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d4016\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d401e\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d401f\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d4020\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d4028\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d4029\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d402a\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d4032\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d4033\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d4034\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d403c\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d403d\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d403e\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d403f\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d4040\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d4050\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d406e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.4d4085\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53000a\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53000b\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53000c\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53000d\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530014\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530015\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530016\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53001e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53001f\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530020\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530028\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530029\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53002a\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530032\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530033\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530034\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53003c\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53003d\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53003e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53003f\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530040\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530050\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53006e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530085\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53040a\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53040b\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53040c\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53040d\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530414\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530415\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530416\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53041e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53041f\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530420\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530428\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530429\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53042a\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530432\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530433\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530434\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53043c\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53043d\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53043e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53043f\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530440\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530450\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.53046e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.530485\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56000a\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56000b\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56000c\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56000d\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560014\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560015\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560016\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56001e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56001f\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560020\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560028\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560029\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56002a\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560032\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560033\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560034\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56003c\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56003d\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56003e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56003f\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560040\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560050\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56006e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560085\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56040a\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56040b\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56040c\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56040d\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560414\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560415\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560416\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56041e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56041f\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560420\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560428\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560429\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56042a\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560432\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560433\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560434\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56043c\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56043d\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56043e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56043f\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560440\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560450\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56046e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.560485\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56100a\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56100b\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56100c\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56100d\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.561014\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.561015\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.561016\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56101e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56101f\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.561020\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.561028\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.561029\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56102a\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.561032\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.561033\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.561034\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56103c\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56103d\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56103e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56103f\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.561040\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.561050\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.56106e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.561085\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.58000a\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.58000b\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.58000c\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.58000d\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.580014\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.580015\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.580016\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.58001e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.58001f\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.580020\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.580028\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.580029\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.58002a\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.580032\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.580033\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.580034\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.58003c\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.58003d\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.58003e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.58003f\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.580040\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.580050\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.58006e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.580085\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64000a\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64000b\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64000c\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64000d\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640014\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640015\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640016\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64001E, mp4a.40.2\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64001e\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64001f\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640020\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640028\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640029\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64002a\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640032\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640033\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640034\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64003c\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64003d\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64003e\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64003f\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640040\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640050\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64006e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640085\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64080a\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64080b\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64080c\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64080d\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640814\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640815\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640816\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64081e\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64081f\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640820\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640828\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640829\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64082a\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640832\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640833\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640834\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64083c\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64083d\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64083e\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64083f\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640840\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640850\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.64086e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.640885\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e000a\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e000b\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e000c\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e000d\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e0014\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e0015\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e0016\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e001e\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e001f\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e0020\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e0028\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e0029\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e002a\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e0032\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e0033\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e0034\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e003c\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e003d\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e003e\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e003f\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e0040\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e0050\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e006e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e0085\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e100a\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e100b\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e100c\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e100d\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e1014\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e1015\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e1016\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e101e\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e101f\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e1020\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e1028\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e1029\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e102a\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e1032\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e1033\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e1034\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e103c\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e103d\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e103e\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e103f\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e1040\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e1050\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e106e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.6e1085\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.76000a\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.76000b\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.76000c\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.76000d\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.760014\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.760015\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.760016\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.76001e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.76001f\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.760020\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.760028\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.760029\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.76002a\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.760032\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.760033\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.760034\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.76003c\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.76003d\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.76003e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.76003f\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.760040\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.760050\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.76006e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.760085\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a000a\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a000b\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a000c\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a000d\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a0014\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a0015\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a0016\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a001e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a001f\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a0020\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a0028\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a0029\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a002a\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a0032\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a0033\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a0034\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a003c\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a003d\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a003e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a003f\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a0040\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a0050\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a006e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a0085\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a100a\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a100b\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a100c\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a100d\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a1014\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a1015\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a1016\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a101e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a101f\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a1020\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a1028\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a1029\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a102a\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a1032\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a1033\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a1034\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a103c\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a103d\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a103e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a103f\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a1040\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a1050\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a106e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.7a1085\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.80000a\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.80000b\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.80000c\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.80000d\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.800014\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.800015\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.800016\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.80001e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.80001f\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.800020\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.800028\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.800029\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.80002a\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.800032\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.800033\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.800034\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.80003c\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.80003d\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.80003e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.80003f\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.800040\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.800050\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.80006e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.800085\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4000a\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4000b\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4000c\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4000d\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f40014\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f40015\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f40016\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4001e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4001f\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f40020\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f40028\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f40029\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4002a\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f40032\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f40033\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f40034\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4003c\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4003d\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4003e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4003f\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f40040\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f40050\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4006e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f40085\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4100a\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4100b\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4100c\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4100d\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f41014\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f41015\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f41016\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4101e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4101f\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f41020\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f41028\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f41029\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4102a\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f41032\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f41033\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f41034\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4103c\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4103d\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4103e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4103f\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f41040\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f41050\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f4106e\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc1.f41085\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc3\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"avc3.42001E\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"flac\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"hev1.1.6.L93.90\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"hev1.1.6.L93.B0\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"hvc1.1.6.L93.90\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"hvc1.1.6.L93.B0\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"mp4a.40.02\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"mp4a.40.2\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"mp4a.40.29\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"mp4a.40.5\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"mp4a.67\"",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"vp09.00.10.08\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"vp09.00.50.08\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"vp09.01.20.08.01\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"vp09.01.20.08.01.01.01.01.00\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/mp4; codecs=\"vp09.02.10.10.01.09.16.09.01\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/ogg",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/ogg; codecs=\"flac\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/ogg; codecs=\"opus\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/ogg; codecs=\"theora\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/ogg; codecs=\"theora, flac\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/ogg; codecs=\"theora, vorbis\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/ogg; codecs=\"vp8\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/webm",
+      "audioPlayType": "maybe",
+      "videoPlayType": "maybe",
+      "mediaRecorder": true
+    },
+    {
+      "mimeType": "video/webm; codecs=\"av01.0.04M.08\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/webm; codecs=\"vorbis\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/webm; codecs=\"vorbis,vp9\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/webm; codecs=\"vp09.02.10.08\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/webm; codecs=\"vp8\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true,
+      "mediaRecorder": true
+    },
+    {
+      "mimeType": "video/webm; codecs=\"vp8, opus\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true,
+      "mediaRecorder": true
+    },
+    {
+      "mimeType": "video/webm; codecs=\"vp8, vorbis\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/webm; codecs=\"vp8.0\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaRecorder": true
+    },
+    {
+      "mimeType": "video/webm; codecs=\"vp8.0, vorbis\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably"
+    },
+    {
+      "mimeType": "video/webm; codecs=\"vp9\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true,
+      "mediaRecorder": true
+    },
+    {
+      "mimeType": "video/webm; codecs=\"vp9, opus\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true,
+      "mediaRecorder": true
+    },
+    {
+      "mimeType": "video/webm; codecs=\"vp9, vorbis\"",
+      "audioPlayType": "probably",
+      "videoPlayType": "probably",
+      "mediaSource": true
+    },
+    {
+      "mimeType": "video/x-m4v",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/x-m4v; codecs=\"avc1.42AC23\"",
+      "videoPlayType": "maybe"
+    },
+    {
+      "mimeType": "video/x-matroska",
+      "mediaRecorder": true
+    }
+  ],
+  "webRTC": {}
+}
\ No newline at end of file
diff --git a/fingerprinting/manager.cc b/fingerprinting/manager.cc
new file mode 100644
index 0000000000..28ee479135
--- /dev/null
+++ b/fingerprinting/manager.cc
@@ -0,0 +1,77 @@
+#include "fingerprinting/manager.h"
+#include <format>
+#include <string>
+#include "base/command_line.h"
+#include "base/files/file_util.h"
+#include "base/logging.h"
+#include "base/no_destructor.h"
+#include "base/strings/string_util.h"
+#include "base/synchronization/lock.h"
+#include "base/synchronization/rlock.h"
+#include "base/values.h"
+#include "fingerprinting/fingerprint_impl.h"
+#include "fingerprinting/manager.mojom.h"
+#include "mojo/public/cpp/bindings/pending_receiver.h"
+#include "mojo/public/cpp/bindings/receiver.h"  // Add this line
+#include "mojo/public/cpp/bindings/receiver_set.h"
+#include "third_party/abseil-cpp/absl/types/optional.h"
+
+namespace fingerprinting {
+
+IFingerprintManager::IFingerprintManager() = default;
+IFingerprintManager::~IFingerprintManager() = default;
+
+void IFingerprintManager::Init() {
+  base::AutoLock auto_lock(lock_);
+  if (!CanBeInitialized()) {
+    return;
+  }
+
+  std::string fingerprint_file_path;
+  if (base::CommandLine::ForCurrentProcess()->HasSwitch("fingerprint")) {
+    fingerprint_file_path =
+        base::CommandLine::ForCurrentProcess()->GetSwitchValueASCII(
+            "fingerprint");
+  } else {
+    LOG(WARNING)
+        << "No --fingerprint switch passed. Using browser's real fingerprint.";
+    SetCanBeInitialized(false);
+    return;
+  }
+
+#ifndef NDEBUG
+  DLOG(INFO) << std::format("Initializing fingerprint from: {}\n{}",
+                            fingerprint_file_path, get_debug_info(this));
+#endif
+  initialized_ = true;
+  LoadFingerprint(fingerprint_file_path);
+}
+
+void IFingerprintManager::LoadFingerprint(
+    const std::string& fingerprint_file_path) {
+  std::string fingerprint_str;
+
+  // Convert std::string to base::FilePath
+  base::FilePath fingerprint_file_path_o =
+      base::FilePath(fingerprint_file_path);
+  if (!base::ReadFileToString(fingerprint_file_path_o, &fingerprint_str)) {
+    LOG(ERROR) << "Failed reading: " << fingerprint_file_path;
+    return;
+  }
+
+  if (!Fingerprint::FromString(fingerprint_str, fingerprint_)) {
+    LOG(ERROR) << std::format("Failed serializing JSON {}",
+                              fingerprint_file_path);
+    return;
+  }
+
+  loaded_ = true;
+  // Print the fingerprint_file_path location
+  LOG(INFO) << "Loaded --fingerprint " << fingerprint_file_path;
+}
+
+Fingerprint* IFingerprintManager::GetFingerprint() {
+  return fingerprint_.get();
+}
+
+}  // namespace fingerprinting
diff --git a/fingerprinting/manager.h b/fingerprinting/manager.h
new file mode 100644
index 0000000000..900192f120
--- /dev/null
+++ b/fingerprinting/manager.h
@@ -0,0 +1,137 @@
+// fingerprint_manager.h
+#ifndef FINGERPRINTING_MANAGER_IFACE_H_
+#define FINGERPRINTING_MANAGER_IFACE_H_
+
+#include <any>
+#include <format>
+#include <mutex>
+#include <string>
+#include <unordered_map>
+#include "base/files/file_util.h"
+#include "base/json/json_reader.h"
+#include "base/logging.h"
+#include "base/no_destructor.h"
+#include "base/strings/string_util.h"
+#include "base/synchronization/rlock.h"
+#include "base/values.h"
+#include "fingerprinting/export.h"
+#include "fingerprinting/fingerprint_impl.h"
+#include "fingerprinting/manager.mojom.h"
+#include "third_party/abseil-cpp/absl/types/optional.h"
+
+#include "base/command_line.h"
+#include "base/debug/stack_trace.h"
+#include "base/process/process_handle.h"
+
+namespace fingerprinting {
+
+class FINGERPRINTING_EXPORT IFingerprintManager
+    : virtual public fingerprinting::mojom::FingerprintManager {
+ public:
+  void Init();
+
+  bool Loaded() { return loaded_; }
+
+  static absl::optional<Fingerprint> FromStringToObj(
+      const std::string& fingerprint_str);
+
+  Fingerprint* GetFingerprint();
+
+ protected:
+  IFingerprintManager();
+
+  ~IFingerprintManager() override;
+  void LoadFingerprint(const std::string& fingerprint_file_path);
+  bool CanBeInitialized() { return !initialized_ && can_be_initialized_; }
+  Fingerprint* fingerprint() { return fingerprint_.get(); }
+
+  std::unordered_map<std::string, std::any> cache_;
+  std::unordered_map<std::string, std::mutex> key_mutexes_;
+  std::mutex
+      key_mutexes_map_mutex_;  // To protect access to key_mutexes_ itself
+
+  // Definition of the CacheValue template function
+  template <typename T>
+  void CacheValue(const std::string& key, T& value) {
+    std::unique_lock<std::mutex> map_lock(key_mutexes_map_mutex_);
+    auto& key_mutex = key_mutexes_[key];
+    map_lock.unlock();  // unlock as soon as possible
+
+    std::unique_lock<std::mutex> key_lock(key_mutex);  // lock for specific key
+    cache_[key] = value;
+  }
+
+  template <typename T>
+  bool GetFromCache(const std::string& key, T& value) {
+    std::unique_lock<std::mutex> map_lock(key_mutexes_map_mutex_);
+    auto it = key_mutexes_.find(key);
+    if (it == key_mutexes_.end()) {
+      return false;  // Key not found in mutex map
+    }
+    std::mutex& key_mutex = it->second;
+    map_lock.unlock();  // unlock as soon as possible
+
+    std::unique_lock<std::mutex> key_lock(key_mutex);  // lock for specific key
+    if (cache_.find(key) != cache_.end()) {
+      value = std::any_cast<T>(cache_[key]);
+      return true;
+    }
+    return false;  // Key not found in cache
+  }
+
+  static std::string get_debug_info(IFingerprintManager* manager,
+                                    bool with_stack_trace = true) {
+    // std::string process_type =
+    //     base::CommandLine::ForCurrentProcess()->GetSwitchValueASCII("type");
+
+    base::ProcessId pid = base::GetCurrentProcId();
+
+    Fingerprint* fp = manager->GetFingerprint();
+
+    std::string fp_mem_addr =
+        std::format("0x{:x}", reinterpret_cast<uintptr_t>(fp));
+
+    std::string stack;
+
+    if (with_stack_trace) {
+      stack = get_stack_trace();
+    }
+
+    return std::format("PID: {} | PTR: {} | loaded {} | mojom: {}",
+                       std::move(pid), std::move(fp_mem_addr),
+                       manager->Loaded(), is_mojom(stack));
+  }
+
+  static std::string get_stack_trace(int n = 15) {
+    base::debug::StackTrace stack_trace(n);
+    return stack_trace.ToString();
+  }
+
+  static bool is_mojom(const std::string& callstack) {
+    constexpr char kPendingReceiver[] = "PendingReceiver";
+    if (callstack.find(kPendingReceiver) != std::string::npos) {
+      return true;
+    }
+    return false;
+  }
+
+ private:
+  void SetCanBeInitialized(bool can_be) { can_be_initialized_ = can_be; }
+
+  std::unique_ptr<Fingerprint> fingerprint_;
+
+  base::RLock rlock_;
+  base::Lock lock_;
+
+  bool initialized_ =
+      false;  // Initialization begun. Not yet a guarantee of loaded
+
+  bool loaded_ = false;  // When the fingerprint is actually loaded
+
+  // Usually set to false when switch isn't present
+  bool can_be_initialized_ = true;
+};
+
+}  // namespace fingerprinting
+
+#endif  // FINGERPRINTING_MANAGER_H_
diff --git a/fingerprinting/manager.mojom b/fingerprinting/manager.mojom
new file mode 100644
index 0000000000..b95cbea542
--- /dev/null
+++ b/fingerprinting/manager.mojom
@@ -0,0 +1,20 @@
+module fingerprinting.mojom;
+
+import "mojo/public/mojom/base/file_path.mojom";
+
+import "mojo/public/mojom/base/values.mojom";
+
+import "third_party/blink/public/mojom/user_agent/user_agent_metadata.mojom";
+
+
+// Deprecate:
+//  - GetUserAgentClientHints
+
+interface FingerprintManager {
+  [Sync]
+  Enabled() => (bool enabled);
+  [Sync]
+  GetUserAgentClientHints() => (mojo_base.mojom.Value client_hints);
+  [Sync]
+  GetUserAgentMetadata() => (blink.mojom.UserAgentMetadata? metadata);
+};
diff --git a/fingerprinting/manager_impl.cc b/fingerprinting/manager_impl.cc
new file mode 100644
index 0000000000..4e3513f43d
--- /dev/null
+++ b/fingerprinting/manager_impl.cc
@@ -0,0 +1,58 @@
+#include <map>
+#include <string>
+#include "base/logging.h"
+#include "base/no_destructor.h"
+#include "base/strings/string_util.h"
+#include "base/values.h"
+
+#include "mojo/public/cpp/bindings/pending_receiver.h"
+#include "mojo/public/cpp/bindings/receiver.h"  // Add this line
+
+#include "base/process/process_handle.h"
+#include "fingerprinting/fingerprint_impl.h"
+#include "fingerprinting/manager.mojom.h"
+#include "fingerprinting/manager_impl.h"
+
+namespace fingerprinting {
+
+FingerprintManager::FingerprintManager() = default;
+FingerprintManager::~FingerprintManager() = default;
+
+// static
+FingerprintManager* FingerprintManager::GetInstance(bool try_init) {
+  static base::NoDestructor<FingerprintManager> instance;
+
+  // Keep track of equal-outputs to avoid flooding the logs
+  FingerprintManager* ptr = instance.get();
+
+#ifndef NDEBUG
+  static std::map<std::string, bool> logs_history;
+  std::string this_log = get_debug_info(ptr);
+
+  if (!logs_history.contains(this_log)) {
+    logs_history.emplace(this_log, true);
+    DLOG(INFO) << this_log;
+  }
+#endif
+
+  // Attempt initialization
+  if (try_init && ptr->CanBeInitialized()) {
+    ptr->Init();
+  }
+  return ptr;
+}
+
+void FingerprintManager::Enabled(EnabledCallback callback) {
+  std::move(callback).Run(Loaded());
+}
+
+void FingerprintManager::Bind(
+    mojo::PendingReceiver<fingerprinting::mojom::FingerprintManager> receiver) {
+  receivers_.Add(this, std::move(receiver));
+}
+
+FingerprintManager* manager(bool try_init) {
+  return FingerprintManager::GetInstance(try_init);
+}
+
+}  // namespace fingerprinting
diff --git a/fingerprinting/manager_impl.h b/fingerprinting/manager_impl.h
new file mode 100644
index 0000000000..47cb3188ef
--- /dev/null
+++ b/fingerprinting/manager_impl.h
@@ -0,0 +1,50 @@
+// fingerprint_manager.h
+#ifndef FINGERPRINTING_MANAGER_IMPL_H_
+#define FINGERPRINTING_MANAGER_IMPL_H_
+
+#include <string>
+
+#include "base/files/file_util.h"
+#include "base/json/json_reader.h"
+#include "base/logging.h"
+#include "base/no_destructor.h"
+#include "base/strings/string_util.h"
+
+#include "base/values.h"
+#include "fingerprinting/export.h"
+#include "fingerprinting/fingerprint_impl.h"
+#include "fingerprinting/manager.mojom.h"
+#include "fingerprinting/manager_impl.h"
+#include "fingerprinting/mixins/user-agent.mojom.h"
+#include "mojo/public/cpp/bindings/receiver.h"  // Add this line
+#include "mojo/public/cpp/bindings/receiver_set.h"
+#include "third_party/abseil-cpp/absl/types/optional.h"
+
+namespace fingerprinting {
+
+class FINGERPRINTING_EXPORT FingerprintManager
+    : virtual public IFingerprintManager,
+      public UAMixinMojom {
+ public:
+  static FingerprintManager* GetInstance(bool try_init = false);
+
+  void Bind(mojo::PendingReceiver<fingerprinting::mojom::FingerprintManager>
+                receiver);
+
+  void Enabled(EnabledCallback callback) override;
+
+
+ private:
+  FingerprintManager();
+
+  ~FingerprintManager() override;
+  friend class base::NoDestructor<FingerprintManager>;
+
+  mojo::ReceiverSet<fingerprinting::mojom::FingerprintManager> receivers_;
+};
+
+FINGERPRINTING_EXPORT FingerprintManager* manager(bool try_init = false);
+
+}  // namespace fingerprinting
+
+#endif  // FINGERPRINTING_MANAGER_IMPL_H_
diff --git a/fingerprinting/mixins/user-agent.h b/fingerprinting/mixins/user-agent.h
new file mode 100644
index 0000000000..98f97a8791
--- /dev/null
+++ b/fingerprinting/mixins/user-agent.h
@@ -0,0 +1,104 @@
+#ifndef FINGERPRINTING_UAMIXIN_H_
+#define FINGERPRINTING_UAMIXIN_H_
+
+#include "base/values.h"
+#include "fingerprinting/export.h"
+#include "fingerprinting/fingerprint.h"
+#include "fingerprinting/utilities/user_agent.h"
+
+
+namespace blink{
+  struct UserAgentMetadata;
+}
+
+
+namespace fingerprinting {
+
+namespace {
+const uint32_t kVersion =
+    2u;  // Must reflect the same value as in
+         // third_party/blink/common/user_agent/user_agent_metadata.cc
+}
+
+
+class FINGERPRINTING_EXPORT UAMixin : protected virtual IFingerprint {
+  /**
+   "highEntropyValues": {
+"architecture": "arm",
+"bitness": "64",
+"brands": [
+{ "brand": "Chromium", "version": "116" },
+{ "brand": "Not)A;Brand", "version": "24" },
+{ "brand": "Google Chrome", "version": "116" }
+],
+"fullVersionList": [
+{ "brand": "Chromium", "version": "116.0.5845.96" },
+{ "brand": "Not)A;Brand", "version": "24.0.0.0" },
+{ "brand": "Google Chrome", "version": "116.0.5845.96" }
+],
+"mobile": false,
+"platform": "macOS",
+"platformVersion": "13.3.1"
+}
+  */
+
+
+ public:
+  bool GetUserAgent(std::string* out) {
+    Val* val = nullptr;
+    if (Find({"navigator", "userAgent"}, val) && val->is_string()) {
+      *out = val->GetString();
+      return true;
+    }
+    return false;
+  }
+
+  bool HasClientHints() {
+    /**
+     * Returns true if the highEntropyValues object is present
+     * (navigator.userAgentData.getHighEntropyValues()).
+     */
+    return Find({"highEntropyValues"});
+  }
+
+  bool GetUserAgentClientHints(base::Value*& out) {
+    /**
+     * Returns the highEntropyValues object
+     * (navigator.userAgentData.getHighEntropyValues()).
+     */
+    if (Find({"highEntropyValues"}, out) && out->is_dict()) {
+      return true;
+    }
+    return false;
+  }
+
+  bool GetUserAgentMetadata(blink::UserAgentMetadata& out) {
+    /**
+     * Returns UACH from highEntropyValues object
+     */
+    base::Value* in = nullptr;
+    if (GetUserAgentClientHints(in)) {
+      return fingerprinting::utilities::user_agent::MakeUserAgentMetadata(
+          in->GetDict(), out);
+    }
+    return false;
+  }
+
+
+  bool GetUserAgent(std::string& out) {
+    /**
+     * Returns user agent.
+     */
+    base::Value* in = nullptr;
+    if (Find({"navigator", "userAgent"}, in) && in->is_string()) {
+      out = in->GetString();
+      return true;
+    }
+    return false;
+  }
+
+};
+
+}  // namespace fingerprinting
+
+#endif  // FINGERPRINTING_UAMIXIN_H_
diff --git a/fingerprinting/mixins/user-agent.mojom.cc b/fingerprinting/mixins/user-agent.mojom.cc
new file mode 100644
index 0000000000..c9e6daef2f
--- /dev/null
+++ b/fingerprinting/mixins/user-agent.mojom.cc
@@ -0,0 +1,72 @@
+
+
+#include "fingerprinting/mixins/user-agent.mojom.h"
+#include "base/logging.h"
+#include "third_party/blink/public/common/user_agent/user_agent_metadata.h"
+
+// Include absl
+#include "third_party/abseil-cpp/absl/types/optional.h"
+
+namespace fingerprinting {
+
+namespace {
+constexpr char kUserAgentMetadata[] = "user_agent_metadata";
+constexpr char kUserAgent[] = "user_agent";
+}  // namespace
+
+void UAMixinMojom::GetUserAgentClientHints(
+    GetUserAgentClientHintsCallback callback) {
+  base::Value* out = nullptr;
+
+  if (GetFingerprint()->GetUserAgentClientHints(out)) {
+    base::Value& value = *out;
+    base::Value clone(value.Clone());
+
+    std::move(callback).Run(std::move(clone));
+  } else {
+    std::move(callback).Run(base::Value());
+  }
+}
+
+absl::optional<blink::UserAgentMetadata> UAMixinMojom::GetUserAgentMetadata_() {
+  blink::UserAgentMetadata out;
+  /**
+   * Non-mojom version, same-process callable
+   */
+  if (this->GetFromCache<blink::UserAgentMetadata>(kUserAgentMetadata, out)) {
+    return absl::optional<blink::UserAgentMetadata>(std::move(out));
+  }
+
+  if (GetFingerprint()->GetUserAgentMetadata(out)) {
+    this->CacheValue<blink::UserAgentMetadata>(kUserAgentMetadata, out);
+    DLOG(WARNING)
+        << "Computing same-process GetUserAgentMetadata without cache";
+    return absl::optional<blink::UserAgentMetadata>(std::move(out));
+  }
+  return absl::nullopt;
+}
+
+void UAMixinMojom::GetUserAgentMetadata(GetUserAgentMetadataCallback callback) {
+  absl::optional<blink::UserAgentMetadata> out = this->GetUserAgentMetadata_();
+  if (out) {
+    std::move(callback).Run(out);
+  } else {
+    std::move(callback).Run(absl::nullopt);
+  }
+}
+
+absl::optional<std::string> UAMixinMojom::GetUserAgent_() {
+  std::string out;
+  if (this->GetFromCache<std::string>(kUserAgent, out)) {
+    return absl::optional<std::string>(std::move(out));
+  }
+  if (GetFingerprint()->GetUserAgent(out)) {
+    this->CacheValue<std::string>(kUserAgent, out);
+    return absl::optional<std::string>(std::move(out));
+  } else {
+    return absl::nullopt;
+  }
+}
+
+
+}  // namespace fingerprinting
diff --git a/fingerprinting/mixins/user-agent.mojom.h b/fingerprinting/mixins/user-agent.mojom.h
new file mode 100644
index 0000000000..fb9545249b
--- /dev/null
+++ b/fingerprinting/mixins/user-agent.mojom.h
@@ -0,0 +1,36 @@
+#ifndef FINGERPRINTING_MOJOM_UAMIXIN_H
+#define FINGERPRINTING_MOJOM_UAMIXIN_H
+
+
+#include "fingerprinting/export.h"
+#include "fingerprinting/manager.h"
+#include "third_party/abseil-cpp/absl/types/optional.h"
+namespace blink{
+  struct UserAgentMetadata;
+}
+
+namespace fingerprinting {
+
+
+
+class SetFingerprintStrCallback;
+class GetFingerprintStrCallback;
+class GetUserAgentClientHintsCallback;
+
+
+
+
+
+
+class FINGERPRINTING_EXPORT UAMixinMojom : virtual public IFingerprintManager{
+public:
+
+  void GetUserAgentClientHints(GetUserAgentClientHintsCallback callback) override;
+  void GetUserAgentMetadata(GetUserAgentMetadataCallback callback) override;
+  absl::optional<blink::UserAgentMetadata> GetUserAgentMetadata_();
+  absl::optional<std::string> GetUserAgent_();
+};
+
+}  // namespace fingerprinting
+
+#endif  // FINGERPRINTING_MOJOM_UAMIXIN_H
diff --git a/fingerprinting/utilities/BUILD.gn b/fingerprinting/utilities/BUILD.gn
new file mode 100644
index 0000000000..aba2f2de2a
--- /dev/null
+++ b/fingerprinting/utilities/BUILD.gn
@@ -0,0 +1,46 @@
+import("//build/config/chrome_build.gni")
+
+
+
+source_set("user_agent") {
+  output_name = "fingerprinting_utils_user_agent"
+  sources = [
+    "user_agent.h",
+    "user_agent.cc",
+    "export.h",
+  ]
+
+  defines = [
+    "FINGERPRINTING_UTILITY_IMPLEMENTATION",
+  ]
+
+  deps = [
+    "//base",
+  ]
+
+  # Needed by the //fingerprinting module, otherwise it won't be able to access it.
+
+  public_deps = [
+    "//third_party/blink/public/common:common",
+  ]
+}
+
+source_set("v8") {
+  output_name = "fingerprinting_utils_v8"
+  defines = [
+    "FINGERPRINTING_UTILITY_IMPLEMENTATION"
+  ]
+  sources = [
+    "v8.h",
+    "v8.cc",
+    "export.h",
+  ]
+
+  deps = [
+    "//base",
+  ]
+
+  public_deps = [
+    "//v8",
+  ]
+}
diff --git a/fingerprinting/utilities/export.h b/fingerprinting/utilities/export.h
new file mode 100644
index 0000000000..a402210244
--- /dev/null
+++ b/fingerprinting/utilities/export.h
@@ -0,0 +1,26 @@
+#ifndef FINGERPRINTING_UTILITY_EXPORT_H_
+#define FINGERPRINTING_UTILITY_EXPORT_H_
+
+// Existing Class Export Logic
+#if defined(COMPONENT_BUILD)
+#if defined(WIN32)
+
+#if defined(FINGERPRINTING_UTILITY_IMPLEMENTATION)
+#define FINGERPRINTING_UTILITY_EXPORT __declspec(dllexport)
+#else
+#define FINGERPRINTING_UTILITY_EXPORT __declspec(dllimport)
+#endif  // defined(FINGERPRINTING_UTILITY_IMPLEMENTATION)
+
+#else  // defined(WIN32)
+#if defined(FINGERPRINTING_UTILITY_IMPLEMENTATION)
+#define FINGERPRINTING_UTILITY_EXPORT __attribute__((visibility("default")))
+#else
+#define FINGERPRINTING_UTILITY_EXPORT
+#endif
+
+#endif
+#else  // defined(COMPONENT_BUILD)
+#define FINGERPRINTING_UTILITY_EXPORT
+#endif
+
+#endif  // FINGERPRINTING_UTILITY_EXPORT_H_
diff --git a/fingerprinting/utilities/user_agent.cc b/fingerprinting/utilities/user_agent.cc
new file mode 100644
index 0000000000..c9c19787a7
--- /dev/null
+++ b/fingerprinting/utilities/user_agent.cc
@@ -0,0 +1,177 @@
+// Copyright 2015 The Chromium Authors
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "fingerprinting/utilities/user_agent.h"
+#include <map>
+#include <regex>
+#include <string>
+#include "base/logging.h"
+#include "base/pickle.h"
+#include "base/values.h"
+#include "third_party/abseil-cpp/absl/types/optional.h"
+#include "third_party/blink/public/common/user_agent/user_agent_metadata.h"
+
+namespace fingerprinting {
+namespace utilities {
+namespace user_agent {
+namespace {
+
+/**
+* UACH Hints:
+
+
+architecture
+bitness
+model
+platformVersion
+uaFullVersion
+fullVersionList
+
+"highEntropyValues": {
+    "brands": [
+      {
+        "brand": "Chromium",
+        "version": "115"
+      },
+      {
+        "brand": "Not)A;Brand",
+        "version": "24"
+      },
+      {
+        "brand": "Google Chrome",
+        "version": "115"
+      }
+    ],
+    "mobile": false,
+    "bitness": "64",
+    "platform": "macOS",
+    "architecture": "arm",
+
+    "platformVersion": "13.3.1"
+  }
+
+*
+*/
+
+
+constexpr char kMobileFormFactor[] =
+    "Mobile";  // Must reflect the same value as in
+               // components/embedder_support/user_agent_utils.h
+
+constexpr char kFullVersion[] = "uaFullVersion";  // Might be depreacted
+constexpr char kPlatform[] = "platform";
+constexpr char kPlatformVersion[] = "platformVersion";
+constexpr char kArchitecture[] = "architecture";
+constexpr char kModel[] = "model";
+constexpr char kMobile[] = "mobile";
+constexpr char kBitness[] = "bitness";
+// constexpr char kWow64[] = "wow64";
+constexpr char kBrands[] = "brands";
+constexpr char kFullVersionList[] = "fullVersionList";
+
+constexpr char kBrand[] = "brand";
+constexpr char kVersion[] = "version";
+
+bool populate_brands_list(blink::UserAgentBrandList& out,
+                          base::Value::List* brands_list) {
+  /**
+   * Iterates over raw brands list and populates the UserAgentBrandList
+   * Returns false if the operation failed
+   */
+  if (!brands_list || !(brands_list->size() > 0)) {
+    return false;
+  }
+  for (size_t i = 0; i < brands_list->size(); ++i) {
+    const base::Value* brand_version = &(*brands_list)[i];
+
+    const base::Value::Dict* bv = brand_version->GetIfDict();
+    if (!bv) {
+      return false;
+    }
+
+    const std::string* brand = bv->FindString(kBrand);
+    const std::string* version = bv->FindString(kVersion);
+
+    if (!(brand && version)) {
+      return false;
+    }
+    out.push_back(blink::UserAgentBrandVersion(*brand, *version));
+  }
+
+  return true;
+}
+
+}  // Anonymous namespace
+
+bool MakeUserAgentMetadata(base::Value::Dict& in,
+                           blink::UserAgentMetadata& out) {
+  if (!populate_brands_list(out.brand_version_list, in.FindList(kBrands))) {
+    LOG(ERROR) << "Failed parsing UA Metadata: brand_version_list invalid.";
+    return false;
+  }
+
+  if (!populate_brands_list(out.brand_full_version_list,
+                            in.FindList(kFullVersionList))) {
+    LOG(ERROR)
+        << "Failed parsing UA Metadata: brand_full_version_list invalid.";
+    return false;
+  }
+
+  const std::string* full_version = in.FindString(kFullVersion);
+  const std::string* platform = in.FindString(kPlatform);
+  const std::string* platform_version = in.FindString(kPlatformVersion);
+  const std::string* architecture = in.FindString(kArchitecture);
+  const std::string* model = in.FindString(kModel);
+  absl::optional<bool> mobile = in.FindBool(kMobile);
+  bool is_mobile = mobile.value_or(false);
+  const std::string* bitness = in.FindString(kBitness);
+  // absl::optional<bool> wow64 = highEntropyValues.FindBool(kWow64)
+
+  // Deprecated. Don't fail if not found
+  if (full_version != nullptr) {
+    out.full_version = *full_version;
+  }
+
+  if (platform == nullptr) {
+    LOG(ERROR) << "Failed parsing UA Metadata: platform field not set.";
+    return false;
+  }
+  out.platform = *platform;
+
+  if (platform_version == nullptr) {
+    LOG(ERROR) << "Failed parsing UA Metadata: platform_version field not set.";
+    return false;
+  }
+  out.platform_version = *platform_version;
+
+  if (architecture == nullptr) {
+    LOG(ERROR) << "Failed parsing UA Metadata: architecture field not set.";
+    return false;
+  }
+  out.architecture = *architecture;
+
+  if (model != nullptr) {
+    out.model = *model;
+  }
+
+  out.mobile = is_mobile;
+
+  if (bitness == nullptr) {
+    LOG(ERROR) << "Failed parsing UA Metadata: bitness field not set.";
+    return false;
+  }
+  out.bitness = *bitness;
+
+  // wow64
+  // out.WriteBool(wow64.value_or(false));;
+  out.wow64 = false;
+
+  out.form_factor = is_mobile ? kMobileFormFactor : "";
+
+  return true;
+}
+
+}  // namespace user_agent
+}  // namespace utilities
+}  // namespace fingerprinting
diff --git a/fingerprinting/utilities/user_agent.h b/fingerprinting/utilities/user_agent.h
new file mode 100644
index 0000000000..143af91df3
--- /dev/null
+++ b/fingerprinting/utilities/user_agent.h
@@ -0,0 +1,36 @@
+// Copyright 2015 The Chromium Authors
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#ifndef FINGERPRINTING_USER_AGENT_UTILITIES_H
+#define FINGERPRINTING_USER_AGENT_UTILITIES_H
+
+#include <map>
+#include <regex>
+#include <string>
+#include "base/values.h"
+#include "fingerprinting/utilities/export.h"
+
+
+
+namespace blink{
+  struct UserAgentMetadata;
+}
+
+
+namespace fingerprinting {
+
+namespace utilities {
+namespace user_agent {
+
+
+
+
+// bool PickleUserAgentMetadata(base::Value::Dict& in, std::string& out);
+FINGERPRINTING_UTILITY_EXPORT bool MakeUserAgentMetadata(base::Value::Dict& in, blink::UserAgentMetadata& out);
+
+
+}  // namespace user_agent
+}  // namespace utilities
+}  // namespace fingerprinting
+#endif  // FINGERPRINTING_USER_AGENT_UTILITIES_H
diff --git a/fingerprinting/utilities/v8.cc b/fingerprinting/utilities/v8.cc
new file mode 100644
index 0000000000..5a4593261f
--- /dev/null
+++ b/fingerprinting/utilities/v8.cc
@@ -0,0 +1,407 @@
+#include "v8/include/v8.h"
+#include <set>
+#include <string>
+#include "base/logging.h"
+
+
+namespace fingerprinting {
+
+namespace utilities {
+
+void patchWrapper(const v8::FunctionCallbackInfo<v8::Value>& innerArgs) {
+  v8::Isolate* isolate = innerArgs.GetIsolate();
+  v8::Local<v8::Context> context = innerArgs.GetIsolate()->GetCurrentContext();
+  v8::Local<v8::Object> callbackData =
+      v8::Local<v8::Object>::Cast(innerArgs.Data());
+
+  v8::Local<v8::Value> valueOverride =
+      callbackData
+          ->Get(context,
+                v8::String::NewFromUtf8(isolate, "handler").ToLocalChecked())
+          .ToLocalChecked();
+
+  if (!valueOverride->IsFunction()) {
+    innerArgs.GetReturnValue().Set(valueOverride);
+    return;
+  }
+
+  // Target will be passed for getter/setter functions. We want to pass it as
+  // the first argument
+  v8::Local<v8::Value> target =
+      callbackData
+          ->Get(context,
+                v8::String::NewFromUtf8(isolate, "target").ToLocalChecked())
+          .ToLocalChecked();
+
+  const int argc = innerArgs.Length() + 2;
+
+  v8::Local<v8::Value> argv[argc];
+
+  argv[0] = target;
+  argv[1] = innerArgs.This();
+
+  for (int i = 2; i < argc; ++i) {
+    argv[i] = innerArgs[i];
+  }
+
+  v8::Local<v8::Function> handler = v8::Local<v8::Function>::Cast(valueOverride);
+
+  v8::MaybeLocal<v8::Value> maybeResult =
+      handler->Call(context, innerArgs.Holder(), argc, argv);
+
+  if (!maybeResult.IsEmpty()) {
+    // If the result is empty, an exception has occurred,
+    // so we need to handle the exception
+    innerArgs.GetReturnValue().Set(maybeResult.ToLocalChecked());
+  } else {
+    innerArgs.GetReturnValue().SetUndefined();
+  }
+}
+
+void ThrowAndLogError(v8::Isolate* isolate, const char* message) {
+  isolate->ThrowException(
+      v8::String::NewFromUtf8(isolate, message).ToLocalChecked());
+}
+
+void CopyOwnPropertiesDescriptors(v8::Local<v8::Object> source,
+                                  v8::Local<v8::Object> target,
+                                  v8::Local<v8::Context> context,
+                                  v8::Isolate* isolate) {
+  /**
+   * Copies own property descriptors
+   *
+   *
+   * Object.getOwnPropertyDescriptors(Function.prototype.toString)
+      {
+          length: {value: 0, writable: false, enumerable: false, configurable:
+   true}, name: {value: 'toString', writable: false, enumerable: false,
+   configurable: true}
+      }
+  */
+
+  v8::Local<v8::String> __VALUE__ =
+      v8::String::NewFromUtf8(isolate, "value").ToLocalChecked();
+  v8::Local<v8::String> __GET__ =
+      v8::String::NewFromUtf8(isolate, "get").ToLocalChecked();
+  v8::Local<v8::String> __SET__ =
+      v8::String::NewFromUtf8(isolate, "set").ToLocalChecked();
+
+  v8::Local<v8::Array> sourceProps =
+      source->GetOwnPropertyNames(context, static_cast<v8::PropertyFilter>(0))
+          .ToLocalChecked();
+
+  // Iterate through the properties of the source object
+  for (uint32_t i = 0; i < sourceProps->Length(); i++) {
+    // Get the descriptor's property name
+    v8::Local<v8::Value> key = sourceProps->Get(context, i).ToLocalChecked();
+
+    v8::Local<v8::Name> name = v8::Local<v8::Name>::Cast(key);
+
+    v8::MaybeLocal<v8::Value> maybeSrcPropDescr =
+        source->GetOwnPropertyDescriptor(context, name).ToLocalChecked();
+
+    if (maybeSrcPropDescr.IsEmpty()) {
+      continue;
+    }
+
+    v8::PropertyAttribute srcPropDescrAttrs =
+        source->GetPropertyAttributes(context, name).FromJust();
+
+    // The source's own property descriptor in scope
+    v8::Local<v8::Object> srcPropDescr =
+        v8::Local<v8::Object>::Cast(maybeSrcPropDescr.ToLocalChecked());
+
+    if (srcPropDescr->Has(context, __VALUE__).ToChecked()) {
+      // We're dealing with a data descriptor
+      v8::PropertyDescriptor newDescriptor(
+          srcPropDescr->Get(context, __VALUE__).ToLocalChecked(),
+          (srcPropDescrAttrs & v8::PropertyAttribute::ReadOnly) ==
+              0  // Is Writable?
+      );
+
+      newDescriptor.set_enumerable(
+          (srcPropDescrAttrs & v8::PropertyAttribute::DontEnum) == 0);
+      newDescriptor.set_configurable(
+          (srcPropDescrAttrs & v8::PropertyAttribute::DontDelete) == 0);
+
+      (void)target->DefineProperty(context, name, newDescriptor);
+    } else {
+      // We're dealing with an accessor descriptor
+      v8::PropertyDescriptor newDescriptor(
+          srcPropDescr->Get(context, __GET__).ToLocalChecked(),
+          srcPropDescr->Get(context, __SET__).ToLocalChecked());
+
+      newDescriptor.set_enumerable(
+          (srcPropDescrAttrs & v8::PropertyAttribute::DontEnum) == 0);
+      newDescriptor.set_configurable(
+          (srcPropDescrAttrs & v8::PropertyAttribute::DontDelete) == 0);
+
+      (void)target->DefineProperty(context, name, newDescriptor);
+    }
+  }
+
+  (void)target->SetPrototype(context, source->GetPrototype());
+}
+
+void PatchAccessor(const v8::FunctionCallbackInfo<v8::Value>& args) {
+  /**
+   * Patches Accessor Descriptors
+   *
+   *
+
+PatchAccessor(
+Navigator.prototype,
+'userAgent',
+{
+  get: function(target,thisArg,...args){
+    return Reflect.apply(target,thisArg,args) + " patched";
+  }
+}
+)
+
+  */
+  v8::Isolate* isolate = args.GetIsolate();
+  v8::HandleScope handle_scope(isolate);
+  v8::Local<v8::Context> context = isolate->GetCurrentContext();
+
+  v8::Local<v8::String> __SET__ =
+      v8::String::NewFromUtf8(isolate, "set").ToLocalChecked();
+  v8::Local<v8::String> __GET__ =
+      v8::String::NewFromUtf8(isolate, "get").ToLocalChecked();
+
+  // Check for the correct number of arguments
+  if (args.Length() != 3) {
+    ThrowAndLogError(isolate,
+                     "Expected 3 arguments: target, property name, and value.");
+    return;
+  }
+
+  // Validation for object and string arguments
+  auto ValidateArg = [&](int index, bool should_be_object,
+                         const char* message) -> v8::Local<v8::Value> {
+    if ((should_be_object && !args[index]->IsObject()) ||
+        (!should_be_object && !args[index]->IsString())) {
+      ThrowAndLogError(isolate, message);
+      return {};
+    }
+    return args[index];
+  };
+
+  v8::Local<v8::Object> holder = v8::Local<v8::Object>::Cast(ValidateArg(
+      0, true, "Expected first argument to be an object (holder)."));
+  v8::Local<v8::String> propName = v8::Local<v8::String>::Cast(ValidateArg(
+      1, false, "Expected second argument to be a string (property name)."));
+  v8::Local<v8::Object> config = v8::Local<v8::Object>::Cast(ValidateArg(
+      2, true, "Expected third argument to be an object (config)."));
+
+  // Check if config object has a getter/setter and validate its type
+  auto HasValidFunction = [&](v8::Local<v8::String> key, const char* message) {
+    if (config->HasOwnProperty(context, key).FromJust() &&
+        !config->Get(context, key).ToLocalChecked()->IsFunction()) {
+      ThrowAndLogError(isolate, message);
+      return false;
+    }
+    return true;
+  };
+
+  if (!HasValidFunction(__GET__,
+                        "'get' property in config should be a function.") ||
+      !HasValidFunction(__SET__,
+                        "'set' property in config should be a function.")) {
+    return;
+  }
+
+  v8::MaybeLocal<v8::Value> maybeDescriptor =
+      holder->GetOwnPropertyDescriptor(context, propName);
+
+  if (maybeDescriptor.IsEmpty()) {
+    ThrowAndLogError(isolate, "Property does not exist on target object.");
+    return;
+  }
+
+  v8::Local<v8::Object> descriptor =
+      v8::Local<v8::Object>::Cast(maybeDescriptor.ToLocalChecked());
+
+  // Function to process either a getter or setter
+  auto ProcessAccessor =
+      [&](v8::Local<v8::String> accessorType) -> v8::Local<v8::Function> {
+    v8::Local<v8::Function> nativeFn;
+    if (descriptor->Has(context, accessorType).FromJust()) {
+      v8::Local<v8::Value> value =
+          descriptor->Get(context, accessorType).ToLocalChecked();
+      if (value->IsFunction()) {
+        nativeFn = v8::Local<v8::Function>::Cast(value);
+      } else {
+        return nativeFn;  // Returns an undefined function
+      }
+    }
+
+    if (config->HasOwnProperty(context, accessorType).FromJust()) {
+      v8::Local<v8::Object> callbackData = v8::Object::New(isolate);
+      // if (!nativeFn.IsEmpty()) {
+      //     (void)callbackData->Set(context, v8::String::NewFromUtf8(isolate,
+      //     "super").ToLocalChecked(), nativeFn);
+      // }
+
+      (void)callbackData->Set(
+          context, v8::String::NewFromUtf8(isolate, "handler").ToLocalChecked(),
+          v8::Local<v8::Function>::Cast(
+              config->Get(context, accessorType).ToLocalChecked()));
+      (void)callbackData->Set(
+          context, v8::String::NewFromUtf8(isolate, "target").ToLocalChecked(),
+          nativeFn);
+
+      v8::Local<v8::FunctionTemplate> templateFn =
+          v8::FunctionTemplate::New(isolate, patchWrapper, callbackData);
+      templateFn->RemovePrototype();
+      templateFn->SetClassName(propName);
+
+      v8::Local<v8::Function> fnWrapped =
+          templateFn->GetFunction(context).ToLocalChecked();
+
+      CopyOwnPropertiesDescriptors(nativeFn, fnWrapped, context, isolate);
+
+      return fnWrapped;
+    }
+    return nativeFn;
+  };
+
+  if (!descriptor->Has(context, __GET__).FromJust() &&
+      !descriptor->Has(context, __SET__).FromJust()) {
+    ThrowAndLogError(isolate,
+                     "Cannot patch a data descriptor with this PatchAccessor. "
+                     "Use PatchValue instead.");
+    return;
+  }
+
+  v8::Local<v8::Function> patchedGetterFn = ProcessAccessor(__GET__);
+  v8::Local<v8::Function> patchedSetterFn = ProcessAccessor(__SET__);
+
+  v8::PropertyAttribute srcPropAttrs =
+      holder->GetPropertyAttributes(context, propName).FromJust();
+
+  v8::PropertyDescriptor newDescriptor(patchedGetterFn, patchedSetterFn);
+
+  newDescriptor.set_enumerable((srcPropAttrs & v8::PropertyAttribute::DontEnum) ==
+                               0);
+  newDescriptor.set_configurable(
+      (srcPropAttrs & v8::PropertyAttribute::DontDelete) == 0);
+
+  // Will always succeeed because of Patched
+  (void)holder->DefineProperty(context, propName, newDescriptor);
+}
+
+void PatchValue(const v8::FunctionCallbackInfo<v8::Value>& args) {
+  /**
+   * Patches Data Descriptors
+   *
+   *
+PatchValue(
+  Function.prototype,
+  'toString',
+  function(){
+    return "hello";
+  }
+)
+  */
+  v8::Isolate* isolate = args.GetIsolate();
+  v8::HandleScope handle_scope(isolate);
+  v8::Local<v8::Context> context = isolate->GetCurrentContext();
+
+  v8::Local<v8::String> __VALUE__ =
+      v8::String::NewFromUtf8(isolate, "value").ToLocalChecked();
+
+  // Check for the correct number of arguments
+  if (args.Length() != 3) {
+    ThrowAndLogError(isolate,
+                     "Expected 3 arguments: target, property name, and value.");
+    return;
+  }
+
+  // Validation for object and string arguments
+  auto ValidateArg = [&](int index, bool should_be_object,
+                         const char* message) -> v8::Local<v8::Value> {
+    if ((should_be_object && !args[index]->IsObject()) ||
+        (!should_be_object && !args[index]->IsString())) {
+      ThrowAndLogError(isolate, message);
+      return {};
+    }
+    return args[index];
+  };
+
+  v8::Local<v8::Object> holder = v8::Local<v8::Object>::Cast(ValidateArg(
+      0, true, "Expected first argument to be an object (holder)."));
+  v8::Local<v8::String> propName = v8::Local<v8::String>::Cast(ValidateArg(
+      1, false, "Expected second argument to be a string (property name)."));
+  v8::Local<v8::Value> handler = args[2];
+
+  v8::MaybeLocal<v8::Value> maybeDescriptor =
+      holder->GetOwnPropertyDescriptor(context, propName);
+
+  if (maybeDescriptor.IsEmpty()) {
+    ThrowAndLogError(isolate, "Property does not exist on target object.");
+    return;
+  }
+
+  v8::Local<v8::Object> descriptor =
+      v8::Local<v8::Object>::Cast(maybeDescriptor.ToLocalChecked());
+
+  // Check that the descriptor is a data descriptor. Must have a .value
+
+  if (!descriptor->Has(context, __VALUE__).FromJust()) {
+    ThrowAndLogError(isolate,
+                     "Cannot patch an accessor descriptor with this "
+                     "PatchValue. Use PatchAccessor instead.");
+    return;
+  }
+
+  // The target object being patched (the property of the holder)
+  v8::Local<v8::Value> target =
+      descriptor->Get(context, __VALUE__).ToLocalChecked();
+
+  if (!handler->IsFunction()) {
+    ThrowAndLogError(isolate, "Expected third argument to be a function.");
+    return;
+  }
+
+  v8::Local<v8::Object> wrapperInnerArgs = v8::Object::New(isolate);
+
+  (void)wrapperInnerArgs
+      ->Set(context,
+            v8::String::NewFromUtf8(isolate, "handler").ToLocalChecked(),
+            handler)
+      .ToChecked();
+  (void)wrapperInnerArgs
+      ->Set(context,
+            v8::String::NewFromUtf8(isolate, "holder").ToLocalChecked(), holder)
+      .ToChecked();
+  (void)wrapperInnerArgs
+      ->Set(context,
+            v8::String::NewFromUtf8(isolate, "target").ToLocalChecked(), target)
+      .ToChecked();
+
+  v8::Local<v8::Object> oTarget = v8::Local<v8::Object>::Cast(target);
+
+  v8::Local<v8::FunctionTemplate> templateFn =
+      v8::FunctionTemplate::New(isolate, patchWrapper, wrapperInnerArgs);
+
+  templateFn->RemovePrototype();
+  templateFn->SetClassName(propName);
+
+  v8::Local<v8::Function> fnWrapped =
+      templateFn->GetFunction(context).ToLocalChecked();
+
+  CopyOwnPropertiesDescriptors(oTarget, fnWrapped, context, isolate);
+
+  v8::PropertyAttribute targetPropertyAttributes =
+      holder->GetPropertyAttributes(context, propName).FromJust();
+
+  // Should always evaluate to true because of Patched
+  (void)holder->DefineOwnProperty(
+      context, propName, fnWrapped,
+      (v8::PropertyAttribute)(targetPropertyAttributes |
+                          v8::PropertyAttribute::Patched));
+}
+
+}  // namespace utilities
+}  // namespace fingerprinting
diff --git a/fingerprinting/utilities/v8.h b/fingerprinting/utilities/v8.h
new file mode 100644
index 0000000000..29976c79c6
--- /dev/null
+++ b/fingerprinting/utilities/v8.h
@@ -0,0 +1,33 @@
+
+
+#ifndef FINGERPRINTING_UTILITIES_V8_H_
+#define FINGERPRINTING_UTILITIES_V8_H_
+
+#include "v8/include/v8.h"
+
+#include <set>
+#include <string>
+#include "fingerprinting/utilities/export.h"
+
+namespace fingerprinting {
+
+namespace utilities {
+
+FINGERPRINTING_UTILITY_EXPORT void patchWrapper(const v8::FunctionCallbackInfo<v8::Value>& innerArgs);
+
+FINGERPRINTING_UTILITY_EXPORT void ThrowAndLogError(v8::Isolate* isolate, const char* message);
+
+FINGERPRINTING_UTILITY_EXPORT void CopyOwnPropertiesDescriptors(v8::Local<v8::Object> source,
+                                  v8::Local<v8::Object> target,
+                                  v8::Local<v8::Context> context,
+                                  v8::Isolate* isolate);
+
+FINGERPRINTING_UTILITY_EXPORT void PatchAccessor(const v8::FunctionCallbackInfo<v8::Value>& args);
+
+FINGERPRINTING_UTILITY_EXPORT void PatchValue(const v8::FunctionCallbackInfo<v8::Value>& args);
+
+}  // namespace utilities
+
+}  // namespace fingerprinting
+
+#endif  // FINGERPRINTING_UTILITIES_V8_H_
diff --git a/third_party/blink/renderer/bindings/core/v8/BUILD.gn b/third_party/blink/renderer/bindings/core/v8/BUILD.gn
index 8ea0918461..dc12935445 100644
--- a/third_party/blink/renderer/bindings/core/v8/BUILD.gn
+++ b/third_party/blink/renderer/bindings/core/v8/BUILD.gn
@@ -26,6 +26,7 @@ blink_core_sources("v8") {
     ":generated",
     "//third_party/blink/renderer/platform",
     "//v8",
+    "//fingerprinting/utilities:v8",
   ]
 }
 
diff --git a/third_party/blink/renderer/bindings/core/v8/script_state_impl.cc b/third_party/blink/renderer/bindings/core/v8/script_state_impl.cc
index 0d44f1f15e..660223d9bc 100644
--- a/third_party/blink/renderer/bindings/core/v8/script_state_impl.cc
+++ b/third_party/blink/renderer/bindings/core/v8/script_state_impl.cc
@@ -6,6 +6,11 @@
 
 #include "third_party/blink/renderer/core/execution_context/execution_context.h"
 #include "third_party/blink/renderer/platform/bindings/dom_wrapper_world.h"
+#include "third_party/blink/public/web/blink.h"
+#include "fingerprinting/utilities/v8.h"
+#include "v8/include/v8-isolate.h"
+#include "v8/include/v8-local-handle.h"
+#include "v8/include/v8-microtask-queue.h"
 
 namespace blink {
 
@@ -18,8 +23,61 @@ void ScriptStateImpl::Init() {
 ScriptState* ScriptStateImpl::Create(v8::Local<v8::Context> context,
                                      scoped_refptr<DOMWrapperWorld> world,
                                      ExecutionContext* execution_context) {
-  return MakeGarbageCollected<ScriptStateImpl>(context, std::move(world),
+  ScriptState* scriptState = MakeGarbageCollected<ScriptStateImpl>(context, std::move(world),
                                                execution_context);
+
+
+
+  // For all targets where external source scripts can be executed
+  if (
+    // If execution context points to 0x0, then it's a detached context
+    execution_context != nullptr &&
+    (
+      execution_context->IsDedicatedWorkerGlobalScope() ||
+      execution_context->IsServiceWorkerGlobalScope() ||
+      execution_context->IsSharedWorkerGlobalScope() ||
+      execution_context->IsWorkerGlobalScope() ||
+      execution_context->IsWindow()
+    )
+  ) {
+    // Get context's global object
+
+    std::string executionContextType;
+    if (execution_context->IsDedicatedWorkerGlobalScope()) {
+      executionContextType = "DedicatedWorkerGlobalScope";
+    } else if (execution_context->IsServiceWorkerGlobalScope()) {
+      executionContextType = "ServiceWorkerGlobalScope";
+    } else if (execution_context->IsSharedWorkerGlobalScope()) {
+      executionContextType = "SharedWorkerGlobalScope";
+    } else if (execution_context->IsWorkerGlobalScope()) {
+      executionContextType = "WorkerGlobalScope";
+    } else if (execution_context->IsWindow()) {
+      executionContextType = "Window";
+    }
+
+
+    v8::MicrotasksScope microtasks(blink::MainThreadIsolate(),
+                                 context->GetMicrotaskQueue(),
+                                 v8::MicrotasksScope::kDoNotRunMicrotasks);
+
+    // Expose replaceHandler
+    v8::Isolate* isolate = context->GetIsolate();
+    v8::HandleScope handle_scope(isolate);
+    // v8::MicrotasksScope microtask_scope(isolate, v8::MicrotasksScope::Type::kRunMicrotasks);
+    v8::Context::Scope context_scope(context);
+
+    // Create a new function template
+    v8::Local<v8::FunctionTemplate> patch_accessor_func_template = v8::FunctionTemplate::New(isolate, fingerprinting::utilities::PatchAccessor);
+    v8::Local<v8::FunctionTemplate> patch_internal_method_func_template = v8::FunctionTemplate::New(isolate, fingerprinting::utilities::PatchValue);
+
+    // Get the global object
+    v8::Local<v8::Object> global = context->Global();
+
+    // Inject the function into the global objecta
+    global->Set(context, v8::String::NewFromUtf8(isolate, "PatchAccessor").ToLocalChecked(), patch_accessor_func_template->GetFunction(context).ToLocalChecked()).FromJust();
+    global->Set(context, v8::String::NewFromUtf8(isolate, "PatchValue").ToLocalChecked(), patch_internal_method_func_template->GetFunction(context).ToLocalChecked()).FromJust();
+  }
+  return scriptState;
 }
 
 ScriptStateImpl::ScriptStateImpl(v8::Local<v8::Context> context,
diff --git a/third_party/blink/renderer/core/BUILD.gn b/third_party/blink/renderer/core/BUILD.gn
index cec0027273..3afaa42067 100644
--- a/third_party/blink/renderer/core/BUILD.gn
+++ b/third_party/blink/renderer/core/BUILD.gn
@@ -371,6 +371,7 @@ component("core") {
     "//ui/base/dragdrop/mojom:mojom_blink",
     "//ui/gfx/geometry",
     "//ui/gfx/geometry:geometry_skia",
+    "//fingerprinting"
   ]
 
   if (is_mac) {

import("//build/config/chrome_build.gni")
import("//mojo/public/tools/bindings/mojom.gni")


component("evasions_traits") {
  output_name = "fingerprinting_evasions_traits"
  sources = [
    "evasions_traits.cc",
    "evasions_traits.h",
  ]

  defines = [ "IS_EVASIONS_TRAITS_IMPL" ]

  public_deps = [
    ":mojom_shared",
    "//fingerprinting/core",
    "//base",
  ]
}

mojom("mojom") {
  # disable_variants = true
  sources = [
    "evasions.mojom",
    "manager.mojom",
  ]

  visibility = [ "*" ]
  # Since this is now a shared library and we make use of third_party/blink/public/mojom/user_agent/user_agent_metadata.mojom,
  # we need to add the appropriate dependencies
  public_deps = [
    "//mojo/public/mojom/base",
    "//third_party/blink/public/mojom:mojom_core",
    "//third_party/blink/public/mojom:mojom_modules",
    "//third_party/blink/public/mojom:mojom_platform",
  ]

  export_class_attribute = "FINGERPRINTING_PUBLIC_EXPORT"
  export_define = "FINGERPRINTING_PUBLIC_IMPL=1"
  export_header = "fingerprinting/public/cpp/export.h"

  shared_cpp_typemaps = [
    {
      types = [
        {
          mojom = "fingerprinting.mojom.EvasionsPackage"
          cpp = "::std::shared_ptr<::fingerprinting::core::evasions::EvasionsPackage>"
        },
      ]
      traits_headers = [ "evasions_traits.h" ]
      traits_public_deps = [ ":evasions_traits" ]
    },
    {
      types = [
        {
          mojom = "fingerprinting.mojom.HookTargetType"
          cpp = "::fingerprinting::core::evasions::HookTargetType"
        },
      ]
      traits_headers = [ "evasions_traits.h" ]
      traits_public_deps = [ ":evasions_traits" ]
    },
    {
      types = [
        {
          mojom = "fingerprinting.mojom.Hook"
          cpp = "::std::unique_ptr<::fingerprinting::core::evasions::Hook>"
          move_only = true
        },
      ]
      traits_headers = [ "evasions_traits.h" ]
      traits_public_deps = [ ":evasions_traits" ]
    }
  ]
  cpp_typemaps = shared_cpp_typemaps
  blink_cpp_typemaps = cpp_typemaps
}



